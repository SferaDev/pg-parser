// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`incremental_sort.sql > line 3 1`] = `
[
  "explain (costs off)
select * from (select * from tenk1 order by four) t order by four, ten
limit 1",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "SelectStmt": {
                "fromClause": [
                  {
                    "RangeSubselect": {
                      "alias": {
                        "aliasname": "t",
                      },
                      "subquery": {
                        "SelectStmt": {
                          "fromClause": [
                            {
                              "RangeVar": {
                                "inh": true,
                                "location": 49,
                                "relname": "tenk1",
                                "relpersistence": "p",
                              },
                            },
                          ],
                          "limitOption": "LIMIT_OPTION_DEFAULT",
                          "op": "SETOP_NONE",
                          "sortClause": [
                            {
                              "SortBy": {
                                "location": -1,
                                "node": {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "four",
                                        },
                                      },
                                    ],
                                    "location": 64,
                                  },
                                },
                                "sortby_dir": "SORTBY_DEFAULT",
                                "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                              },
                            },
                          ],
                          "targetList": [
                            {
                              "ResTarget": {
                                "location": 42,
                                "val": {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "A_Star": {},
                                      },
                                    ],
                                    "location": 42,
                                  },
                                },
                              },
                            },
                          ],
                        },
                      },
                    },
                  },
                ],
                "limitCount": {
                  "A_Const": {
                    "ival": {
                      "ival": 1,
                    },
                    "location": 97,
                  },
                },
                "limitOption": "LIMIT_OPTION_COUNT",
                "op": "SETOP_NONE",
                "sortClause": [
                  {
                    "SortBy": {
                      "location": -1,
                      "node": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "four",
                              },
                            },
                          ],
                          "location": 81,
                        },
                      },
                      "sortby_dir": "SORTBY_DEFAULT",
                      "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                    },
                  },
                  {
                    "SortBy": {
                      "location": -1,
                      "node": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "ten",
                              },
                            },
                          ],
                          "location": 87,
                        },
                      },
                      "sortby_dir": "SORTBY_DEFAULT",
                      "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                    },
                  },
                ],
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 27,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "A_Star": {},
                            },
                          ],
                          "location": 27,
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 9 1`] = `
[
  "set work_mem to '2MB'",
  {
    "stmts": [
      {
        "stmt": {
          "VariableSetStmt": {
            "args": [
              {
                "A_Const": {
                  "location": 16,
                  "sval": {
                    "sval": "2MB",
                  },
                },
              },
            ],
            "kind": "VAR_SET_VALUE",
            "name": "work_mem",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 11 1`] = `
[
  "select * from (select * from tenk1 order by four) t order by four, ten",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeSubselect": {
                  "alias": {
                    "aliasname": "t",
                  },
                  "subquery": {
                    "SelectStmt": {
                      "fromClause": [
                        {
                          "RangeVar": {
                            "inh": true,
                            "location": 29,
                            "relname": "tenk1",
                            "relpersistence": "p",
                          },
                        },
                      ],
                      "limitOption": "LIMIT_OPTION_DEFAULT",
                      "op": "SETOP_NONE",
                      "sortClause": [
                        {
                          "SortBy": {
                            "location": -1,
                            "node": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "four",
                                    },
                                  },
                                ],
                                "location": 44,
                              },
                            },
                            "sortby_dir": "SORTBY_DEFAULT",
                            "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                          },
                        },
                      ],
                      "targetList": [
                        {
                          "ResTarget": {
                            "location": 22,
                            "val": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "A_Star": {},
                                  },
                                ],
                                "location": 22,
                              },
                            },
                          },
                        },
                      ],
                    },
                  },
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "four",
                          },
                        },
                      ],
                      "location": 61,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "ten",
                          },
                        },
                      ],
                      "location": 67,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 14 1`] = `
[
  "create table t(a integer, b integer)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "t",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 15,
                  "typeName": {
                    "location": 17,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 26,
                  "typeName": {
                    "location": 28,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 16 1`] = `
[
  "create or replace function explain_analyze_without_memory(query text)
returns table (out_line text) language plpgsql
as
$$
declare
  line text;
begin
  for line in
    execute 'explain (analyze, costs off, summary off, timing off) ' || query
  loop
    out_line := regexp_replace(line, '\\d+kB', 'NNkB', 'g');
    return next;
  end loop;
end;
$$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "explain_analyze_without_memory",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 100,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
declare
  line text;
begin
  for line in
    execute 'explain (analyze, costs off, summary off, timing off) ' || query
  loop
    out_line := regexp_replace(line, '\\d+kB', 'NNkB', 'g');
    return next;
  end loop;
end;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 117,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 64,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                  "name": "query",
                },
              },
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 94,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_TABLE",
                  "name": "out_line",
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 78,
              "names": [
                {
                  "String": {
                    "sval": "text",
                  },
                },
              ],
              "setof": true,
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 32 1`] = `
[
  "create or replace function explain_analyze_inc_sort_nodes(query text)
returns jsonb language plpgsql
as
$$
declare
  elements jsonb;
  element jsonb;
  matching_nodes jsonb := '[]'::jsonb;
begin
  execute 'explain (analyze, costs off, summary off, timing off, format ''json'') ' || query into strict elements;
  while jsonb_array_length(elements) > 0 loop
    element := elements->0;
    elements := elements - 0;
    case jsonb_typeof(element)
    when 'array' then
      if jsonb_array_length(element) > 0 then
        elements := elements || element;
      end if;
    when 'object' then
      if element ? 'Plan' then
        elements := elements || jsonb_build_array(element->'Plan');
        element := element - 'Plan';
      else
        if element ? 'Plans' then
          elements := elements || jsonb_build_array(element->'Plans');
          element := element - 'Plans';
        end if;
        if (element->>'Node Type')::text = 'Incremental Sort' then
          matching_nodes := matching_nodes || element;
        end if;
      end if;
    end case;
  end loop;
  return matching_nodes;
end;
$$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "explain_analyze_inc_sort_nodes",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 84,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
declare
  elements jsonb;
  element jsonb;
  matching_nodes jsonb := '[]'::jsonb;
begin
  execute 'explain (analyze, costs off, summary off, timing off, format ''json'') ' || query into strict elements;
  while jsonb_array_length(elements) > 0 loop
    element := elements->0;
    elements := elements - 0;
    case jsonb_typeof(element)
    when 'array' then
      if jsonb_array_length(element) > 0 then
        elements := elements || element;
      end if;
    when 'object' then
      if element ? 'Plan' then
        elements := elements || jsonb_build_array(element->'Plan');
        element := element - 'Plan';
      else
        if element ? 'Plans' then
          elements := elements || jsonb_build_array(element->'Plans');
          element := element - 'Plans';
        end if;
        if (element->>'Node Type')::text = 'Incremental Sort' then
          matching_nodes := matching_nodes || element;
        end if;
      end if;
    end case;
  end loop;
  return matching_nodes;
end;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 101,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 64,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                  "name": "query",
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 78,
              "names": [
                {
                  "String": {
                    "sval": "jsonb",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 69 1`] = `
[
  "create or replace function explain_analyze_inc_sort_nodes_without_memory(query text)
returns jsonb language plpgsql
as
$$
declare
  nodes jsonb := '[]'::jsonb;
  node jsonb;
  group_key text;
  space_key text;
begin
  for node in select * from jsonb_array_elements(explain_analyze_inc_sort_nodes(query)) t loop
    for group_key in select unnest(array['Full-sort Groups', 'Pre-sorted Groups']::text[]) t loop
      for space_key in select unnest(array['Sort Space Memory', 'Sort Space Disk']::text[]) t loop
        node := jsonb_set(node, array[group_key, space_key, 'Average Sort Space Used'], '"NN"', false);
        node := jsonb_set(node, array[group_key, space_key, 'Peak Sort Space Used'], '"NN"', false);
      end loop;
    end loop;
    nodes := nodes || node;
  end loop;
  return nodes;
end;
$$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "explain_analyze_inc_sort_nodes_without_memory",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 99,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
declare
  nodes jsonb := '[]'::jsonb;
  node jsonb;
  group_key text;
  space_key text;
begin
  for node in select * from jsonb_array_elements(explain_analyze_inc_sort_nodes(query)) t loop
    for group_key in select unnest(array['Full-sort Groups', 'Pre-sorted Groups']::text[]) t loop
      for space_key in select unnest(array['Sort Space Memory', 'Sort Space Disk']::text[]) t loop
        node := jsonb_set(node, array[group_key, space_key, 'Average Sort Space Used'], '"NN"', false);
        node := jsonb_set(node, array[group_key, space_key, 'Peak Sort Space Used'], '"NN"', false);
      end loop;
    end loop;
    nodes := nodes || node;
  end loop;
  return nodes;
end;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 116,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 79,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                  "name": "query",
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 93,
              "names": [
                {
                  "String": {
                    "sval": "jsonb",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 92 1`] = `
[
  "create or replace function explain_analyze_inc_sort_nodes_verify_invariants(query text)
returns bool language plpgsql
as
$$
declare
  node jsonb;
  group_stats jsonb;
  group_key text;
  space_key text;
begin
  for node in select * from jsonb_array_elements(explain_analyze_inc_sort_nodes(query)) t loop
    for group_key in select unnest(array['Full-sort Groups', 'Pre-sorted Groups']::text[]) t loop
      group_stats := node->group_key;
      for space_key in select unnest(array['Sort Space Memory', 'Sort Space Disk']::text[]) t loop
        if (group_stats->space_key->'Peak Sort Space Used')::bigint < (group_stats->space_key->'Peak Sort Space Used')::bigint then
          raise exception '% has invalid max space < average space', group_key;
        end if;
      end loop;
    end loop;
  end loop;
  return true;
end;
$$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "explain_analyze_inc_sort_nodes_verify_invariants",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 101,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
declare
  node jsonb;
  group_stats jsonb;
  group_key text;
  space_key text;
begin
  for node in select * from jsonb_array_elements(explain_analyze_inc_sort_nodes(query)) t loop
    for group_key in select unnest(array['Full-sort Groups', 'Pre-sorted Groups']::text[]) t loop
      group_stats := node->group_key;
      for space_key in select unnest(array['Sort Space Memory', 'Sort Space Disk']::text[]) t loop
        if (group_stats->space_key->'Peak Sort Space Used')::bigint < (group_stats->space_key->'Peak Sort Space Used')::bigint then
          raise exception '% has invalid max space < average space', group_key;
        end if;
      end loop;
    end loop;
  end loop;
  return true;
end;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 118,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 82,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                  "name": "query",
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 96,
              "names": [
                {
                  "String": {
                    "sval": "bool",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 117 1`] = `
[
  "insert into t(a, b) select i/100 + 1, i + 1 from generate_series(0, 999) n(i)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 14,
                  "name": "a",
                },
              },
              {
                "ResTarget": {
                  "location": 17,
                  "name": "b",
                },
              },
            ],
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "t",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "fromClause": [
                  {
                    "RangeFunction": {
                      "alias": {
                        "aliasname": "n",
                        "colnames": [
                          {
                            "String": {
                              "sval": "i",
                            },
                          },
                        ],
                      },
                      "functions": [
                        {
                          "List": {
                            "items": [
                              {
                                "FuncCall": {
                                  "args": [
                                    {
                                      "A_Const": {
                                        "ival": {},
                                        "location": 65,
                                      },
                                    },
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 999,
                                        },
                                        "location": 68,
                                      },
                                    },
                                  ],
                                  "funcformat": "COERCE_EXPLICIT_CALL",
                                  "funcname": [
                                    {
                                      "String": {
                                        "sval": "generate_series",
                                      },
                                    },
                                  ],
                                  "location": 49,
                                },
                              },
                              {},
                            ],
                          },
                        },
                      ],
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 27,
                      "val": {
                        "A_Expr": {
                          "kind": "AEXPR_OP",
                          "lexpr": {
                            "A_Expr": {
                              "kind": "AEXPR_OP",
                              "lexpr": {
                                "ColumnRef": {
                                  "fields": [
                                    {
                                      "String": {
                                        "sval": "i",
                                      },
                                    },
                                  ],
                                  "location": 27,
                                },
                              },
                              "location": 28,
                              "name": [
                                {
                                  "String": {
                                    "sval": "/",
                                  },
                                },
                              ],
                              "rexpr": {
                                "A_Const": {
                                  "ival": {
                                    "ival": 100,
                                  },
                                  "location": 29,
                                },
                              },
                            },
                          },
                          "location": 33,
                          "name": [
                            {
                              "String": {
                                "sval": "+",
                              },
                            },
                          ],
                          "rexpr": {
                            "A_Const": {
                              "ival": {
                                "ival": 1,
                              },
                              "location": 35,
                            },
                          },
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 38,
                      "val": {
                        "A_Expr": {
                          "kind": "AEXPR_OP",
                          "lexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "i",
                                  },
                                },
                              ],
                              "location": 38,
                            },
                          },
                          "location": 40,
                          "name": [
                            {
                              "String": {
                                "sval": "+",
                              },
                            },
                          ],
                          "rexpr": {
                            "A_Const": {
                              "ival": {
                                "ival": 1,
                              },
                              "location": 42,
                            },
                          },
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 137 1`] = `
[
  "select explain_analyze_without_memory('select * from (select * from t order by a) s order by a, b limit 55')",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "A_Const": {
                            "location": 38,
                            "sval": {
                              "sval": "select * from (select * from t order by a) s order by a, b limit 55",
                            },
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "explain_analyze_without_memory",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 143 1`] = `
[
  "insert into t(a, b) select (case when i < 5 then i else 9 end), i from generate_series(1, 1000) n(i)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 14,
                  "name": "a",
                },
              },
              {
                "ResTarget": {
                  "location": 17,
                  "name": "b",
                },
              },
            ],
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "t",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "fromClause": [
                  {
                    "RangeFunction": {
                      "alias": {
                        "aliasname": "n",
                        "colnames": [
                          {
                            "String": {
                              "sval": "i",
                            },
                          },
                        ],
                      },
                      "functions": [
                        {
                          "List": {
                            "items": [
                              {
                                "FuncCall": {
                                  "args": [
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 1,
                                        },
                                        "location": 87,
                                      },
                                    },
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 1000,
                                        },
                                        "location": 90,
                                      },
                                    },
                                  ],
                                  "funcformat": "COERCE_EXPLICIT_CALL",
                                  "funcname": [
                                    {
                                      "String": {
                                        "sval": "generate_series",
                                      },
                                    },
                                  ],
                                  "location": 71,
                                },
                              },
                              {},
                            ],
                          },
                        },
                      ],
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 27,
                      "val": {
                        "CaseExpr": {
                          "args": [
                            {
                              "CaseWhen": {
                                "expr": {
                                  "A_Expr": {
                                    "kind": "AEXPR_OP",
                                    "lexpr": {
                                      "ColumnRef": {
                                        "fields": [
                                          {
                                            "String": {
                                              "sval": "i",
                                            },
                                          },
                                        ],
                                        "location": 38,
                                      },
                                    },
                                    "location": 40,
                                    "name": [
                                      {
                                        "String": {
                                          "sval": "<",
                                        },
                                      },
                                    ],
                                    "rexpr": {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 5,
                                        },
                                        "location": 42,
                                      },
                                    },
                                  },
                                },
                                "location": 33,
                                "result": {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "i",
                                        },
                                      },
                                    ],
                                    "location": 49,
                                  },
                                },
                              },
                            },
                          ],
                          "defresult": {
                            "A_Const": {
                              "ival": {
                                "ival": 9,
                              },
                              "location": 56,
                            },
                          },
                          "location": 28,
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 64,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "i",
                              },
                            },
                          ],
                          "location": 64,
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 151 1`] = `
[
  "explain (costs off) select * from (select * from t order by a) s order by a, b limit 5",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "SelectStmt": {
                "fromClause": [
                  {
                    "RangeSubselect": {
                      "alias": {
                        "aliasname": "s",
                      },
                      "subquery": {
                        "SelectStmt": {
                          "fromClause": [
                            {
                              "RangeVar": {
                                "inh": true,
                                "location": 49,
                                "relname": "t",
                                "relpersistence": "p",
                              },
                            },
                          ],
                          "limitOption": "LIMIT_OPTION_DEFAULT",
                          "op": "SETOP_NONE",
                          "sortClause": [
                            {
                              "SortBy": {
                                "location": -1,
                                "node": {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "a",
                                        },
                                      },
                                    ],
                                    "location": 60,
                                  },
                                },
                                "sortby_dir": "SORTBY_DEFAULT",
                                "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                              },
                            },
                          ],
                          "targetList": [
                            {
                              "ResTarget": {
                                "location": 42,
                                "val": {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "A_Star": {},
                                      },
                                    ],
                                    "location": 42,
                                  },
                                },
                              },
                            },
                          ],
                        },
                      },
                    },
                  },
                ],
                "limitCount": {
                  "A_Const": {
                    "ival": {
                      "ival": 5,
                    },
                    "location": 85,
                  },
                },
                "limitOption": "LIMIT_OPTION_COUNT",
                "op": "SETOP_NONE",
                "sortClause": [
                  {
                    "SortBy": {
                      "location": -1,
                      "node": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "a",
                              },
                            },
                          ],
                          "location": 74,
                        },
                      },
                      "sortby_dir": "SORTBY_DEFAULT",
                      "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                    },
                  },
                  {
                    "SortBy": {
                      "location": -1,
                      "node": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "b",
                              },
                            },
                          ],
                          "location": 77,
                        },
                      },
                      "sortby_dir": "SORTBY_DEFAULT",
                      "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                    },
                  },
                ],
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 27,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "A_Star": {},
                            },
                          ],
                          "location": 27,
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 155 1`] = `
[
  "begin",
  {
    "stmts": [
      {
        "stmt": {
          "TransactionStmt": {
            "kind": "TRANS_STMT_BEGIN",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 158 1`] = `
[
  "set local enable_hashjoin = off",
  {
    "stmts": [
      {
        "stmt": {
          "VariableSetStmt": {
            "args": [
              {
                "A_Const": {
                  "location": 28,
                  "sval": {
                    "sval": "off",
                  },
                },
              },
            ],
            "is_local": true,
            "kind": "VAR_SET_VALUE",
            "name": "enable_hashjoin",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 172 1`] = `
[
  "insert into t(a, b) select i / 10, i from generate_series(1, 1000) n(i)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 14,
                  "name": "a",
                },
              },
              {
                "ResTarget": {
                  "location": 17,
                  "name": "b",
                },
              },
            ],
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "t",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "fromClause": [
                  {
                    "RangeFunction": {
                      "alias": {
                        "aliasname": "n",
                        "colnames": [
                          {
                            "String": {
                              "sval": "i",
                            },
                          },
                        ],
                      },
                      "functions": [
                        {
                          "List": {
                            "items": [
                              {
                                "FuncCall": {
                                  "args": [
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 1,
                                        },
                                        "location": 58,
                                      },
                                    },
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 1000,
                                        },
                                        "location": 61,
                                      },
                                    },
                                  ],
                                  "funcformat": "COERCE_EXPLICIT_CALL",
                                  "funcname": [
                                    {
                                      "String": {
                                        "sval": "generate_series",
                                      },
                                    },
                                  ],
                                  "location": 42,
                                },
                              },
                              {},
                            ],
                          },
                        },
                      ],
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 27,
                      "val": {
                        "A_Expr": {
                          "kind": "AEXPR_OP",
                          "lexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "i",
                                  },
                                },
                              ],
                              "location": 27,
                            },
                          },
                          "location": 29,
                          "name": [
                            {
                              "String": {
                                "sval": "/",
                              },
                            },
                          ],
                          "rexpr": {
                            "A_Const": {
                              "ival": {
                                "ival": 10,
                              },
                              "location": 31,
                            },
                          },
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 35,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "i",
                              },
                            },
                          ],
                          "location": 35,
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 187 1`] = `
[
  "insert into t(a, b) select i, i from generate_series(1, 1000) n(i)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 14,
                  "name": "a",
                },
              },
              {
                "ResTarget": {
                  "location": 17,
                  "name": "b",
                },
              },
            ],
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "t",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "fromClause": [
                  {
                    "RangeFunction": {
                      "alias": {
                        "aliasname": "n",
                        "colnames": [
                          {
                            "String": {
                              "sval": "i",
                            },
                          },
                        ],
                      },
                      "functions": [
                        {
                          "List": {
                            "items": [
                              {
                                "FuncCall": {
                                  "args": [
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 1,
                                        },
                                        "location": 53,
                                      },
                                    },
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 1000,
                                        },
                                        "location": 56,
                                      },
                                    },
                                  ],
                                  "funcformat": "COERCE_EXPLICIT_CALL",
                                  "funcname": [
                                    {
                                      "String": {
                                        "sval": "generate_series",
                                      },
                                    },
                                  ],
                                  "location": 37,
                                },
                              },
                              {},
                            ],
                          },
                        },
                      ],
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 27,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "i",
                              },
                            },
                          ],
                          "location": 27,
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 30,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "i",
                              },
                            },
                          ],
                          "location": 30,
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 201 1`] = `
[
  "drop table t",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "t",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 204 1`] = `
[
  "set min_parallel_table_scan_size = '1kB'",
  {
    "stmts": [
      {
        "stmt": {
          "VariableSetStmt": {
            "args": [
              {
                "A_Const": {
                  "location": 35,
                  "sval": {
                    "sval": "1kB",
                  },
                },
              },
            ],
            "kind": "VAR_SET_VALUE",
            "name": "min_parallel_table_scan_size",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 210 1`] = `
[
  "create table t (a int, b int, c int)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "t",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 16,
                  "typeName": {
                    "location": 18,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 23,
                  "typeName": {
                    "location": 25,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "c",
                  "is_local": true,
                  "location": 30,
                  "typeName": {
                    "location": 32,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 215 1`] = `
[
  "set enable_incremental_sort = off",
  {
    "stmts": [
      {
        "stmt": {
          "VariableSetStmt": {
            "args": [
              {
                "A_Const": {
                  "location": 30,
                  "sval": {
                    "sval": "off",
                  },
                },
              },
            ],
            "kind": "VAR_SET_VALUE",
            "name": "enable_incremental_sort",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 222 1`] = `
[
  "set enable_hashagg to off",
  {
    "stmts": [
      {
        "stmt": {
          "VariableSetStmt": {
            "args": [
              {
                "A_Const": {
                  "location": 22,
                  "sval": {
                    "sval": "off",
                  },
                },
              },
            ],
            "kind": "VAR_SET_VALUE",
            "name": "enable_hashagg",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 227 1`] = `
[
  "explain (costs off) select distinct a,b from t",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "SelectStmt": {
                "distinctClause": [
                  {},
                ],
                "fromClause": [
                  {
                    "RangeVar": {
                      "inh": true,
                      "location": 45,
                      "relname": "t",
                      "relpersistence": "p",
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 36,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "a",
                              },
                            },
                          ],
                          "location": 36,
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 38,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "b",
                              },
                            },
                          ],
                          "location": 38,
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 244 1`] = `
[
  "explain (costs off) select distinct sub.unique1, stringu1
from tenk1, lateral (select tenk1.unique1 from generate_series(1, 1000)) as sub",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "SelectStmt": {
                "distinctClause": [
                  {},
                ],
                "fromClause": [
                  {
                    "RangeVar": {
                      "inh": true,
                      "location": 63,
                      "relname": "tenk1",
                      "relpersistence": "p",
                    },
                  },
                  {
                    "RangeSubselect": {
                      "alias": {
                        "aliasname": "sub",
                      },
                      "lateral": true,
                      "subquery": {
                        "SelectStmt": {
                          "fromClause": [
                            {
                              "RangeFunction": {
                                "functions": [
                                  {
                                    "List": {
                                      "items": [
                                        {
                                          "FuncCall": {
                                            "args": [
                                              {
                                                "A_Const": {
                                                  "ival": {
                                                    "ival": 1,
                                                  },
                                                  "location": 121,
                                                },
                                              },
                                              {
                                                "A_Const": {
                                                  "ival": {
                                                    "ival": 1000,
                                                  },
                                                  "location": 124,
                                                },
                                              },
                                            ],
                                            "funcformat": "COERCE_EXPLICIT_CALL",
                                            "funcname": [
                                              {
                                                "String": {
                                                  "sval": "generate_series",
                                                },
                                              },
                                            ],
                                            "location": 105,
                                          },
                                        },
                                        {},
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                          "limitOption": "LIMIT_OPTION_DEFAULT",
                          "op": "SETOP_NONE",
                          "targetList": [
                            {
                              "ResTarget": {
                                "location": 86,
                                "val": {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "tenk1",
                                        },
                                      },
                                      {
                                        "String": {
                                          "sval": "unique1",
                                        },
                                      },
                                    ],
                                    "location": 86,
                                  },
                                },
                              },
                            },
                          ],
                        },
                      },
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 36,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "sub",
                              },
                            },
                            {
                              "String": {
                                "sval": "unique1",
                              },
                            },
                          ],
                          "location": 36,
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 49,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "stringu1",
                              },
                            },
                          ],
                          "location": 49,
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 250 1`] = `
[
  "explain (costs off) select distinct sub.unique1, md5(stringu1)
from tenk1, lateral (select tenk1.unique1 from generate_series(1, 1000)) as sub",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "SelectStmt": {
                "distinctClause": [
                  {},
                ],
                "fromClause": [
                  {
                    "RangeVar": {
                      "inh": true,
                      "location": 68,
                      "relname": "tenk1",
                      "relpersistence": "p",
                    },
                  },
                  {
                    "RangeSubselect": {
                      "alias": {
                        "aliasname": "sub",
                      },
                      "lateral": true,
                      "subquery": {
                        "SelectStmt": {
                          "fromClause": [
                            {
                              "RangeFunction": {
                                "functions": [
                                  {
                                    "List": {
                                      "items": [
                                        {
                                          "FuncCall": {
                                            "args": [
                                              {
                                                "A_Const": {
                                                  "ival": {
                                                    "ival": 1,
                                                  },
                                                  "location": 126,
                                                },
                                              },
                                              {
                                                "A_Const": {
                                                  "ival": {
                                                    "ival": 1000,
                                                  },
                                                  "location": 129,
                                                },
                                              },
                                            ],
                                            "funcformat": "COERCE_EXPLICIT_CALL",
                                            "funcname": [
                                              {
                                                "String": {
                                                  "sval": "generate_series",
                                                },
                                              },
                                            ],
                                            "location": 110,
                                          },
                                        },
                                        {},
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                          "limitOption": "LIMIT_OPTION_DEFAULT",
                          "op": "SETOP_NONE",
                          "targetList": [
                            {
                              "ResTarget": {
                                "location": 91,
                                "val": {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "tenk1",
                                        },
                                      },
                                      {
                                        "String": {
                                          "sval": "unique1",
                                        },
                                      },
                                    ],
                                    "location": 91,
                                  },
                                },
                              },
                            },
                          ],
                        },
                      },
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 36,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "sub",
                              },
                            },
                            {
                              "String": {
                                "sval": "unique1",
                              },
                            },
                          ],
                          "location": 36,
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 49,
                      "val": {
                        "FuncCall": {
                          "args": [
                            {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "stringu1",
                                    },
                                  },
                                ],
                                "location": 53,
                              },
                            },
                          ],
                          "funcformat": "COERCE_EXPLICIT_CALL",
                          "funcname": [
                            {
                              "String": {
                                "sval": "md5",
                              },
                            },
                          ],
                          "location": 49,
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 257 1`] = `
[
  "explain (costs off) select count(*)
from tenk1 t1
join tenk1 t2 on t1.unique1 = t2.unique2
join tenk1 t3 on t2.unique1 = t3.unique1
order by count(*)",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "SelectStmt": {
                "fromClause": [
                  {
                    "JoinExpr": {
                      "jointype": "JOIN_INNER",
                      "larg": {
                        "JoinExpr": {
                          "jointype": "JOIN_INNER",
                          "larg": {
                            "RangeVar": {
                              "alias": {
                                "aliasname": "t1",
                              },
                              "inh": true,
                              "location": 41,
                              "relname": "tenk1",
                              "relpersistence": "p",
                            },
                          },
                          "quals": {
                            "A_Expr": {
                              "kind": "AEXPR_OP",
                              "lexpr": {
                                "ColumnRef": {
                                  "fields": [
                                    {
                                      "String": {
                                        "sval": "t1",
                                      },
                                    },
                                    {
                                      "String": {
                                        "sval": "unique1",
                                      },
                                    },
                                  ],
                                  "location": 67,
                                },
                              },
                              "location": 78,
                              "name": [
                                {
                                  "String": {
                                    "sval": "=",
                                  },
                                },
                              ],
                              "rexpr": {
                                "ColumnRef": {
                                  "fields": [
                                    {
                                      "String": {
                                        "sval": "t2",
                                      },
                                    },
                                    {
                                      "String": {
                                        "sval": "unique2",
                                      },
                                    },
                                  ],
                                  "location": 80,
                                },
                              },
                            },
                          },
                          "rarg": {
                            "RangeVar": {
                              "alias": {
                                "aliasname": "t2",
                              },
                              "inh": true,
                              "location": 55,
                              "relname": "tenk1",
                              "relpersistence": "p",
                            },
                          },
                        },
                      },
                      "quals": {
                        "A_Expr": {
                          "kind": "AEXPR_OP",
                          "lexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "t2",
                                  },
                                },
                                {
                                  "String": {
                                    "sval": "unique1",
                                  },
                                },
                              ],
                              "location": 108,
                            },
                          },
                          "location": 119,
                          "name": [
                            {
                              "String": {
                                "sval": "=",
                              },
                            },
                          ],
                          "rexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "t3",
                                  },
                                },
                                {
                                  "String": {
                                    "sval": "unique1",
                                  },
                                },
                              ],
                              "location": 121,
                            },
                          },
                        },
                      },
                      "rarg": {
                        "RangeVar": {
                          "alias": {
                            "aliasname": "t3",
                          },
                          "inh": true,
                          "location": 96,
                          "relname": "tenk1",
                          "relpersistence": "p",
                        },
                      },
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "sortClause": [
                  {
                    "SortBy": {
                      "location": -1,
                      "node": {
                        "FuncCall": {
                          "agg_star": true,
                          "funcformat": "COERCE_EXPLICIT_CALL",
                          "funcname": [
                            {
                              "String": {
                                "sval": "count",
                              },
                            },
                          ],
                          "location": 141,
                        },
                      },
                      "sortby_dir": "SORTBY_DEFAULT",
                      "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                    },
                  },
                ],
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 27,
                      "val": {
                        "FuncCall": {
                          "agg_star": true,
                          "funcformat": "COERCE_EXPLICIT_CALL",
                          "funcname": [
                            {
                              "String": {
                                "sval": "count",
                              },
                            },
                          ],
                          "location": 27,
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 264 1`] = `
[
  "explain (costs off) select distinct
  unique1,
  (select t.unique1 from tenk1 where tenk1.unique1 = t.unique1)
from tenk1 t, generate_series(1, 1000)",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "SelectStmt": {
                "distinctClause": [
                  {},
                ],
                "fromClause": [
                  {
                    "RangeVar": {
                      "alias": {
                        "aliasname": "t",
                      },
                      "inh": true,
                      "location": 116,
                      "relname": "tenk1",
                      "relpersistence": "p",
                    },
                  },
                  {
                    "RangeFunction": {
                      "functions": [
                        {
                          "List": {
                            "items": [
                              {
                                "FuncCall": {
                                  "args": [
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 1,
                                        },
                                        "location": 141,
                                      },
                                    },
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 1000,
                                        },
                                        "location": 144,
                                      },
                                    },
                                  ],
                                  "funcformat": "COERCE_EXPLICIT_CALL",
                                  "funcname": [
                                    {
                                      "String": {
                                        "sval": "generate_series",
                                      },
                                    },
                                  ],
                                  "location": 125,
                                },
                              },
                              {},
                            ],
                          },
                        },
                      ],
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 38,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "unique1",
                              },
                            },
                          ],
                          "location": 38,
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 49,
                      "val": {
                        "SubLink": {
                          "location": 49,
                          "subLinkType": "EXPR_SUBLINK",
                          "subselect": {
                            "SelectStmt": {
                              "fromClause": [
                                {
                                  "RangeVar": {
                                    "inh": true,
                                    "location": 72,
                                    "relname": "tenk1",
                                    "relpersistence": "p",
                                  },
                                },
                              ],
                              "limitOption": "LIMIT_OPTION_DEFAULT",
                              "op": "SETOP_NONE",
                              "targetList": [
                                {
                                  "ResTarget": {
                                    "location": 57,
                                    "val": {
                                      "ColumnRef": {
                                        "fields": [
                                          {
                                            "String": {
                                              "sval": "t",
                                            },
                                          },
                                          {
                                            "String": {
                                              "sval": "unique1",
                                            },
                                          },
                                        ],
                                        "location": 57,
                                      },
                                    },
                                  },
                                },
                              ],
                              "whereClause": {
                                "A_Expr": {
                                  "kind": "AEXPR_OP",
                                  "lexpr": {
                                    "ColumnRef": {
                                      "fields": [
                                        {
                                          "String": {
                                            "sval": "tenk1",
                                          },
                                        },
                                        {
                                          "String": {
                                            "sval": "unique1",
                                          },
                                        },
                                      ],
                                      "location": 84,
                                    },
                                  },
                                  "location": 98,
                                  "name": [
                                    {
                                      "String": {
                                        "sval": "=",
                                      },
                                    },
                                  ],
                                  "rexpr": {
                                    "ColumnRef": {
                                      "fields": [
                                        {
                                          "String": {
                                            "sval": "t",
                                          },
                                        },
                                        {
                                          "String": {
                                            "sval": "unique1",
                                          },
                                        },
                                      ],
                                      "location": 100,
                                    },
                                  },
                                },
                              },
                            },
                          },
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`incremental_sort.sql > line 274 1`] = `
[
  "explain (costs off) select distinct sub.unique1, stringu1 || random()::text
from tenk1, lateral (select tenk1.unique1 from generate_series(1, 1000)) as sub",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "SelectStmt": {
                "distinctClause": [
                  {},
                ],
                "fromClause": [
                  {
                    "RangeVar": {
                      "inh": true,
                      "location": 81,
                      "relname": "tenk1",
                      "relpersistence": "p",
                    },
                  },
                  {
                    "RangeSubselect": {
                      "alias": {
                        "aliasname": "sub",
                      },
                      "lateral": true,
                      "subquery": {
                        "SelectStmt": {
                          "fromClause": [
                            {
                              "RangeFunction": {
                                "functions": [
                                  {
                                    "List": {
                                      "items": [
                                        {
                                          "FuncCall": {
                                            "args": [
                                              {
                                                "A_Const": {
                                                  "ival": {
                                                    "ival": 1,
                                                  },
                                                  "location": 139,
                                                },
                                              },
                                              {
                                                "A_Const": {
                                                  "ival": {
                                                    "ival": 1000,
                                                  },
                                                  "location": 142,
                                                },
                                              },
                                            ],
                                            "funcformat": "COERCE_EXPLICIT_CALL",
                                            "funcname": [
                                              {
                                                "String": {
                                                  "sval": "generate_series",
                                                },
                                              },
                                            ],
                                            "location": 123,
                                          },
                                        },
                                        {},
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                          "limitOption": "LIMIT_OPTION_DEFAULT",
                          "op": "SETOP_NONE",
                          "targetList": [
                            {
                              "ResTarget": {
                                "location": 104,
                                "val": {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "tenk1",
                                        },
                                      },
                                      {
                                        "String": {
                                          "sval": "unique1",
                                        },
                                      },
                                    ],
                                    "location": 104,
                                  },
                                },
                              },
                            },
                          ],
                        },
                      },
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 36,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "sub",
                              },
                            },
                            {
                              "String": {
                                "sval": "unique1",
                              },
                            },
                          ],
                          "location": 36,
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 49,
                      "val": {
                        "A_Expr": {
                          "kind": "AEXPR_OP",
                          "lexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "stringu1",
                                  },
                                },
                              ],
                              "location": 49,
                            },
                          },
                          "location": 58,
                          "name": [
                            {
                              "String": {
                                "sval": "||",
                              },
                            },
                          ],
                          "rexpr": {
                            "TypeCast": {
                              "arg": {
                                "FuncCall": {
                                  "funcformat": "COERCE_EXPLICIT_CALL",
                                  "funcname": [
                                    {
                                      "String": {
                                        "sval": "random",
                                      },
                                    },
                                  ],
                                  "location": 61,
                                },
                              },
                              "location": 69,
                              "typeName": {
                                "location": 71,
                                "names": [
                                  {
                                    "String": {
                                      "sval": "text",
                                    },
                                  },
                                ],
                                "typemod": -1,
                              },
                            },
                          },
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;
