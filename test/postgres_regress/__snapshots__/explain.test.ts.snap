// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`explain.sql > line 37 1`] = `
[
  "create function explain_filter_to_json(text) returns jsonb
language plpgsql as
$$
declare
    data text := '';
    ln text;
begin
    for ln in execute $1
    loop
        -- Replace any numeric word with just '0'
        ln := regexp_replace(ln, '\\m\\d+\\M', '0', 'g');
        data := data || ln;
    end loop;
    return data::jsonb;
end;
$$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "explain_filter_to_json",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 59,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
declare
    data text := '';
    ln text;
begin
    for ln in execute $1
    loop
        -- Replace any numeric word with just '0'
        ln := regexp_replace(ln, '\\m\\d+\\M', '0', 'g');
        data := data || ln;
    end loop;
    return data::jsonb;
end;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 76,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 39,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
            "returnType": {
              "location": 53,
              "names": [
                {
                  "String": {
                    "sval": "jsonb",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`explain.sql > line 56 1`] = `
[
  "set jit = off",
  {
    "stmts": [
      {
        "stmt": {
          "VariableSetStmt": {
            "args": [
              {
                "A_Const": {
                  "location": 10,
                  "sval": {
                    "sval": "off",
                  },
                },
              },
            ],
            "kind": "VAR_SET_VALUE",
            "name": "jit",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`explain.sql > line 60 1`] = `
[
  "set track_io_timing = off",
  {
    "stmts": [
      {
        "stmt": {
          "VariableSetStmt": {
            "args": [
              {
                "A_Const": {
                  "location": 22,
                  "sval": {
                    "sval": "off",
                  },
                },
              },
            ],
            "kind": "VAR_SET_VALUE",
            "name": "track_io_timing",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`explain.sql > line 95 1`] = `
[
  "select explain_filter('explain (analyze, generic_plan) select unique1 from tenk1 where thousand = $1')",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "A_Const": {
                            "location": 22,
                            "sval": {
                              "sval": "explain (analyze, generic_plan) select unique1 from tenk1 where thousand = $1",
                            },
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "explain_filter",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`explain.sql > line 100 1`] = `
[
  "create table gen_part (
  key1 integer not null,
  key2 integer not null
) partition by list (key1)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "partspec": {
              "location": 75,
              "partParams": [
                {
                  "PartitionElem": {
                    "location": 94,
                    "name": "key1",
                  },
                },
              ],
              "strategy": "PARTITION_STRATEGY_LIST",
            },
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "gen_part",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "key1",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_NOTNULL",
                        "location": 39,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 26,
                  "typeName": {
                    "location": 31,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "key2",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_NOTNULL",
                        "location": 64,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 51,
                  "typeName": {
                    "location": 56,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`explain.sql > line 127 1`] = `
[
  "set parallel_setup_cost=0",
  {
    "stmts": [
      {
        "stmt": {
          "VariableSetStmt": {
            "args": [
              {
                "A_Const": {
                  "ival": {},
                  "location": 24,
                },
              },
            ],
            "kind": "VAR_SET_VALUE",
            "name": "parallel_setup_cost",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`explain.sql > line 132 1`] = `
[
  "select jsonb_pretty(
  explain_filter_to_json('explain (analyze, verbose, buffers, format json)
                         select * from tenk1 order by tenthous')
  -- remove "Workers" node of the Seq Scan plan node
  #- '{0,Plan,Plans,0,Plans,0,Workers}'
  -- remove "Workers" node of the Sort plan node
  #- '{0,Plan,Plans,0,Workers}'
  -- Also remove its sort-type fields, as those aren't 100% stable
  #- '{0,Plan,Plans,0,Sort Method}'
  #- '{0,Plan,Plans,0,Sort Space Type}'
)",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "A_Expr": {
                                "kind": "AEXPR_OP",
                                "lexpr": {
                                  "A_Expr": {
                                    "kind": "AEXPR_OP",
                                    "lexpr": {
                                      "A_Expr": {
                                        "kind": "AEXPR_OP",
                                        "lexpr": {
                                          "FuncCall": {
                                            "args": [
                                              {
                                                "A_Const": {
                                                  "location": 46,
                                                  "sval": {
                                                    "sval": "explain (analyze, verbose, buffers, format json)
                         select * from tenk1 order by tenthous",
                                                  },
                                                },
                                              },
                                            ],
                                            "funcformat": "COERCE_EXPLICIT_CALL",
                                            "funcname": [
                                              {
                                                "String": {
                                                  "sval": "explain_filter_to_json",
                                                },
                                              },
                                            ],
                                            "location": 23,
                                          },
                                        },
                                        "location": 216,
                                        "name": [
                                          {
                                            "String": {
                                              "sval": "#-",
                                            },
                                          },
                                        ],
                                        "rexpr": {
                                          "A_Const": {
                                            "location": 219,
                                            "sval": {
                                              "sval": "{0,Plan,Plans,0,Plans,0,Workers}",
                                            },
                                          },
                                        },
                                      },
                                    },
                                    "location": 305,
                                    "name": [
                                      {
                                        "String": {
                                          "sval": "#-",
                                        },
                                      },
                                    ],
                                    "rexpr": {
                                      "A_Const": {
                                        "location": 308,
                                        "sval": {
                                          "sval": "{0,Plan,Plans,0,Workers}",
                                        },
                                      },
                                    },
                                  },
                                },
                                "location": 404,
                                "name": [
                                  {
                                    "String": {
                                      "sval": "#-",
                                    },
                                  },
                                ],
                                "rexpr": {
                                  "A_Const": {
                                    "location": 407,
                                    "sval": {
                                      "sval": "{0,Plan,Plans,0,Sort Method}",
                                    },
                                  },
                                },
                              },
                            },
                            "location": 440,
                            "name": [
                              {
                                "String": {
                                  "sval": "#-",
                                },
                              },
                            ],
                            "rexpr": {
                              "A_Const": {
                                "location": 443,
                                "sval": {
                                  "sval": "{0,Plan,Plans,0,Sort Space Type}",
                                },
                              },
                            },
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "jsonb_pretty",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`explain.sql > line 144 1`] = `
[
  "rollback",
  {
    "stmts": [
      {
        "stmt": {
          "TransactionStmt": {
            "kind": "TRANS_STMT_ROLLBACK",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`explain.sql > line 147 1`] = `
[
  "create temp table t1(f1 float8)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 18,
              "relname": "t1",
              "relpersistence": "t",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "f1",
                  "is_local": true,
                  "location": 21,
                  "typeName": {
                    "location": 24,
                    "names": [
                      {
                        "String": {
                          "sval": "float8",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`explain.sql > line 149 1`] = `
[
  "create function pg_temp.mysin(float8) returns float8 language plpgsql
as 'begin return sin($1); end'",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "pg_temp",
                },
              },
              {
                "String": {
                  "sval": "mysin",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 53,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "begin return sin($1); end",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 70,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 30,
                    "names": [
                      {
                        "String": {
                          "sval": "float8",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
            "returnType": {
              "location": 46,
              "names": [
                {
                  "String": {
                    "sval": "float8",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`explain.sql > line 155 1`] = `
[
  "set compute_query_id = on",
  {
    "stmts": [
      {
        "stmt": {
          "VariableSetStmt": {
            "args": [
              {
                "A_Const": {
                  "location": 23,
                  "sval": {
                    "sval": "on",
                  },
                },
              },
            ],
            "kind": "VAR_SET_VALUE",
            "name": "compute_query_id",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;
