// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`copy.sql > line 17 1`] = `
[
  "insert into copytest values('DOS',E'abc\\r\\ndef',1)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "copytest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 28,
                            "sval": {
                              "sval": "DOS",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "location": 34,
                            "sval": {
                              "sval": "abc
def",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 48,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 25 1`] = `
[
  "create temp table copytest2 (like copytest)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 18,
              "relname": "copytest2",
              "relpersistence": "t",
            },
            "tableElts": [
              {
                "TableLikeClause": {
                  "relation": {
                    "inh": true,
                    "location": 34,
                    "relname": "copytest",
                    "relpersistence": "p",
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 29 1`] = `
[
  "select * from copytest except select * from copytest2",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "larg": {
              "fromClause": [
                {
                  "RangeVar": {
                    "inh": true,
                    "location": 14,
                    "relname": "copytest",
                    "relpersistence": "p",
                  },
                },
              ],
              "limitOption": "LIMIT_OPTION_DEFAULT",
              "op": "SETOP_NONE",
              "targetList": [
                {
                  "ResTarget": {
                    "location": 7,
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "A_Star": {},
                          },
                        ],
                        "location": 7,
                      },
                    },
                  },
                },
              ],
            },
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_EXCEPT",
            "rarg": {
              "fromClause": [
                {
                  "RangeVar": {
                    "inh": true,
                    "location": 44,
                    "relname": "copytest2",
                    "relpersistence": "p",
                  },
                },
              ],
              "limitOption": "LIMIT_OPTION_DEFAULT",
              "op": "SETOP_NONE",
              "targetList": [
                {
                  "ResTarget": {
                    "location": 37,
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "A_Star": {},
                          },
                        ],
                        "location": 37,
                      },
                    },
                  },
                },
              ],
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 31 1`] = `
[
  "truncate copytest2",
  {
    "stmts": [
      {
        "stmt": {
          "TruncateStmt": {
            "behavior": "DROP_RESTRICT",
            "relations": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 9,
                  "relname": "copytest2",
                  "relpersistence": "p",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 49 1`] = `
[
  "copy copytest3 from stdin csv header",
  {
    "stmts": [
      {
        "stmt": {
          "CopyStmt": {
            "is_from": true,
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "csv",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "format",
                  "location": 26,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Boolean": {
                      "boolval": true,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "header",
                  "location": 30,
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 5,
              "relname": "copytest3",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 57 1`] = `
[
  "create temp table copytest4 (
	c1 int,
	"colname with tab: 	" text)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 18,
              "relname": "copytest4",
              "relpersistence": "t",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "c1",
                  "is_local": true,
                  "location": 31,
                  "typeName": {
                    "location": 34,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "colname with tab: 	",
                  "is_local": true,
                  "location": 40,
                  "typeName": {
                    "location": 62,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 61 1`] = `
[
  "copy copytest4 from stdin (header)",
  {
    "stmts": [
      {
        "stmt": {
          "CopyStmt": {
            "is_from": true,
            "options": [
              {
                "DefElem": {
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "header",
                  "location": 27,
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 5,
              "relname": "copytest4",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 70 1`] = `
[
  "create table parted_copytest (
	a int,
	b int,
	c text
) partition by list (b)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "partspec": {
              "location": 57,
              "partParams": [
                {
                  "PartitionElem": {
                    "location": 76,
                    "name": "b",
                  },
                },
              ],
              "strategy": "PARTITION_STRATEGY_LIST",
            },
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "parted_copytest",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 32,
                  "typeName": {
                    "location": 34,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 40,
                  "typeName": {
                    "location": 42,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "c",
                  "is_local": true,
                  "location": 48,
                  "typeName": {
                    "location": 50,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 76 1`] = `
[
  "create table parted_copytest_a1 (c text, b int, a int)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "parted_copytest_a1",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "c",
                  "is_local": true,
                  "location": 33,
                  "typeName": {
                    "location": 35,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 41,
                  "typeName": {
                    "location": 43,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 48,
                  "typeName": {
                    "location": 50,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 79 1`] = `
[
  "alter table parted_copytest attach partition parted_copytest_a1 for values in(1)",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "def": {
                    "PartitionCmd": {
                      "bound": {
                        "listdatums": [
                          {
                            "A_Const": {
                              "ival": {
                                "ival": 1,
                              },
                              "location": 78,
                            },
                          },
                        ],
                        "location": 75,
                        "strategy": "l",
                      },
                      "name": {
                        "inh": true,
                        "location": 45,
                        "relname": "parted_copytest_a1",
                        "relpersistence": "p",
                      },
                    },
                  },
                  "subtype": "AT_AttachPartition",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "parted_copytest",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 84 1`] = `
[
  "insert into parted_copytest select x,1,'One' from generate_series(1,1000) x",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "parted_copytest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "fromClause": [
                  {
                    "RangeFunction": {
                      "alias": {
                        "aliasname": "x",
                      },
                      "functions": [
                        {
                          "List": {
                            "items": [
                              {
                                "FuncCall": {
                                  "args": [
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 1,
                                        },
                                        "location": 66,
                                      },
                                    },
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 1000,
                                        },
                                        "location": 68,
                                      },
                                    },
                                  ],
                                  "funcformat": "COERCE_EXPLICIT_CALL",
                                  "funcname": [
                                    {
                                      "String": {
                                        "sval": "generate_series",
                                      },
                                    },
                                  ],
                                  "location": 50,
                                },
                              },
                              {},
                            ],
                          },
                        },
                      ],
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 35,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "x",
                              },
                            },
                          ],
                          "location": 35,
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 37,
                      "val": {
                        "A_Const": {
                          "ival": {
                            "ival": 1,
                          },
                          "location": 37,
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 39,
                      "val": {
                        "A_Const": {
                          "location": 39,
                          "sval": {
                            "sval": "One",
                          },
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 91 1`] = `
[
  "truncate parted_copytest",
  {
    "stmts": [
      {
        "stmt": {
          "TruncateStmt": {
            "behavior": "DROP_RESTRICT",
            "relations": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 9,
                  "relname": "parted_copytest",
                  "relpersistence": "p",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 96 1`] = `
[
  "begin",
  {
    "stmts": [
      {
        "stmt": {
          "TransactionStmt": {
            "kind": "TRANS_STMT_BEGIN",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 101 1`] = `
[
  "select tableoid::regclass,count(*),sum(a) from parted_copytest
group by tableoid order by tableoid::regclass::name",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 47,
                  "relname": "parted_copytest",
                  "relpersistence": "p",
                },
              },
            ],
            "groupClause": [
              {
                "ColumnRef": {
                  "fields": [
                    {
                      "String": {
                        "sval": "tableoid",
                      },
                    },
                  ],
                  "location": 72,
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "TypeCast": {
                      "arg": {
                        "TypeCast": {
                          "arg": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "tableoid",
                                  },
                                },
                              ],
                              "location": 90,
                            },
                          },
                          "location": 98,
                          "typeName": {
                            "location": 100,
                            "names": [
                              {
                                "String": {
                                  "sval": "regclass",
                                },
                              },
                            ],
                            "typemod": -1,
                          },
                        },
                      },
                      "location": 108,
                      "typeName": {
                        "location": 110,
                        "names": [
                          {
                            "String": {
                              "sval": "name",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "TypeCast": {
                      "arg": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "tableoid",
                              },
                            },
                          ],
                          "location": 7,
                        },
                      },
                      "location": 15,
                      "typeName": {
                        "location": 17,
                        "names": [
                          {
                            "String": {
                              "sval": "regclass",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 26,
                  "val": {
                    "FuncCall": {
                      "agg_star": true,
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "count",
                          },
                        },
                      ],
                      "location": 26,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 35,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "a",
                                },
                              },
                            ],
                            "location": 39,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "sum",
                          },
                        },
                      ],
                      "location": 35,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 107 1`] = `
[
  "create function part_ins_func() returns trigger language plpgsql as $$
begin
  return new;
end;
$$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "part_ins_func",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 48,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
begin
  return new;
end;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 65,
                },
              },
            ],
            "returnType": {
              "location": 40,
              "names": [
                {
                  "String": {
                    "sval": "trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 113 1`] = `
[
  "create trigger part_ins_trig
	before insert on parted_copytest_a2
	for each row
	execute procedure part_ins_func()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTrigStmt": {
            "events": 4,
            "funcname": [
              {
                "String": {
                  "sval": "part_ins_func",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 47,
              "relname": "parted_copytest_a2",
              "relpersistence": "p",
            },
            "row": true,
            "timing": 2,
            "trigname": "part_ins_trig",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 127 1`] = `
[
  "copy parted_copytest FROM STDIN",
  {
    "stmts": [
      {
        "stmt": {
          "CopyStmt": {
            "is_from": true,
            "relation": {
              "inh": true,
              "location": 5,
              "relname": "parted_copytest",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 134 1`] = `
[
  "SELECT tableoid::regclass, id % 2 = 0 is_even, count(*) from parted_si GROUP BY 1, 2 ORDER BY 1",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 61,
                  "relname": "parted_si",
                  "relpersistence": "p",
                },
              },
            ],
            "groupClause": [
              {
                "A_Const": {
                  "ival": {
                    "ival": 1,
                  },
                  "location": 80,
                },
              },
              {
                "A_Const": {
                  "ival": {
                    "ival": 2,
                  },
                  "location": 83,
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "A_Const": {
                      "ival": {
                        "ival": 1,
                      },
                      "location": 94,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "TypeCast": {
                      "arg": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "tableoid",
                              },
                            },
                          ],
                          "location": 7,
                        },
                      },
                      "location": 15,
                      "typeName": {
                        "location": 17,
                        "names": [
                          {
                            "String": {
                              "sval": "regclass",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 27,
                  "name": "is_even",
                  "val": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "A_Expr": {
                          "kind": "AEXPR_OP",
                          "lexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "id",
                                  },
                                },
                              ],
                              "location": 27,
                            },
                          },
                          "location": 30,
                          "name": [
                            {
                              "String": {
                                "sval": "%",
                              },
                            },
                          ],
                          "rexpr": {
                            "A_Const": {
                              "ival": {
                                "ival": 2,
                              },
                              "location": 32,
                            },
                          },
                        },
                      },
                      "location": 34,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "ival": {},
                          "location": 36,
                        },
                      },
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 47,
                  "val": {
                    "FuncCall": {
                      "agg_star": true,
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "count",
                          },
                        },
                      ],
                      "location": 47,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`copy.sql > line 136 1`] = `
[
  "DROP TABLE parted_si",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "parted_si",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;
