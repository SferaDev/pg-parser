// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`insert_conflict.sql > line 4 1`] = `
[
  "create table insertconflicttest(key int4, fruit text)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "key",
                  "is_local": true,
                  "location": 32,
                  "typeName": {
                    "location": 36,
                    "names": [
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "fruit",
                  "is_local": true,
                  "location": 42,
                  "typeName": {
                    "location": 48,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 10 1`] = `
[
  "create unique index op_index_key on insertconflicttest(key, fruit text_pattern_ops)",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "op_index_key",
            "indexParams": [
              {
                "IndexElem": {
                  "name": "key",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
              {
                "IndexElem": {
                  "name": "fruit",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "opclass": [
                    {
                      "String": {
                        "sval": "text_pattern_ops",
                      },
                    },
                  ],
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 36,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "unique": true,
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 16 1`] = `
[
  "explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key) do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_NOTHING",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 86,
                  },
                  "location": 74,
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "inh": true,
                  "location": 32,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {},
                                "location": 58,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 61,
                                "sval": {
                                  "sval": "Crowberry",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 20 1`] = `
[
  "explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key, fruit) do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_NOTHING",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                      {
                        "IndexElem": {
                          "name": "fruit",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 86,
                  },
                  "location": 74,
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "inh": true,
                  "location": 32,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {},
                                "location": 58,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 61,
                                "sval": {
                                  "sval": "Crowberry",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 28 1`] = `
[
  "explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key, fruit text_pattern_ops) do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_NOTHING",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                      {
                        "IndexElem": {
                          "name": "fruit",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "opclass": [
                            {
                              "String": {
                                "sval": "text_pattern_ops",
                              },
                            },
                          ],
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 86,
                  },
                  "location": 74,
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "inh": true,
                  "location": 32,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {},
                                "location": 58,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 61,
                                "sval": {
                                  "sval": "Crowberry",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 31 1`] = `
[
  "explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key, fruit collate "C") do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_NOTHING",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                      {
                        "IndexElem": {
                          "collation": [
                            {
                              "String": {
                                "sval": "C",
                              },
                            },
                          ],
                          "name": "fruit",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 86,
                  },
                  "location": 74,
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "inh": true,
                  "location": 32,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {},
                                "location": 58,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 61,
                                "sval": {
                                  "sval": "Crowberry",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 34 1`] = `
[
  "explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fruit collate "C" text_pattern_ops, key) do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_NOTHING",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "collation": [
                            {
                              "String": {
                                "sval": "C",
                              },
                            },
                          ],
                          "name": "fruit",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "opclass": [
                            {
                              "String": {
                                "sval": "text_pattern_ops",
                              },
                            },
                          ],
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 86,
                  },
                  "location": 74,
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "inh": true,
                  "location": 32,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {},
                                "location": 58,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 61,
                                "sval": {
                                  "sval": "Crowberry",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 37 1`] = `
[
  "explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lower(fruit) collate "C", key, key) do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_NOTHING",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "collation": [
                            {
                              "String": {
                                "sval": "C",
                              },
                            },
                          ],
                          "expr": {
                            "FuncCall": {
                              "args": [
                                {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "fruit",
                                        },
                                      },
                                    ],
                                    "location": 93,
                                  },
                                },
                              ],
                              "funcformat": "COERCE_EXPLICIT_CALL",
                              "funcname": [
                                {
                                  "String": {
                                    "sval": "lower",
                                  },
                                },
                              ],
                              "location": 87,
                            },
                          },
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 86,
                  },
                  "location": 74,
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "inh": true,
                  "location": 32,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {},
                                "location": 58,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 61,
                                "sval": {
                                  "sval": "Crowberry",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 52 1`] = `
[
  "explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (fruit, key, fruit text_pattern_ops, key) do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_NOTHING",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "name": "fruit",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                      {
                        "IndexElem": {
                          "name": "fruit",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "opclass": [
                            {
                              "String": {
                                "sval": "text_pattern_ops",
                              },
                            },
                          ],
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 86,
                  },
                  "location": 74,
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "inh": true,
                  "location": 32,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {},
                                "location": 58,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 61,
                                "sval": {
                                  "sval": "Crowberry",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 55 1`] = `
[
  "drop index op_index_key",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "op_index_key",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_INDEX",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 63 1`] = `
[
  "create unique index cross_match on insertconflicttest(lower(fruit) collate "C", upper(fruit) text_pattern_ops)",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "cross_match",
            "indexParams": [
              {
                "IndexElem": {
                  "collation": [
                    {
                      "String": {
                        "sval": "C",
                      },
                    },
                  ],
                  "expr": {
                    "FuncCall": {
                      "args": [
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "fruit",
                                },
                              },
                            ],
                            "location": 60,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "lower",
                          },
                        },
                      ],
                      "location": 54,
                    },
                  },
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
              {
                "IndexElem": {
                  "expr": {
                    "FuncCall": {
                      "args": [
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "fruit",
                                },
                              },
                            ],
                            "location": 86,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "upper",
                          },
                        },
                      ],
                      "location": 80,
                    },
                  },
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "opclass": [
                    {
                      "String": {
                        "sval": "text_pattern_ops",
                      },
                    },
                  ],
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 35,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "unique": true,
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 66 1`] = `
[
  "explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lower(fruit) text_pattern_ops, upper(fruit) collate "C") do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_NOTHING",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "expr": {
                            "FuncCall": {
                              "args": [
                                {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "fruit",
                                        },
                                      },
                                    ],
                                    "location": 93,
                                  },
                                },
                              ],
                              "funcformat": "COERCE_EXPLICIT_CALL",
                              "funcname": [
                                {
                                  "String": {
                                    "sval": "lower",
                                  },
                                },
                              ],
                              "location": 87,
                            },
                          },
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "opclass": [
                            {
                              "String": {
                                "sval": "text_pattern_ops",
                              },
                            },
                          ],
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                      {
                        "IndexElem": {
                          "collation": [
                            {
                              "String": {
                                "sval": "C",
                              },
                            },
                          ],
                          "expr": {
                            "FuncCall": {
                              "args": [
                                {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "fruit",
                                        },
                                      },
                                    ],
                                    "location": 124,
                                  },
                                },
                              ],
                              "funcformat": "COERCE_EXPLICIT_CALL",
                              "funcname": [
                                {
                                  "String": {
                                    "sval": "upper",
                                  },
                                },
                              ],
                              "location": 118,
                            },
                          },
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 86,
                  },
                  "location": 74,
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "inh": true,
                  "location": 32,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {},
                                "location": 58,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 61,
                                "sval": {
                                  "sval": "Crowberry",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 68 1`] = `
[
  "explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (lower(fruit) collate "C", upper(fruit) text_pattern_ops) do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_NOTHING",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "collation": [
                            {
                              "String": {
                                "sval": "C",
                              },
                            },
                          ],
                          "expr": {
                            "FuncCall": {
                              "args": [
                                {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "fruit",
                                        },
                                      },
                                    ],
                                    "location": 93,
                                  },
                                },
                              ],
                              "funcformat": "COERCE_EXPLICIT_CALL",
                              "funcname": [
                                {
                                  "String": {
                                    "sval": "lower",
                                  },
                                },
                              ],
                              "location": 87,
                            },
                          },
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                      {
                        "IndexElem": {
                          "expr": {
                            "FuncCall": {
                              "args": [
                                {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "fruit",
                                        },
                                      },
                                    ],
                                    "location": 119,
                                  },
                                },
                              ],
                              "funcformat": "COERCE_EXPLICIT_CALL",
                              "funcname": [
                                {
                                  "String": {
                                    "sval": "upper",
                                  },
                                },
                              ],
                              "location": 113,
                            },
                          },
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "opclass": [
                            {
                              "String": {
                                "sval": "text_pattern_ops",
                              },
                            },
                          ],
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 86,
                  },
                  "location": 74,
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "inh": true,
                  "location": 32,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {},
                                "location": 58,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 61,
                                "sval": {
                                  "sval": "Crowberry",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 70 1`] = `
[
  "drop index cross_match",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "cross_match",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_INDEX",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 75 1`] = `
[
  "create unique index key_index on insertconflicttest(key)",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "key_index",
            "indexParams": [
              {
                "IndexElem": {
                  "name": "key",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 33,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "unique": true,
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 80 1`] = `
[
  "explain (costs off) insert into insertconflicttest values (0, 'Bilberry') on conflict (key) do update set fruit = excluded.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_UPDATE",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 86,
                  },
                  "location": 74,
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 106,
                        "name": "fruit",
                        "val": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "excluded",
                                },
                              },
                              {
                                "String": {
                                  "sval": "fruit",
                                },
                              },
                            ],
                            "location": 114,
                          },
                        },
                      },
                    },
                  ],
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "inh": true,
                  "location": 32,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {},
                                "location": 59,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 62,
                                "sval": {
                                  "sval": "Bilberry",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 82 1`] = `
[
  "explain (costs off) insert into insertconflicttest values (0, 'Bilberry') on conflict (key) do update set fruit = excluded.fruit where insertconflicttest.fruit != 'Cawesh'",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_UPDATE",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 86,
                  },
                  "location": 74,
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 106,
                        "name": "fruit",
                        "val": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "excluded",
                                },
                              },
                              {
                                "String": {
                                  "sval": "fruit",
                                },
                              },
                            ],
                            "location": 114,
                          },
                        },
                      },
                    },
                  ],
                  "whereClause": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "insertconflicttest",
                              },
                            },
                            {
                              "String": {
                                "sval": "fruit",
                              },
                            },
                          ],
                          "location": 135,
                        },
                      },
                      "location": 160,
                      "name": [
                        {
                          "String": {
                            "sval": "<>",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "location": 163,
                          "sval": {
                            "sval": "Cawesh",
                          },
                        },
                      },
                    },
                  },
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "inh": true,
                  "location": 32,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {},
                                "location": 59,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 62,
                                "sval": {
                                  "sval": "Bilberry",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 84 1`] = `
[
  "explain (costs off) insert into insertconflicttest values(0, 'Crowberry') on conflict (key) do update set fruit = excluded.fruit where excluded.fruit != 'Elderberry'",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_UPDATE",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 86,
                  },
                  "location": 74,
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 106,
                        "name": "fruit",
                        "val": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "excluded",
                                },
                              },
                              {
                                "String": {
                                  "sval": "fruit",
                                },
                              },
                            ],
                            "location": 114,
                          },
                        },
                      },
                    },
                  ],
                  "whereClause": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "excluded",
                              },
                            },
                            {
                              "String": {
                                "sval": "fruit",
                              },
                            },
                          ],
                          "location": 135,
                        },
                      },
                      "location": 150,
                      "name": [
                        {
                          "String": {
                            "sval": "<>",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "location": 153,
                          "sval": {
                            "sval": "Elderberry",
                          },
                        },
                      },
                    },
                  },
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "inh": true,
                  "location": 32,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {},
                                "location": 58,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 61,
                                "sval": {
                                  "sval": "Crowberry",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 86 1`] = `
[
  "explain (costs off, format json) insert into insertconflicttest values (0, 'Bilberry') on conflict (key) do update set fruit = excluded.fruit where insertconflicttest.fruit != 'Lime' returning *",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "json",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "format",
                  "location": 20,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_UPDATE",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 99,
                  },
                  "location": 87,
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 119,
                        "name": "fruit",
                        "val": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "excluded",
                                },
                              },
                              {
                                "String": {
                                  "sval": "fruit",
                                },
                              },
                            ],
                            "location": 127,
                          },
                        },
                      },
                    },
                  ],
                  "whereClause": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "insertconflicttest",
                              },
                            },
                            {
                              "String": {
                                "sval": "fruit",
                              },
                            },
                          ],
                          "location": 148,
                        },
                      },
                      "location": 173,
                      "name": [
                        {
                          "String": {
                            "sval": "<>",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "location": 176,
                          "sval": {
                            "sval": "Lime",
                          },
                        },
                      },
                    },
                  },
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "inh": true,
                  "location": 45,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "returningList": [
                  {
                    "ResTarget": {
                      "location": 193,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "A_Star": {},
                            },
                          ],
                          "location": 193,
                        },
                      },
                    },
                  },
                ],
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {},
                                "location": 72,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 75,
                                "sval": {
                                  "sval": "Bilberry",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 89 1`] = `
[
  "insert into insertconflicttest values (1, 'Apple') on conflict do update set fruit = excluded.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "location": 51,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 77,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 85,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 39,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 42,
                            "sval": {
                              "sval": "Apple",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 92 1`] = `
[
  "insert into insertconflicttest values (1, 'Apple') on conflict (key) do update set fruit = excluded.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 63,
              },
              "location": 51,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 83,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 91,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 39,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 42,
                            "sval": {
                              "sval": "Apple",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 96 1`] = `
[
  "insert into insertconflicttest
values (1, 'Apple'), (2, 'Orange')
on conflict (key) do update set (fruit, key) = (excluded.fruit, excluded.key)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 78,
              },
              "location": 66,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 99,
                    "name": "fruit",
                    "val": {
                      "MultiAssignRef": {
                        "colno": 1,
                        "ncolumns": 2,
                        "source": {
                          "RowExpr": {
                            "args": [
                              {
                                "ColumnRef": {
                                  "fields": [
                                    {
                                      "String": {
                                        "sval": "excluded",
                                      },
                                    },
                                    {
                                      "String": {
                                        "sval": "fruit",
                                      },
                                    },
                                  ],
                                  "location": 114,
                                },
                              },
                              {
                                "ColumnRef": {
                                  "fields": [
                                    {
                                      "String": {
                                        "sval": "excluded",
                                      },
                                    },
                                    {
                                      "String": {
                                        "sval": "key",
                                      },
                                    },
                                  ],
                                  "location": 130,
                                },
                              },
                            ],
                            "location": 113,
                            "row_format": "COERCE_IMPLICIT_CAST",
                          },
                        },
                      },
                    },
                  },
                },
                {
                  "ResTarget": {
                    "location": 106,
                    "name": "key",
                    "val": {
                      "MultiAssignRef": {
                        "colno": 2,
                        "ncolumns": 2,
                        "source": {
                          "RowExpr": {
                            "args": [
                              {
                                "ColumnRef": {
                                  "fields": [
                                    {
                                      "String": {
                                        "sval": "excluded",
                                      },
                                    },
                                    {
                                      "String": {
                                        "sval": "fruit",
                                      },
                                    },
                                  ],
                                  "location": 114,
                                },
                              },
                              {
                                "ColumnRef": {
                                  "fields": [
                                    {
                                      "String": {
                                        "sval": "excluded",
                                      },
                                    },
                                    {
                                      "String": {
                                        "sval": "key",
                                      },
                                    },
                                  ],
                                  "location": 130,
                                },
                              },
                            ],
                            "location": 113,
                            "row_format": "COERCE_IMPLICIT_CAST",
                          },
                        },
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 39,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 42,
                            "sval": {
                              "sval": "Apple",
                            },
                          },
                        },
                      ],
                    },
                  },
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 53,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 56,
                            "sval": {
                              "sval": "Orange",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 102 1`] = `
[
  "insert into insertconflicttest values (1, 'Apple') on conflict (key) do update set fruit = excluded.fruit RETURNING excluded.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 63,
              },
              "location": 51,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 83,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 91,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "returningList": [
              {
                "ResTarget": {
                  "location": 116,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "excluded",
                          },
                        },
                        {
                          "String": {
                            "sval": "fruit",
                          },
                        },
                      ],
                      "location": 116,
                    },
                  },
                },
              },
            ],
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 39,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 42,
                            "sval": {
                              "sval": "Apple",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 105 1`] = `
[
  "insert into insertconflicttest values (1, 'Apple') on conflict (keyy) do update set fruit = excluded.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "keyy",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 63,
              },
              "location": 51,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 84,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 92,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 39,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 42,
                            "sval": {
                              "sval": "Apple",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 108 1`] = `
[
  "insert into insertconflicttest values (1, 'Apple') on conflict (key) do update set fruit = excluded.fruitt",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 63,
              },
              "location": 51,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 83,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruitt",
                            },
                          },
                        ],
                        "location": 91,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 39,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 42,
                            "sval": {
                              "sval": "Apple",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 111 1`] = `
[
  "insert into insertconflicttest values (3, 'Kiwi') on conflict (key, fruit) do update set fruit = excluded.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                  {
                    "IndexElem": {
                      "name": "fruit",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 62,
              },
              "location": 50,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 89,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 97,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 3,
                            },
                            "location": 39,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 42,
                            "sval": {
                              "sval": "Kiwi",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 117 1`] = `
[
  " -- ok, no reference to target table
insert into insertconflicttest AS ict values (6, 'Passionfruit') on conflict (key) do update set fruit = ict.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 114,
              },
              "location": 102,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 134,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "ict",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 142,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "alias": {
                "aliasname": "ict",
              },
              "inh": true,
              "location": 49,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 6,
                            },
                            "location": 83,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 86,
                            "sval": {
                              "sval": "Passionfruit",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 118 1`] = `
[
  " -- ok, alias
insert into insertconflicttest AS ict values (6, 'Passionfruit') on conflict (key) do update set fruit = insertconflicttest.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 91,
              },
              "location": 79,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 111,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "insertconflicttest",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 119,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "alias": {
                "aliasname": "ict",
              },
              "inh": true,
              "location": 26,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 6,
                            },
                            "location": 60,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 63,
                            "sval": {
                              "sval": "Passionfruit",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 119 1`] = `
[
  " -- error, references aliased away name

drop index key_index",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "key_index",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_INDEX",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 126 1`] = `
[
  "create unique index comp_key_index on insertconflicttest(key, fruit)",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "comp_key_index",
            "indexParams": [
              {
                "IndexElem": {
                  "name": "key",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
              {
                "IndexElem": {
                  "name": "fruit",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 38,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "unique": true,
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 138 1`] = `
[
  "drop index comp_key_index",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "comp_key_index",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_INDEX",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 143 1`] = `
[
  "create unique index part_comp_key_index on insertconflicttest(key, fruit) where key < 5",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "part_comp_key_index",
            "indexParams": [
              {
                "IndexElem": {
                  "name": "key",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
              {
                "IndexElem": {
                  "name": "fruit",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 43,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "unique": true,
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "key",
                        },
                      },
                    ],
                    "location": 80,
                  },
                },
                "location": 84,
                "name": [
                  {
                    "String": {
                      "sval": "<",
                    },
                  },
                ],
                "rexpr": {
                  "A_Const": {
                    "ival": {
                      "ival": 5,
                    },
                    "location": 86,
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 154 1`] = `
[
  "drop index part_comp_key_index",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "part_comp_key_index",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_INDEX",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 160 1`] = `
[
  "create unique index expr_key_index on insertconflicttest(lower(fruit))",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "expr_key_index",
            "indexParams": [
              {
                "IndexElem": {
                  "expr": {
                    "FuncCall": {
                      "args": [
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "fruit",
                                },
                              },
                            ],
                            "location": 63,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "lower",
                          },
                        },
                      ],
                      "location": 57,
                    },
                  },
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 38,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "unique": true,
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 163 1`] = `
[
  "insert into insertconflicttest values (20, 'Quince') on conflict (lower(fruit)) do update set fruit = excluded.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "expr": {
                        "FuncCall": {
                          "args": [
                            {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "fruit",
                                    },
                                  },
                                ],
                                "location": 72,
                              },
                            },
                          ],
                          "funcformat": "COERCE_EXPLICIT_CALL",
                          "funcname": [
                            {
                              "String": {
                                "sval": "lower",
                              },
                            },
                          ],
                          "location": 66,
                        },
                      },
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 65,
              },
              "location": 53,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 94,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 102,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 20,
                            },
                            "location": 39,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 43,
                            "sval": {
                              "sval": "Quince",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 167 1`] = `
[
  "insert into insertconflicttest values (22, 'Apricot') on conflict (upper(fruit)) do update set fruit = excluded.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "expr": {
                        "FuncCall": {
                          "args": [
                            {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "fruit",
                                    },
                                  },
                                ],
                                "location": 73,
                              },
                            },
                          ],
                          "funcformat": "COERCE_EXPLICIT_CALL",
                          "funcname": [
                            {
                              "String": {
                                "sval": "upper",
                              },
                            },
                          ],
                          "location": 67,
                        },
                      },
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 66,
              },
              "location": 54,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 95,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 103,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 22,
                            },
                            "location": 39,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 43,
                            "sval": {
                              "sval": "Apricot",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 170 1`] = `
[
  "drop index expr_key_index",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "expr_key_index",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_INDEX",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 175 1`] = `
[
  "create unique index expr_comp_key_index on insertconflicttest(key, lower(fruit))",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "expr_comp_key_index",
            "indexParams": [
              {
                "IndexElem": {
                  "name": "key",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
              {
                "IndexElem": {
                  "expr": {
                    "FuncCall": {
                      "args": [
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "fruit",
                                },
                              },
                            ],
                            "location": 73,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "lower",
                          },
                        },
                      ],
                      "location": 67,
                    },
                  },
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 43,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "unique": true,
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 179 1`] = `
[
  "insert into insertconflicttest values (24, 'Plum') on conflict (key, lower(fruit)) do update set fruit = excluded.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                  {
                    "IndexElem": {
                      "expr": {
                        "FuncCall": {
                          "args": [
                            {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "fruit",
                                    },
                                  },
                                ],
                                "location": 75,
                              },
                            },
                          ],
                          "funcformat": "COERCE_EXPLICIT_CALL",
                          "funcname": [
                            {
                              "String": {
                                "sval": "lower",
                              },
                            },
                          ],
                          "location": 69,
                        },
                      },
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 63,
              },
              "location": 51,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 97,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 105,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 24,
                            },
                            "location": 39,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 43,
                            "sval": {
                              "sval": "Plum",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 182 1`] = `
[
  "explain (costs off) insert into insertconflicttest values (26, 'Fig') on conflict (lower(fruit), key, lower(fruit), key) do update set fruit = excluded.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_UPDATE",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "expr": {
                            "FuncCall": {
                              "args": [
                                {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "fruit",
                                        },
                                      },
                                    ],
                                    "location": 89,
                                  },
                                },
                              ],
                              "funcformat": "COERCE_EXPLICIT_CALL",
                              "funcname": [
                                {
                                  "String": {
                                    "sval": "lower",
                                  },
                                },
                              ],
                              "location": 83,
                            },
                          },
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                      {
                        "IndexElem": {
                          "expr": {
                            "FuncCall": {
                              "args": [
                                {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "fruit",
                                        },
                                      },
                                    ],
                                    "location": 108,
                                  },
                                },
                              ],
                              "funcformat": "COERCE_EXPLICIT_CALL",
                              "funcname": [
                                {
                                  "String": {
                                    "sval": "lower",
                                  },
                                },
                              ],
                              "location": 102,
                            },
                          },
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 82,
                  },
                  "location": 70,
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 135,
                        "name": "fruit",
                        "val": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "excluded",
                                },
                              },
                              {
                                "String": {
                                  "sval": "fruit",
                                },
                              },
                            ],
                            "location": 143,
                          },
                        },
                      },
                    },
                  ],
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "inh": true,
                  "location": 32,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {
                                  "ival": 26,
                                },
                                "location": 59,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 63,
                                "sval": {
                                  "sval": "Fig",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 185 1`] = `
[
  "insert into insertconflicttest values (27, 'Prune') on conflict (key, upper(fruit)) do update set fruit = excluded.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                  {
                    "IndexElem": {
                      "expr": {
                        "FuncCall": {
                          "args": [
                            {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "fruit",
                                    },
                                  },
                                ],
                                "location": 76,
                              },
                            },
                          ],
                          "funcformat": "COERCE_EXPLICIT_CALL",
                          "funcname": [
                            {
                              "String": {
                                "sval": "upper",
                              },
                            },
                          ],
                          "location": 70,
                        },
                      },
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 64,
              },
              "location": 52,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 98,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 106,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 27,
                            },
                            "location": 39,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 43,
                            "sval": {
                              "sval": "Prune",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 189 1`] = `
[
  "drop index expr_comp_key_index",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "expr_comp_key_index",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_INDEX",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 205 1`] = `
[
  "insert into insertconflicttest values (25, 'Fig') on conflict (fruit) do update set fruit = excluded.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "fruit",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 62,
              },
              "location": 50,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 84,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 92,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 25,
                            },
                            "location": 39,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 43,
                            "sval": {
                              "sval": "Fig",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 213 1`] = `
[
  "create unique index partial_key_index on insertconflicttest(key) where fruit like '%berry'",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "partial_key_index",
            "indexParams": [
              {
                "IndexElem": {
                  "name": "key",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 41,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "unique": true,
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_LIKE",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "fruit",
                        },
                      },
                    ],
                    "location": 71,
                  },
                },
                "location": 77,
                "name": [
                  {
                    "String": {
                      "sval": "~~",
                    },
                  },
                ],
                "rexpr": {
                  "A_Const": {
                    "location": 82,
                    "sval": {
                      "sval": "%berry",
                    },
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 216 1`] = `
[
  "insert into insertconflicttest values (23, 'Blackberry') on conflict (key) where fruit like '%berry' do update set fruit = excluded.fruit",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 69,
                "whereClause": {
                  "A_Expr": {
                    "kind": "AEXPR_LIKE",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 81,
                      },
                    },
                    "location": 87,
                    "name": [
                      {
                        "String": {
                          "sval": "~~",
                        },
                      },
                    ],
                    "rexpr": {
                      "A_Const": {
                        "location": 92,
                        "sval": {
                          "sval": "%berry",
                        },
                      },
                    },
                  },
                },
              },
              "location": 57,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 115,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 123,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 23,
                            },
                            "location": 39,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 43,
                            "sval": {
                              "sval": "Blackberry",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 224 1`] = `
[
  "drop index partial_key_index",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "partial_key_index",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_INDEX",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 229 1`] = `
[
  "create unique index plain on insertconflicttest(key)",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "plain",
            "indexParams": [
              {
                "IndexElem": {
                  "name": "key",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 29,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "unique": true,
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 232 1`] = `
[
  "insert into insertconflicttest as i values (23, 'Jackfruit') on conflict (key) do update set fruit = excluded.fruit
  where i.* != excluded.* returning *",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 73,
              },
              "location": 61,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 93,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 101,
                      },
                    },
                  },
                },
              ],
              "whereClause": {
                "A_Expr": {
                  "kind": "AEXPR_OP",
                  "lexpr": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "i",
                          },
                        },
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 124,
                    },
                  },
                  "location": 128,
                  "name": [
                    {
                      "String": {
                        "sval": "<>",
                      },
                    },
                  ],
                  "rexpr": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "excluded",
                          },
                        },
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 131,
                    },
                  },
                },
              },
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "alias": {
                "aliasname": "i",
              },
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "returningList": [
              {
                "ResTarget": {
                  "location": 152,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 152,
                    },
                  },
                },
              },
            ],
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 23,
                            },
                            "location": 44,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 48,
                            "sval": {
                              "sval": "Jackfruit",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 238 1`] = `
[
  "insert into insertconflicttest as i values (23, 'Jackfruit') on conflict (key) do update set fruit = excluded.fruit
  where i.* = excluded.* returning *",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 73,
              },
              "location": 61,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 93,
                    "name": "fruit",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "fruit",
                            },
                          },
                        ],
                        "location": 101,
                      },
                    },
                  },
                },
              ],
              "whereClause": {
                "A_Expr": {
                  "kind": "AEXPR_OP",
                  "lexpr": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "i",
                          },
                        },
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 124,
                    },
                  },
                  "location": 128,
                  "name": [
                    {
                      "String": {
                        "sval": "=",
                      },
                    },
                  ],
                  "rexpr": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "excluded",
                          },
                        },
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 130,
                    },
                  },
                },
              },
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "alias": {
                "aliasname": "i",
              },
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "returningList": [
              {
                "ResTarget": {
                  "location": 151,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 151,
                    },
                  },
                },
              },
            ],
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 23,
                            },
                            "location": 44,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 48,
                            "sval": {
                              "sval": "Jackfruit",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 241 1`] = `
[
  "insert into insertconflicttest as i values (23, 'Avocado') on conflict (key) do update set fruit = excluded.*::text
  returning *",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 71,
              },
              "location": 59,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 91,
                    "name": "fruit",
                    "val": {
                      "TypeCast": {
                        "arg": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "excluded",
                                },
                              },
                              {
                                "A_Star": {},
                              },
                            ],
                            "location": 99,
                          },
                        },
                        "location": 109,
                        "typeName": {
                          "location": 111,
                          "names": [
                            {
                              "String": {
                                "sval": "text",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "alias": {
                "aliasname": "i",
              },
              "inh": true,
              "location": 12,
              "relname": "insertconflicttest",
              "relpersistence": "p",
            },
            "returningList": [
              {
                "ResTarget": {
                  "location": 128,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 128,
                    },
                  },
                },
              },
            ],
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 23,
                            },
                            "location": 44,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 48,
                            "sval": {
                              "sval": "Avocado",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 244 1`] = `
[
  "explain (costs off) insert into insertconflicttest as i values (23, 'Avocado') on conflict (key) do update set fruit = excluded.fruit where excluded.* is null",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "InsertStmt": {
                "onConflictClause": {
                  "action": "ONCONFLICT_UPDATE",
                  "infer": {
                    "indexElems": [
                      {
                        "IndexElem": {
                          "name": "key",
                          "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                          "ordering": "SORTBY_DEFAULT",
                        },
                      },
                    ],
                    "location": 91,
                  },
                  "location": 79,
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 111,
                        "name": "fruit",
                        "val": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "excluded",
                                },
                              },
                              {
                                "String": {
                                  "sval": "fruit",
                                },
                              },
                            ],
                            "location": 119,
                          },
                        },
                      },
                    },
                  ],
                  "whereClause": {
                    "NullTest": {
                      "arg": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "excluded",
                              },
                            },
                            {
                              "A_Star": {},
                            },
                          ],
                          "location": 140,
                        },
                      },
                      "location": 151,
                      "nulltesttype": "IS_NULL",
                    },
                  },
                },
                "override": "OVERRIDING_NOT_SET",
                "relation": {
                  "alias": {
                    "aliasname": "i",
                  },
                  "inh": true,
                  "location": 32,
                  "relname": "insertconflicttest",
                  "relpersistence": "p",
                },
                "selectStmt": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "valuesLists": [
                      {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {
                                  "ival": 23,
                                },
                                "location": 64,
                              },
                            },
                            {
                              "A_Const": {
                                "location": 68,
                                "sval": {
                                  "sval": "Avocado",
                                },
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 247 1`] = `
[
  "drop index plain",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "plain",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_INDEX",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 250 1`] = `
[
  "drop table insertconflicttest",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "insertconflicttest",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 258 1`] = `
[
  "create table syscolconflicttest(key int4, data text)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "syscolconflicttest",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "key",
                  "is_local": true,
                  "location": 32,
                  "typeName": {
                    "location": 36,
                    "names": [
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "data",
                  "is_local": true,
                  "location": 42,
                  "typeName": {
                    "location": 47,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 267 1`] = `
[
  "create table insertconflict (a bigint, b bigint)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "insertconflict",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 29,
                  "typeName": {
                    "location": 31,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int8",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 39,
                  "typeName": {
                    "location": 41,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int8",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 269 1`] = `
[
  "create unique index insertconflicti1 on insertconflict(coalesce(a, 0))",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "insertconflicti1",
            "indexParams": [
              {
                "IndexElem": {
                  "expr": {
                    "CoalesceExpr": {
                      "args": [
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "a",
                                },
                              },
                            ],
                            "location": 64,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {},
                            "location": 67,
                          },
                        },
                      ],
                      "location": 55,
                    },
                  },
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 40,
              "relname": "insertconflict",
              "relpersistence": "p",
            },
            "unique": true,
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 271 1`] = `
[
  "create unique index insertconflicti2 on insertconflict(b)
  where coalesce(a, 1) > 0",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "insertconflicti2",
            "indexParams": [
              {
                "IndexElem": {
                  "name": "b",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 40,
              "relname": "insertconflict",
              "relpersistence": "p",
            },
            "unique": true,
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "CoalesceExpr": {
                    "args": [
                      {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "a",
                              },
                            },
                          ],
                          "location": 75,
                        },
                      },
                      {
                        "A_Const": {
                          "ival": {
                            "ival": 1,
                          },
                          "location": 78,
                        },
                      },
                    ],
                    "location": 66,
                  },
                },
                "location": 81,
                "name": [
                  {
                    "String": {
                      "sval": ">",
                    },
                  },
                ],
                "rexpr": {
                  "A_Const": {
                    "ival": {},
                    "location": 83,
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 274 1`] = `
[
  "insert into insertconflict values (1, 2)
on conflict (coalesce(a, 0)) do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_NOTHING",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "expr": {
                        "CoalesceExpr": {
                          "args": [
                            {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "a",
                                    },
                                  },
                                ],
                                "location": 63,
                              },
                            },
                            {
                              "A_Const": {
                                "ival": {},
                                "location": 66,
                              },
                            },
                          ],
                          "location": 54,
                        },
                      },
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 53,
              },
              "location": 41,
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflict",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 35,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 38,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 277 1`] = `
[
  "insert into insertconflict values (1, 2)
on conflict (b) where coalesce(a, 1) > 0 do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_NOTHING",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "b",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 53,
                "whereClause": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "CoalesceExpr": {
                        "args": [
                          {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "a",
                                  },
                                },
                              ],
                              "location": 72,
                            },
                          },
                          {
                            "A_Const": {
                              "ival": {
                                "ival": 1,
                              },
                              "location": 75,
                            },
                          },
                        ],
                        "location": 63,
                      },
                    },
                    "location": 78,
                    "name": [
                      {
                        "String": {
                          "sval": ">",
                        },
                      },
                    ],
                    "rexpr": {
                      "A_Const": {
                        "ival": {},
                        "location": 80,
                      },
                    },
                  },
                },
              },
              "location": 41,
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflict",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 35,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 38,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 283 1`] = `
[
  "drop table insertconflict",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "insertconflict",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 293 1`] = `
[
  "insert into insertconflictv values (1,'foo')
  on conflict (f1) do update set f2 = excluded.f2",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "f1",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 59,
              },
              "location": 47,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 78,
                    "name": "f2",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "f2",
                            },
                          },
                        ],
                        "location": 83,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "insertconflictv",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 36,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 38,
                            "sval": {
                              "sval": "foo",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 300 1`] = `
[
  "drop view insertconflictv",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "insertconflictv",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_VIEW",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 309 1`] = `
[
  "create table cities (
	name		text,
	population	float8,
	altitude	int		-- (in ft)
)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "cities",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "name",
                  "is_local": true,
                  "location": 23,
                  "typeName": {
                    "location": 29,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "population",
                  "is_local": true,
                  "location": 36,
                  "typeName": {
                    "location": 47,
                    "names": [
                      {
                        "String": {
                          "sval": "float8",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "altitude",
                  "is_local": true,
                  "location": 56,
                  "typeName": {
                    "location": 65,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 315 1`] = `
[
  "create table capitals (
	state		char(2)
) inherits (cities)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "inhRelations": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 52,
                  "relname": "cities",
                  "relpersistence": "p",
                },
              },
            ],
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "capitals",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "state",
                  "is_local": true,
                  "location": 25,
                  "typeName": {
                    "location": 32,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "bpchar",
                        },
                      },
                    ],
                    "typemod": -1,
                    "typmods": [
                      {
                        "A_Const": {
                          "ival": {
                            "ival": 2,
                          },
                          "location": 37,
                        },
                      },
                    ],
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 322 1`] = `
[
  "create unique index cities_names_unique on cities (name)",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "cities_names_unique",
            "indexParams": [
              {
                "IndexElem": {
                  "name": "name",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 43,
              "relname": "cities",
              "relpersistence": "p",
            },
            "unique": true,
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 326 1`] = `
[
  "insert into cities values ('San Francisco', 7.24E+5, 63)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "cities",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 27,
                            "sval": {
                              "sval": "San Francisco",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "fval": {
                              "fval": "7.24E+5",
                            },
                            "location": 44,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 63,
                            },
                            "location": 53,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 330 1`] = `
[
  "insert into capitals values ('Sacramento', 3.694E+5, 30, 'CA')",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "capitals",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 29,
                            "sval": {
                              "sval": "Sacramento",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "fval": {
                              "fval": "3.694E+5",
                            },
                            "location": 43,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 30,
                            },
                            "location": 53,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 57,
                            "sval": {
                              "sval": "CA",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 334 1`] = `
[
  "select * from capitals",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "capitals",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 337 1`] = `
[
  "insert into cities values ('Las Vegas', 2.583E+5, 2174) on conflict do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_NOTHING",
              "location": 56,
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "cities",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 27,
                            "sval": {
                              "sval": "Las Vegas",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "fval": {
                              "fval": "2.583E+5",
                            },
                            "location": 40,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2174,
                            },
                            "location": 50,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 340 1`] = `
[
  "insert into capitals values ('Sacramento', 50, 2267, 'NE') on conflict (name) do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_NOTHING",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "name",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 71,
              },
              "location": 59,
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "capitals",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 29,
                            "sval": {
                              "sval": "Sacramento",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 50,
                            },
                            "location": 43,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2267,
                            },
                            "location": 47,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 53,
                            "sval": {
                              "sval": "NE",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 349 1`] = `
[
  "select tableoid::regclass, * from cities",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 34,
                  "relname": "cities",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "TypeCast": {
                      "arg": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "tableoid",
                              },
                            },
                          ],
                          "location": 7,
                        },
                      },
                      "location": 15,
                      "typeName": {
                        "location": 17,
                        "names": [
                          {
                            "String": {
                              "sval": "regclass",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 27,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 27,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 351 1`] = `
[
  "insert into cities values ('Las Vegas', 5.86E+5, 2223) on conflict (name) do update set population = excluded.population, altitude = excluded.altitude",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "name",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 67,
              },
              "location": 55,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 88,
                    "name": "population",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "population",
                            },
                          },
                        ],
                        "location": 101,
                      },
                    },
                  },
                },
                {
                  "ResTarget": {
                    "location": 122,
                    "name": "altitude",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "altitude",
                            },
                          },
                        ],
                        "location": 133,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "cities",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 27,
                            "sval": {
                              "sval": "Las Vegas",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "fval": {
                              "fval": "5.86E+5",
                            },
                            "location": 40,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2223,
                            },
                            "location": 49,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 355 1`] = `
[
  "drop table capitals",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "capitals",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 360 1`] = `
[
  "create table excluded(key int primary key, data text)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "excluded",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "key",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_PRIMARY",
                        "location": 30,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 22,
                  "typeName": {
                    "location": 26,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "data",
                  "is_local": true,
                  "location": 43,
                  "typeName": {
                    "location": 48,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 363 1`] = `
[
  "insert into excluded values(1, '2') on conflict (key) do update set data = excluded.data RETURNING *",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 48,
              },
              "location": 36,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 68,
                    "name": "data",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "data",
                            },
                          },
                        ],
                        "location": 75,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "excluded",
              "relpersistence": "p",
            },
            "returningList": [
              {
                "ResTarget": {
                  "location": 99,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 99,
                    },
                  },
                },
              },
            ],
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 28,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 31,
                            "sval": {
                              "sval": "2",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 367 1`] = `
[
  "insert into excluded AS target values(1, '2') on conflict (key) do update set data = target.data RETURNING *",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 58,
              },
              "location": 46,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 78,
                    "name": "data",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "target",
                            },
                          },
                          {
                            "String": {
                              "sval": "data",
                            },
                          },
                        ],
                        "location": 85,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "alias": {
                "aliasname": "target",
              },
              "inh": true,
              "location": 12,
              "relname": "excluded",
              "relpersistence": "p",
            },
            "returningList": [
              {
                "ResTarget": {
                  "location": 107,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 107,
                    },
                  },
                },
              },
            ],
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 38,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 41,
                            "sval": {
                              "sval": "2",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 369 1`] = `
[
  "insert into excluded values(1, '2') on conflict (key) do update set data = 3 RETURNING excluded.*",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 48,
              },
              "location": 36,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 68,
                    "name": "data",
                    "val": {
                      "A_Const": {
                        "ival": {
                          "ival": 3,
                        },
                        "location": 75,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "excluded",
              "relpersistence": "p",
            },
            "returningList": [
              {
                "ResTarget": {
                  "location": 87,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "excluded",
                          },
                        },
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 87,
                    },
                  },
                },
              },
            ],
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 28,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 31,
                            "sval": {
                              "sval": "2",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 372 1`] = `
[
  "drop table excluded",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "excluded",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 376 1`] = `
[
  "create table dropcol(key int primary key, drop1 int, keep1 text, drop2 numeric, keep2 float)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "dropcol",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "key",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_PRIMARY",
                        "location": 29,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 21,
                  "typeName": {
                    "location": 25,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "drop1",
                  "is_local": true,
                  "location": 42,
                  "typeName": {
                    "location": 48,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "keep1",
                  "is_local": true,
                  "location": 53,
                  "typeName": {
                    "location": 59,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "drop2",
                  "is_local": true,
                  "location": 65,
                  "typeName": {
                    "location": 71,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "numeric",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "keep2",
                  "is_local": true,
                  "location": 80,
                  "typeName": {
                    "location": 86,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "float8",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 379 1`] = `
[
  "insert into dropcol(key, drop1, keep1, drop2, keep2) values(1, 2, '2', '2', 2) on conflict(key)
    do update set drop1 = excluded.drop1, keep1 = excluded.keep1, drop2 = excluded.drop2, keep2 = excluded.keep2
    where excluded.drop1 is not null and excluded.keep1 is not null and excluded.drop2 is not null and excluded.keep2 is not null
          and dropcol.drop1 is not null and dropcol.keep1 is not null and dropcol.drop2 is not null and dropcol.keep2 is not null
    returning *",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 20,
                  "name": "key",
                },
              },
              {
                "ResTarget": {
                  "location": 25,
                  "name": "drop1",
                },
              },
              {
                "ResTarget": {
                  "location": 32,
                  "name": "keep1",
                },
              },
              {
                "ResTarget": {
                  "location": 39,
                  "name": "drop2",
                },
              },
              {
                "ResTarget": {
                  "location": 46,
                  "name": "keep2",
                },
              },
            ],
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 90,
              },
              "location": 79,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 114,
                    "name": "drop1",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "drop1",
                            },
                          },
                        ],
                        "location": 122,
                      },
                    },
                  },
                },
                {
                  "ResTarget": {
                    "location": 138,
                    "name": "keep1",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "keep1",
                            },
                          },
                        ],
                        "location": 146,
                      },
                    },
                  },
                },
                {
                  "ResTarget": {
                    "location": 162,
                    "name": "drop2",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "drop2",
                            },
                          },
                        ],
                        "location": 170,
                      },
                    },
                  },
                },
                {
                  "ResTarget": {
                    "location": 186,
                    "name": "keep2",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "keep2",
                            },
                          },
                        ],
                        "location": 194,
                      },
                    },
                  },
                },
              ],
              "whereClause": {
                "BoolExpr": {
                  "args": [
                    {
                      "NullTest": {
                        "arg": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "excluded",
                                },
                              },
                              {
                                "String": {
                                  "sval": "drop1",
                                },
                              },
                            ],
                            "location": 219,
                          },
                        },
                        "location": 234,
                        "nulltesttype": "IS_NOT_NULL",
                      },
                    },
                    {
                      "NullTest": {
                        "arg": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "excluded",
                                },
                              },
                              {
                                "String": {
                                  "sval": "keep1",
                                },
                              },
                            ],
                            "location": 250,
                          },
                        },
                        "location": 265,
                        "nulltesttype": "IS_NOT_NULL",
                      },
                    },
                    {
                      "NullTest": {
                        "arg": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "excluded",
                                },
                              },
                              {
                                "String": {
                                  "sval": "drop2",
                                },
                              },
                            ],
                            "location": 281,
                          },
                        },
                        "location": 296,
                        "nulltesttype": "IS_NOT_NULL",
                      },
                    },
                    {
                      "NullTest": {
                        "arg": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "excluded",
                                },
                              },
                              {
                                "String": {
                                  "sval": "keep2",
                                },
                              },
                            ],
                            "location": 312,
                          },
                        },
                        "location": 327,
                        "nulltesttype": "IS_NOT_NULL",
                      },
                    },
                    {
                      "NullTest": {
                        "arg": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "dropcol",
                                },
                              },
                              {
                                "String": {
                                  "sval": "drop1",
                                },
                              },
                            ],
                            "location": 353,
                          },
                        },
                        "location": 367,
                        "nulltesttype": "IS_NOT_NULL",
                      },
                    },
                    {
                      "NullTest": {
                        "arg": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "dropcol",
                                },
                              },
                              {
                                "String": {
                                  "sval": "keep1",
                                },
                              },
                            ],
                            "location": 383,
                          },
                        },
                        "location": 397,
                        "nulltesttype": "IS_NOT_NULL",
                      },
                    },
                    {
                      "NullTest": {
                        "arg": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "dropcol",
                                },
                              },
                              {
                                "String": {
                                  "sval": "drop2",
                                },
                              },
                            ],
                            "location": 413,
                          },
                        },
                        "location": 427,
                        "nulltesttype": "IS_NOT_NULL",
                      },
                    },
                    {
                      "NullTest": {
                        "arg": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "dropcol",
                                },
                              },
                              {
                                "String": {
                                  "sval": "keep2",
                                },
                              },
                            ],
                            "location": 443,
                          },
                        },
                        "location": 457,
                        "nulltesttype": "IS_NOT_NULL",
                      },
                    },
                  ],
                  "boolop": "AND_EXPR",
                  "location": 246,
                },
              },
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "dropcol",
              "relpersistence": "p",
            },
            "returningList": [
              {
                "ResTarget": {
                  "location": 483,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 483,
                    },
                  },
                },
              },
            ],
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 60,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 63,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 66,
                            "sval": {
                              "sval": "2",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "location": 71,
                            "sval": {
                              "sval": "2",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 76,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 386 1`] = `
[
  "insert into dropcol(key, drop1, keep1, drop2, keep2) values(1, 3, '3', '3', 3) on conflict(key)
    do update set drop1 = dropcol.drop1, keep1 = dropcol.keep1, drop2 = dropcol.drop2, keep2 = dropcol.keep2
    returning *",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 20,
                  "name": "key",
                },
              },
              {
                "ResTarget": {
                  "location": 25,
                  "name": "drop1",
                },
              },
              {
                "ResTarget": {
                  "location": 32,
                  "name": "keep1",
                },
              },
              {
                "ResTarget": {
                  "location": 39,
                  "name": "drop2",
                },
              },
              {
                "ResTarget": {
                  "location": 46,
                  "name": "keep2",
                },
              },
            ],
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 90,
              },
              "location": 79,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 114,
                    "name": "drop1",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "dropcol",
                            },
                          },
                          {
                            "String": {
                              "sval": "drop1",
                            },
                          },
                        ],
                        "location": 122,
                      },
                    },
                  },
                },
                {
                  "ResTarget": {
                    "location": 137,
                    "name": "keep1",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "dropcol",
                            },
                          },
                          {
                            "String": {
                              "sval": "keep1",
                            },
                          },
                        ],
                        "location": 145,
                      },
                    },
                  },
                },
                {
                  "ResTarget": {
                    "location": 160,
                    "name": "drop2",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "dropcol",
                            },
                          },
                          {
                            "String": {
                              "sval": "drop2",
                            },
                          },
                        ],
                        "location": 168,
                      },
                    },
                  },
                },
                {
                  "ResTarget": {
                    "location": 183,
                    "name": "keep2",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "dropcol",
                            },
                          },
                          {
                            "String": {
                              "sval": "keep2",
                            },
                          },
                        ],
                        "location": 191,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "dropcol",
              "relpersistence": "p",
            },
            "returningList": [
              {
                "ResTarget": {
                  "location": 219,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 219,
                    },
                  },
                },
              },
            ],
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 60,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 3,
                            },
                            "location": 63,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 66,
                            "sval": {
                              "sval": "3",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "location": 71,
                            "sval": {
                              "sval": "3",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 3,
                            },
                            "location": 76,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 392 1`] = `
[
  "insert into dropcol(key, keep1, keep2) values(1, '4', 4) on conflict(key)
    do update set keep1 = excluded.keep1, keep2 = excluded.keep2
    where excluded.keep1 is not null and excluded.keep2 is not null
          and dropcol.keep1 is not null and dropcol.keep2 is not null
    returning *",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 20,
                  "name": "key",
                },
              },
              {
                "ResTarget": {
                  "location": 25,
                  "name": "keep1",
                },
              },
              {
                "ResTarget": {
                  "location": 32,
                  "name": "keep2",
                },
              },
            ],
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 68,
              },
              "location": 57,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 92,
                    "name": "keep1",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "keep1",
                            },
                          },
                        ],
                        "location": 100,
                      },
                    },
                  },
                },
                {
                  "ResTarget": {
                    "location": 116,
                    "name": "keep2",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "keep2",
                            },
                          },
                        ],
                        "location": 124,
                      },
                    },
                  },
                },
              ],
              "whereClause": {
                "BoolExpr": {
                  "args": [
                    {
                      "NullTest": {
                        "arg": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "excluded",
                                },
                              },
                              {
                                "String": {
                                  "sval": "keep1",
                                },
                              },
                            ],
                            "location": 149,
                          },
                        },
                        "location": 164,
                        "nulltesttype": "IS_NOT_NULL",
                      },
                    },
                    {
                      "NullTest": {
                        "arg": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "excluded",
                                },
                              },
                              {
                                "String": {
                                  "sval": "keep2",
                                },
                              },
                            ],
                            "location": 180,
                          },
                        },
                        "location": 195,
                        "nulltesttype": "IS_NOT_NULL",
                      },
                    },
                    {
                      "NullTest": {
                        "arg": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "dropcol",
                                },
                              },
                              {
                                "String": {
                                  "sval": "keep1",
                                },
                              },
                            ],
                            "location": 221,
                          },
                        },
                        "location": 235,
                        "nulltesttype": "IS_NOT_NULL",
                      },
                    },
                    {
                      "NullTest": {
                        "arg": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "dropcol",
                                },
                              },
                              {
                                "String": {
                                  "sval": "keep2",
                                },
                              },
                            ],
                            "location": 251,
                          },
                        },
                        "location": 265,
                        "nulltesttype": "IS_NOT_NULL",
                      },
                    },
                  ],
                  "boolop": "AND_EXPR",
                  "location": 176,
                },
              },
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "dropcol",
              "relpersistence": "p",
            },
            "returningList": [
              {
                "ResTarget": {
                  "location": 291,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 291,
                    },
                  },
                },
              },
            ],
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 46,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 49,
                            "sval": {
                              "sval": "4",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 4,
                            },
                            "location": 54,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 399 1`] = `
[
  "insert into dropcol(key, keep1, keep2) values(1, '5', 5) on conflict(key)
    do update set keep1 = dropcol.keep1, keep2 = dropcol.keep2
    returning *",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 20,
                  "name": "key",
                },
              },
              {
                "ResTarget": {
                  "location": 25,
                  "name": "keep1",
                },
              },
              {
                "ResTarget": {
                  "location": 32,
                  "name": "keep2",
                },
              },
            ],
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "key",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 68,
              },
              "location": 57,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 92,
                    "name": "keep1",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "dropcol",
                            },
                          },
                          {
                            "String": {
                              "sval": "keep1",
                            },
                          },
                        ],
                        "location": 100,
                      },
                    },
                  },
                },
                {
                  "ResTarget": {
                    "location": 115,
                    "name": "keep2",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "dropcol",
                            },
                          },
                          {
                            "String": {
                              "sval": "keep2",
                            },
                          },
                        ],
                        "location": 123,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "dropcol",
              "relpersistence": "p",
            },
            "returningList": [
              {
                "ResTarget": {
                  "location": 151,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 151,
                    },
                  },
                },
              },
            ],
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 46,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 49,
                            "sval": {
                              "sval": "5",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 5,
                            },
                            "location": 54,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 404 1`] = `
[
  "DROP TABLE dropcol",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "dropcol",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 411 1`] = `
[
  "  -- fail on f1
insert into twoconstraints values(2, '((0,0),(1,2))')",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 28,
              "relname": "twoconstraints",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 50,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 53,
                            "sval": {
                              "sval": "((0,0),(1,2))",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 412 1`] = `
[
  "  -- fail on f2
insert into twoconstraints values(2, '((0,0),(1,2))')
  on conflict on constraint twoconstraints_f1_key do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_NOTHING",
              "infer": {
                "conname": "twoconstraints_f1_key",
                "location": 84,
              },
              "location": 72,
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 28,
              "relname": "twoconstraints",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 50,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 53,
                            "sval": {
                              "sval": "((0,0),(1,2))",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 414 1`] = `
[
  "  -- fail on f2
insert into twoconstraints values(2, '((0,0),(1,2))')
  on conflict on constraint twoconstraints_f2_excl do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_NOTHING",
              "infer": {
                "conname": "twoconstraints_f2_excl",
                "location": 84,
              },
              "location": 72,
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 28,
              "relname": "twoconstraints",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 50,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 53,
                            "sval": {
                              "sval": "((0,0),(1,2))",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 416 1`] = `
[
  "  -- do nothing
select * from twoconstraints",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 30,
                  "relname": "twoconstraints",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 23,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 23,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 424 1`] = `
[
  "begin transaction isolation level read committed",
  {
    "stmts": [
      {
        "stmt": {
          "TransactionStmt": {
            "kind": "TRANS_STMT_BEGIN",
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "A_Const": {
                      "location": 34,
                      "sval": {
                        "sval": "read committed",
                      },
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "transaction_isolation",
                  "location": 18,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 448 1`] = `
[
  "select * from selfconflict",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "selfconflict",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 450 1`] = `
[
  "drop table selfconflict",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "selfconflict",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 453 1`] = `
[
  "create table parted_conflict_test (a int unique, b char) partition by list (a)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "partspec": {
              "location": 57,
              "partParams": [
                {
                  "PartitionElem": {
                    "location": 76,
                    "name": "a",
                  },
                },
              ],
              "strategy": "PARTITION_STRATEGY_LIST",
            },
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "parted_conflict_test",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_UNIQUE",
                        "location": 41,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 35,
                  "typeName": {
                    "location": 37,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 49,
                  "typeName": {
                    "location": 51,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "bpchar",
                        },
                      },
                    ],
                    "typemod": -1,
                    "typmods": [
                      {
                        "A_Const": {
                          "ival": {
                            "ival": 1,
                          },
                          "location": -1,
                        },
                      },
                    ],
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 457 1`] = `
[
  "insert into parted_conflict_test values (1, 'a') on conflict do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_NOTHING",
              "location": 49,
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "parted_conflict_test",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 41,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 44,
                            "sval": {
                              "sval": "a",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 460 1`] = `
[
  "insert into parted_conflict_test values (1, 'a') on conflict (a) do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_NOTHING",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "a",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 61,
              },
              "location": 49,
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "parted_conflict_test",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 41,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 44,
                            "sval": {
                              "sval": "a",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 464 1`] = `
[
  "insert into parted_conflict_test_1 values (1, 'a') on conflict (a) do nothing",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_NOTHING",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "a",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 63,
              },
              "location": 51,
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "parted_conflict_test_1",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 43,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 46,
                            "sval": {
                              "sval": "a",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 468 1`] = `
[
  "insert into parted_conflict_test values (2, 'b') on conflict (b) do update set a = excluded.a",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "b",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 61,
              },
              "location": 49,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 79,
                    "name": "a",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "a",
                            },
                          },
                        ],
                        "location": 83,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "parted_conflict_test",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 41,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 44,
                            "sval": {
                              "sval": "b",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 471 1`] = `
[
  "insert into parted_conflict_test_1 values (2, 'b') on conflict (b) do update set a = excluded.a",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "b",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 63,
              },
              "location": 51,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 81,
                    "name": "a",
                    "val": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "excluded",
                            },
                          },
                          {
                            "String": {
                              "sval": "a",
                            },
                          },
                        ],
                        "location": 85,
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "parted_conflict_test_1",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 43,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 46,
                            "sval": {
                              "sval": "b",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 474 1`] = `
[
  "select * from parted_conflict_test order by a",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "parted_conflict_test",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "a",
                          },
                        },
                      ],
                      "location": 44,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 478 1`] = `
[
  "create table parted_conflict_test_2 (b char, a int unique)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "parted_conflict_test_2",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 37,
                  "typeName": {
                    "location": 39,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "bpchar",
                        },
                      },
                    ],
                    "typemod": -1,
                    "typmods": [
                      {
                        "A_Const": {
                          "ival": {
                            "ival": 1,
                          },
                          "location": -1,
                        },
                      },
                    ],
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "a",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_UNIQUE",
                        "location": 51,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 45,
                  "typeName": {
                    "location": 47,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 488 1`] = `
[
  "alter table parted_conflict_test drop b, add b char",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "name": "b",
                  "subtype": "AT_DropColumn",
                },
              },
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "def": {
                    "ColumnDef": {
                      "colname": "b",
                      "is_local": true,
                      "location": 45,
                      "typeName": {
                        "location": 47,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "bpchar",
                            },
                          },
                        ],
                        "typemod": -1,
                        "typmods": [
                          {
                            "A_Const": {
                              "ival": {
                                "ival": 1,
                              },
                              "location": -1,
                            },
                          },
                        ],
                      },
                    },
                  },
                  "subtype": "AT_AddColumn",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "parted_conflict_test",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 498 1`] = `
[
  "create table parted_conflict_test_4 partition of parted_conflict_test for values in (5) partition by list (a)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "inhRelations": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 49,
                  "relname": "parted_conflict_test",
                  "relpersistence": "p",
                },
              },
            ],
            "oncommit": "ONCOMMIT_NOOP",
            "partbound": {
              "listdatums": [
                {
                  "A_Const": {
                    "ival": {
                      "ival": 5,
                    },
                    "location": 85,
                  },
                },
              ],
              "location": 81,
              "strategy": "l",
            },
            "partspec": {
              "location": 88,
              "partParams": [
                {
                  "PartitionElem": {
                    "location": 107,
                    "name": "a",
                  },
                },
              ],
              "strategy": "PARTITION_STRATEGY_LIST",
            },
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "parted_conflict_test_4",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 508 1`] = `
[
  "truncate parted_conflict_test",
  {
    "stmts": [
      {
        "stmt": {
          "TruncateStmt": {
            "behavior": "DROP_RESTRICT",
            "relations": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 9,
                  "relname": "parted_conflict_test",
                  "relpersistence": "p",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 515 1`] = `
[
  "drop table parted_conflict_test",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "parted_conflict_test",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 519 1`] = `
[
  "create table parted_conflict (a int primary key, b text) partition by range (a)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "partspec": {
              "location": 57,
              "partParams": [
                {
                  "PartitionElem": {
                    "location": 77,
                    "name": "a",
                  },
                },
              ],
              "strategy": "PARTITION_STRATEGY_RANGE",
            },
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "parted_conflict",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_PRIMARY",
                        "location": 36,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 30,
                  "typeName": {
                    "location": 32,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 49,
                  "typeName": {
                    "location": 51,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 529 1`] = `
[
  "create table parted_conflict (a int, b text) partition by range (a)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "partspec": {
              "location": 45,
              "partParams": [
                {
                  "PartitionElem": {
                    "location": 65,
                    "name": "a",
                  },
                },
              ],
              "strategy": "PARTITION_STRATEGY_RANGE",
            },
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "parted_conflict",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 30,
                  "typeName": {
                    "location": 32,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 37,
                  "typeName": {
                    "location": 39,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 541 1`] = `
[
  "create table parted_conflict (a int, b text, c int) partition by range (a)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "partspec": {
              "location": 52,
              "partParams": [
                {
                  "PartitionElem": {
                    "location": 72,
                    "name": "a",
                  },
                },
              ],
              "strategy": "PARTITION_STRATEGY_RANGE",
            },
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "parted_conflict",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 30,
                  "typeName": {
                    "location": 32,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 37,
                  "typeName": {
                    "location": 39,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "c",
                  "is_local": true,
                  "location": 45,
                  "typeName": {
                    "location": 47,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 554 1`] = `
[
  "select * from parted_conflict order by a",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "parted_conflict",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "a",
                          },
                        },
                      ],
                      "location": 39,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 557 1`] = `
[
  "create or replace function parted_conflict_update_func() returns trigger as $$
declare
    r record;
begin
 for r in select * from inserted loop
	raise notice 'a = %, b = %, c = %', r.a, r.b, r.c;
 end loop;
 return new;
end;
$$ language plpgsql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "parted_conflict_update_func",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
declare
    r record;
begin
 for r in select * from inserted loop
	raise notice 'a = %, b = %, c = %', r.a, r.b, r.c;
 end loop;
 return new;
end;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 73,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 229,
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 65,
              "names": [
                {
                  "String": {
                    "sval": "trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 568 1`] = `
[
  "create trigger parted_conflict_update
    after update on parted_conflict
    referencing new table as inserted
    for each statement
    execute procedure parted_conflict_update_func()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTrigStmt": {
            "events": 16,
            "funcname": [
              {
                "String": {
                  "sval": "parted_conflict_update_func",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 58,
              "relname": "parted_conflict",
              "relpersistence": "p",
            },
            "transitionRels": [
              {
                "TriggerTransition": {
                  "isNew": true,
                  "isTable": true,
                  "name": "inserted",
                },
              },
            ],
            "trigname": "parted_conflict_update",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 574 1`] = `
[
  "truncate parted_conflict",
  {
    "stmts": [
      {
        "stmt": {
          "TruncateStmt": {
            "behavior": "DROP_RESTRICT",
            "relations": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 9,
                  "relname": "parted_conflict",
                  "relpersistence": "p",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 576 1`] = `
[
  "insert into parted_conflict values (0, 'cero', 1)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "parted_conflict",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {},
                            "location": 36,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 39,
                            "sval": {
                              "sval": "cero",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 47,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 578 1`] = `
[
  "insert into parted_conflict values(0, 'cero', 1)
  on conflict (a,b) do update set c = parted_conflict.c + 1",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "onConflictClause": {
              "action": "ONCONFLICT_UPDATE",
              "infer": {
                "indexElems": [
                  {
                    "IndexElem": {
                      "name": "a",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                  {
                    "IndexElem": {
                      "name": "b",
                      "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                      "ordering": "SORTBY_DEFAULT",
                    },
                  },
                ],
                "location": 63,
              },
              "location": 51,
              "targetList": [
                {
                  "ResTarget": {
                    "location": 83,
                    "name": "c",
                    "val": {
                      "A_Expr": {
                        "kind": "AEXPR_OP",
                        "lexpr": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "parted_conflict",
                                },
                              },
                              {
                                "String": {
                                  "sval": "c",
                                },
                              },
                            ],
                            "location": 87,
                          },
                        },
                        "location": 105,
                        "name": [
                          {
                            "String": {
                              "sval": "+",
                            },
                          },
                        ],
                        "rexpr": {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 107,
                          },
                        },
                      },
                    },
                  },
                },
              ],
            },
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "parted_conflict",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {},
                            "location": 35,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 38,
                            "sval": {
                              "sval": "cero",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 46,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`insert_conflict.sql > line 581 1`] = `
[
  "drop table parted_conflict",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "parted_conflict",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;
