// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`merge.sql > line 18 1`] = `
[
  "ALTER TABLE target OWNER TO regress_merge_privs",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "newowner": {
                    "location": 28,
                    "rolename": "regress_merge_privs",
                    "roletype": "ROLESPEC_CSTRING",
                  },
                  "subtype": "AT_ChangeOwner",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "target",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 21 1`] = `
[
  "CREATE TABLE target2 (tid integer, balance integer)
  WITH (autovacuum_enabled=off)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 79,
                      "names": [
                        {
                          "String": {
                            "sval": "off",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "autovacuum_enabled",
                  "location": 60,
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "target2",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "tid",
                  "is_local": true,
                  "location": 22,
                  "typeName": {
                    "location": 26,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "balance",
                  "is_local": true,
                  "location": 35,
                  "typeName": {
                    "location": 43,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 26 1`] = `
[
  "ALTER TABLE target2 OWNER TO regress_merge_no_privs",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "newowner": {
                    "location": 29,
                    "rolename": "regress_merge_no_privs",
                    "roletype": "ROLESPEC_CSTRING",
                  },
                  "subtype": "AT_ChangeOwner",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "target2",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 29 1`] = `
[
  "GRANT INSERT ON target TO regress_merge_no_privs",
  {
    "stmts": [
      {
        "stmt": {
          "GrantStmt": {
            "behavior": "DROP_RESTRICT",
            "grantees": [
              {
                "RoleSpec": {
                  "location": 26,
                  "rolename": "regress_merge_no_privs",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
            "is_grant": true,
            "objects": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 16,
                  "relname": "target",
                  "relpersistence": "p",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "privileges": [
              {
                "AccessPriv": {
                  "priv_name": "insert",
                },
              },
            ],
            "targtype": "ACL_TARGET_OBJECT",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 31 1`] = `
[
  "SET SESSION AUTHORIZATION regress_merge_privs",
  {
    "stmts": [
      {
        "stmt": {
          "VariableSetStmt": {
            "args": [
              {
                "A_Const": {
                  "location": 26,
                  "sval": {
                    "sval": "regress_merge_privs",
                  },
                },
              },
            ],
            "kind": "VAR_SET_VALUE",
            "name": "session_authorization",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 33 1`] = `
[
  "EXPLAIN (COSTS OFF)
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DELETE",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "MergeStmt": {
                "joinCondition": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "t",
                            },
                          },
                          {
                            "String": {
                              "sval": "tid",
                            },
                          },
                        ],
                        "location": 61,
                      },
                    },
                    "location": 67,
                    "name": [
                      {
                        "String": {
                          "sval": "=",
                        },
                      },
                    ],
                    "rexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "s",
                            },
                          },
                          {
                            "String": {
                              "sval": "sid",
                            },
                          },
                        ],
                        "location": 69,
                      },
                    },
                  },
                },
                "mergeWhenClauses": [
                  {
                    "MergeWhenClause": {
                      "commandType": "CMD_DELETE",
                      "matched": true,
                      "override": "OVERRIDING_NOT_SET",
                    },
                  },
                ],
                "relation": {
                  "alias": {
                    "aliasname": "t",
                  },
                  "inh": true,
                  "location": 31,
                  "relname": "target",
                  "relpersistence": "p",
                },
                "sourceRelation": {
                  "RangeVar": {
                    "alias": {
                      "aliasname": "s",
                    },
                    "inh": true,
                    "location": 46,
                    "relname": "source",
                    "relpersistence": "p",
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 85 1`] = `
[
  "MERGE INTO target
USING target
ON tid = tid
WHEN MATCHED THEN DO NOTHING",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 34,
                  },
                },
                "location": 38,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 40,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_NOTHING",
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 11,
              "relname": "target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "inh": true,
                "location": 24,
                "relname": "target",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 90 1`] = `
[
  "WITH foo AS (
  MERGE INTO target USING source ON (true)
  WHEN MATCHED THEN DELETE
) SELECT * FROM foo",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 100,
                  "relname": "foo",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 93,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 93,
                    },
                  },
                },
              },
            ],
            "withClause": {
              "ctes": [
                {
                  "CommonTableExpr": {
                    "ctematerialized": "CTEMaterializeDefault",
                    "ctename": "foo",
                    "ctequery": {
                      "MergeStmt": {
                        "joinCondition": {
                          "A_Const": {
                            "boolval": {
                              "boolval": true,
                            },
                            "location": 51,
                          },
                        },
                        "mergeWhenClauses": [
                          {
                            "MergeWhenClause": {
                              "commandType": "CMD_DELETE",
                              "matched": true,
                              "override": "OVERRIDING_NOT_SET",
                            },
                          },
                        ],
                        "relation": {
                          "inh": true,
                          "location": 27,
                          "relname": "target",
                          "relpersistence": "p",
                        },
                        "sourceRelation": {
                          "RangeVar": {
                            "inh": true,
                            "location": 40,
                            "relname": "source",
                            "relpersistence": "p",
                          },
                        },
                      },
                    },
                    "location": 5,
                  },
                },
              ],
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 95 1`] = `
[
  "COPY (
  MERGE INTO target USING source ON (true)
  WHEN MATCHED THEN DELETE
) TO stdout",
  {
    "stmts": [
      {
        "stmt": {
          "CopyStmt": {
            "query": {
              "MergeStmt": {
                "joinCondition": {
                  "A_Const": {
                    "boolval": {
                      "boolval": true,
                    },
                    "location": 44,
                  },
                },
                "mergeWhenClauses": [
                  {
                    "MergeWhenClause": {
                      "commandType": "CMD_DELETE",
                      "matched": true,
                      "override": "OVERRIDING_NOT_SET",
                    },
                  },
                ],
                "relation": {
                  "inh": true,
                  "location": 20,
                  "relname": "target",
                  "relpersistence": "p",
                },
                "sourceRelation": {
                  "RangeVar": {
                    "inh": true,
                    "location": 33,
                    "relname": "source",
                    "relpersistence": "p",
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 102 1`] = `
[
  "CREATE VIEW tv AS SELECT * FROM target",
  {
    "stmts": [
      {
        "stmt": {
          "ViewStmt": {
            "query": {
              "SelectStmt": {
                "fromClause": [
                  {
                    "RangeVar": {
                      "inh": true,
                      "location": 32,
                      "relname": "target",
                      "relpersistence": "p",
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 25,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "A_Star": {},
                            },
                          ],
                          "location": 25,
                        },
                      },
                    },
                  },
                ],
              },
            },
            "view": {
              "inh": true,
              "location": 12,
              "relname": "tv",
              "relpersistence": "p",
            },
            "withCheckOption": "NO_CHECK_OPTION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 111 1`] = `
[
  "CREATE MATERIALIZED VIEW mv AS SELECT * FROM target",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTableAsStmt": {
            "into": {
              "onCommit": "ONCOMMIT_NOOP",
              "rel": {
                "inh": true,
                "location": 25,
                "relname": "mv",
                "relpersistence": "p",
              },
            },
            "objtype": "OBJECT_MATVIEW",
            "query": {
              "SelectStmt": {
                "fromClause": [
                  {
                    "RangeVar": {
                      "inh": true,
                      "location": 45,
                      "relname": "target",
                      "relpersistence": "p",
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 38,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "A_Star": {},
                            },
                          ],
                          "location": 38,
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 130 1`] = `
[
  "MERGE INTO target
USING source2
ON target.tid = source2.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "target",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 35,
                  },
                },
                "location": 46,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "source2",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 48,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 90,
                        "name": "balance",
                        "val": {
                          "A_Const": {
                            "ival": {},
                            "location": 100,
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 11,
              "relname": "target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "inh": true,
                "location": 24,
                "relname": "source2",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 136 1`] = `
[
  "GRANT UPDATE ON target2 TO regress_merge_privs",
  {
    "stmts": [
      {
        "stmt": {
          "GrantStmt": {
            "behavior": "DROP_RESTRICT",
            "grantees": [
              {
                "RoleSpec": {
                  "location": 27,
                  "rolename": "regress_merge_privs",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
            "is_grant": true,
            "objects": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 16,
                  "relname": "target2",
                  "relpersistence": "p",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "privileges": [
              {
                "AccessPriv": {
                  "priv_name": "update",
                },
              },
            ],
            "targtype": "ACL_TARGET_OBJECT",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 139 1`] = `
[
  "MERGE INTO target2
USING source
ON target2.tid = source.sid
WHEN MATCHED THEN
	DELETE",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "target2",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 35,
                  },
                },
                "location": 47,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "source",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 49,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_DELETE",
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 11,
              "relname": "target2",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "inh": true,
                "location": 25,
                "relname": "source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 145 1`] = `
[
  "MERGE INTO target2
USING source
ON target2.tid = source.sid
WHEN NOT MATCHED THEN
	INSERT DEFAULT VALUES",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "target2",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 35,
                  },
                },
                "location": 47,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "source",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 49,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "override": "OVERRIDING_NOT_SET",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 11,
              "relname": "target2",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "inh": true,
                "location": 25,
                "relname": "source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 153 1`] = `
[
  "MERGE INTO target t
USING (SELECT * FROM source WHERE t.tid > sid) s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT DEFAULT VALUES",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 72,
                  },
                },
                "location": 78,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 80,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "override": "OVERRIDING_NOT_SET",
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeSubselect": {
                "alias": {
                  "aliasname": "s",
                },
                "subquery": {
                  "SelectStmt": {
                    "fromClause": [
                      {
                        "RangeVar": {
                          "inh": true,
                          "location": 41,
                          "relname": "source",
                          "relpersistence": "p",
                        },
                      },
                    ],
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "targetList": [
                      {
                        "ResTarget": {
                          "location": 34,
                          "val": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "A_Star": {},
                                },
                              ],
                              "location": 34,
                            },
                          },
                        },
                      },
                    ],
                    "whereClause": {
                      "A_Expr": {
                        "kind": "AEXPR_OP",
                        "lexpr": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "t",
                                },
                              },
                              {
                                "String": {
                                  "sval": "tid",
                                },
                              },
                            ],
                            "location": 54,
                          },
                        },
                        "location": 60,
                        "name": [
                          {
                            "String": {
                              "sval": ">",
                            },
                          },
                        ],
                        "rexpr": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "sid",
                                },
                              },
                            ],
                            "location": 62,
                          },
                        },
                      },
                    },
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 163 1`] = `
[
  "MERGE INTO target
USING source
ON target.tid = source.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "target",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 34,
                  },
                },
                "location": 45,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "source",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 47,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 88,
                        "name": "balance",
                        "val": {
                          "A_Const": {
                            "ival": {},
                            "location": 98,
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 11,
              "relname": "target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "inh": true,
                "location": 24,
                "relname": "source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 169 1`] = `
[
  "MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 41,
                  },
                },
                "location": 47,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 49,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 85,
                        "name": "balance",
                        "val": {
                          "A_Const": {
                            "ival": {},
                            "location": 95,
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 26,
                "relname": "source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 188 1`] = `
[
  "INSERT INTO source VALUES (4, 40)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "source",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 4,
                            },
                            "location": 27,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 40,
                            },
                            "location": 30,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 192 1`] = `
[
  "MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	DO NOTHING",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 41,
                  },
                },
                "location": 47,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 49,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_NOTHING",
                  "override": "OVERRIDING_NOT_SET",
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 26,
                "relname": "source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 217 1`] = `
[
  "INSERT INTO target SELECT generate_series(1000,2500), 0",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "target",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 26,
                      "val": {
                        "FuncCall": {
                          "args": [
                            {
                              "A_Const": {
                                "ival": {
                                  "ival": 1000,
                                },
                                "location": 42,
                              },
                            },
                            {
                              "A_Const": {
                                "ival": {
                                  "ival": 2500,
                                },
                                "location": 47,
                              },
                            },
                          ],
                          "funcformat": "COERCE_EXPLICIT_CALL",
                          "funcname": [
                            {
                              "String": {
                                "sval": "generate_series",
                              },
                            },
                          ],
                          "location": 26,
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 54,
                      "val": {
                        "A_Const": {
                          "ival": {},
                          "location": 54,
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 221 1`] = `
[
  "EXPLAIN (COSTS OFF)
MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	UPDATE SET balance = 0",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 9,
                },
              },
            ],
            "query": {
              "MergeStmt": {
                "joinCondition": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "t",
                            },
                          },
                          {
                            "String": {
                              "sval": "tid",
                            },
                          },
                        ],
                        "location": 61,
                      },
                    },
                    "location": 67,
                    "name": [
                      {
                        "String": {
                          "sval": "=",
                        },
                      },
                    ],
                    "rexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "s",
                            },
                          },
                          {
                            "String": {
                              "sval": "sid",
                            },
                          },
                        ],
                        "location": 69,
                      },
                    },
                  },
                },
                "mergeWhenClauses": [
                  {
                    "MergeWhenClause": {
                      "commandType": "CMD_UPDATE",
                      "matched": true,
                      "override": "OVERRIDING_NOT_SET",
                      "targetList": [
                        {
                          "ResTarget": {
                            "location": 105,
                            "name": "balance",
                            "val": {
                              "A_Const": {
                                "ival": {},
                                "location": 115,
                              },
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
                "relation": {
                  "alias": {
                    "aliasname": "t",
                  },
                  "inh": true,
                  "location": 31,
                  "relname": "target",
                  "relpersistence": "p",
                },
                "sourceRelation": {
                  "RangeVar": {
                    "alias": {
                      "aliasname": "s",
                    },
                    "inh": true,
                    "location": 46,
                    "relname": "source",
                    "relpersistence": "p",
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 228 1`] = `
[
  "MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED THEN
	DELETE",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 41,
                  },
                },
                "location": 47,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 49,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_DELETE",
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 26,
                "relname": "source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 234 1`] = `
[
  "MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT VALUES (4, NULL)",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 41,
                  },
                },
                "location": 47,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 49,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "override": "OVERRIDING_NOT_SET",
                  "values": [
                    {
                      "A_Const": {
                        "ival": {
                          "ival": 4,
                        },
                        "location": 93,
                      },
                    },
                    {
                      "A_Const": {
                        "isnull": true,
                        "location": 96,
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 26,
                "relname": "source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 249 1`] = `
[
  "BEGIN",
  {
    "stmts": [
      {
        "stmt": {
          "TransactionStmt": {
            "kind": "TRANS_STMT_BEGIN",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 307 1`] = `
[
  "DELETE FROM source WHERE sid = 2",
  {
    "stmts": [
      {
        "stmt": {
          "DeleteStmt": {
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "source",
              "relpersistence": "p",
            },
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 25,
                  },
                },
                "location": 29,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "A_Const": {
                    "ival": {
                      "ival": 2,
                    },
                    "location": 31,
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 330 1`] = `
[
  "alter table target drop CONSTRAINT target_pkey",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "name": "target_pkey",
                  "subtype": "AT_DropConstraint",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "target",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 406 1`] = `
[
  "MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid, balance) VALUES (t.tid, s.delta)",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 41,
                  },
                },
                "location": 47,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 49,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 86,
                        "name": "tid",
                      },
                    },
                    {
                      "ResTarget": {
                        "location": 91,
                        "name": "balance",
                      },
                    },
                  ],
                  "values": [
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "t",
                            },
                          },
                          {
                            "String": {
                              "sval": "tid",
                            },
                          },
                        ],
                        "location": 108,
                      },
                    },
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "s",
                            },
                          },
                          {
                            "String": {
                              "sval": "delta",
                            },
                          },
                        ],
                        "location": 115,
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 26,
                "relname": "source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 446 1`] = `
[
  "CREATE TABLE wq_target (tid integer not null, balance integer DEFAULT -1)
  WITH (autovacuum_enabled=off)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 101,
                      "names": [
                        {
                          "String": {
                            "sval": "off",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "autovacuum_enabled",
                  "location": 82,
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "wq_target",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "tid",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_NOTNULL",
                        "location": 36,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 24,
                  "typeName": {
                    "location": 28,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "balance",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_DEFAULT",
                        "location": 62,
                        "raw_expr": {
                          "A_Const": {
                            "ival": {},
                            "location": 70,
                          },
                        },
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 46,
                  "typeName": {
                    "location": 54,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 451 1`] = `
[
  "INSERT INTO wq_source (sid, balance) VALUES (1, 100)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 23,
                  "name": "sid",
                },
              },
              {
                "ResTarget": {
                  "location": 28,
                  "name": "balance",
                },
              },
            ],
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "wq_source",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 45,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 100,
                            },
                            "location": 48,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 455 1`] = `
[
  "MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED THEN
	INSERT (tid) VALUES (s.sid)",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 44,
                  },
                },
                "location": 50,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 52,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 89,
                        "name": "tid",
                      },
                    },
                  ],
                  "values": [
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "s",
                            },
                          },
                          {
                            "String": {
                              "sval": "sid",
                            },
                          },
                        ],
                        "location": 102,
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "wq_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 29,
                "relname": "wq_source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 470 1`] = `
[
  "MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED AND s.balance <> 100 THEN
	INSERT (tid) VALUES (s.sid)",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 44,
                  },
                },
                "location": 50,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 52,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "condition": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "s",
                              },
                            },
                            {
                              "String": {
                                "sval": "balance",
                              },
                            },
                          ],
                          "location": 79,
                        },
                      },
                      "location": 89,
                      "name": [
                        {
                          "String": {
                            "sval": "<>",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "ival": {
                            "ival": 100,
                          },
                          "location": 92,
                        },
                      },
                    },
                  },
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 110,
                        "name": "tid",
                      },
                    },
                  ],
                  "values": [
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "s",
                            },
                          },
                          {
                            "String": {
                              "sval": "sid",
                            },
                          },
                        ],
                        "location": 123,
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "wq_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 29,
                "relname": "wq_source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 478 1`] = `
[
  "MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN NOT MATCHED AND s.balance = 100 THEN
	INSERT (tid) VALUES (s.sid)",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 44,
                  },
                },
                "location": 50,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 52,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "condition": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "s",
                              },
                            },
                            {
                              "String": {
                                "sval": "balance",
                              },
                            },
                          ],
                          "location": 79,
                        },
                      },
                      "location": 89,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "ival": {
                            "ival": 100,
                          },
                          "location": 91,
                        },
                      },
                    },
                  },
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 109,
                        "name": "tid",
                      },
                    },
                  ],
                  "values": [
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "s",
                            },
                          },
                          {
                            "String": {
                              "sval": "sid",
                            },
                          },
                        ],
                        "location": 122,
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "wq_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 29,
                "relname": "wq_source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 501 1`] = `
[
  "SELECT * FROM wq_source",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "wq_source",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 508 1`] = `
[
  "MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance = 100 THEN
	UPDATE SET balance = t.balance + s.balance",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 44,
                  },
                },
                "location": 50,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 52,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "condition": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "t",
                              },
                            },
                            {
                              "String": {
                                "sval": "balance",
                              },
                            },
                          ],
                          "location": 75,
                        },
                      },
                      "location": 85,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "ival": {
                            "ival": 100,
                          },
                          "location": 87,
                        },
                      },
                    },
                  },
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 108,
                        "name": "balance",
                        "val": {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "t",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 118,
                              },
                            },
                            "location": 128,
                            "name": [
                              {
                                "String": {
                                  "sval": "+",
                                },
                              },
                            ],
                            "rexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "s",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 130,
                              },
                            },
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "wq_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 29,
                "relname": "wq_source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 515 1`] = `
[
  "MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance = 99 AND s.balance > 100 THEN
	UPDATE SET balance = t.balance + s.balance",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 44,
                  },
                },
                "location": 50,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 52,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "condition": {
                    "BoolExpr": {
                      "args": [
                        {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "t",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 75,
                              },
                            },
                            "location": 85,
                            "name": [
                              {
                                "String": {
                                  "sval": "=",
                                },
                              },
                            ],
                            "rexpr": {
                              "A_Const": {
                                "ival": {
                                  "ival": 99,
                                },
                                "location": 87,
                              },
                            },
                          },
                        },
                        {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "s",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 94,
                              },
                            },
                            "location": 104,
                            "name": [
                              {
                                "String": {
                                  "sval": ">",
                                },
                              },
                            ],
                            "rexpr": {
                              "A_Const": {
                                "ival": {
                                  "ival": 100,
                                },
                                "location": 106,
                              },
                            },
                          },
                        },
                      ],
                      "boolop": "AND_EXPR",
                      "location": 90,
                    },
                  },
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 127,
                        "name": "balance",
                        "val": {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "t",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 137,
                              },
                            },
                            "location": 147,
                            "name": [
                              {
                                "String": {
                                  "sval": "+",
                                },
                              },
                            ],
                            "rexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "s",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 149,
                              },
                            },
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "wq_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 29,
                "relname": "wq_source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 521 1`] = `
[
  "MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance = 99 AND s.balance = 100 THEN
	UPDATE SET balance = t.balance + s.balance",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 44,
                  },
                },
                "location": 50,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 52,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "condition": {
                    "BoolExpr": {
                      "args": [
                        {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "t",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 75,
                              },
                            },
                            "location": 85,
                            "name": [
                              {
                                "String": {
                                  "sval": "=",
                                },
                              },
                            ],
                            "rexpr": {
                              "A_Const": {
                                "ival": {
                                  "ival": 99,
                                },
                                "location": 87,
                              },
                            },
                          },
                        },
                        {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "s",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 94,
                              },
                            },
                            "location": 104,
                            "name": [
                              {
                                "String": {
                                  "sval": "=",
                                },
                              },
                            ],
                            "rexpr": {
                              "A_Const": {
                                "ival": {
                                  "ival": 100,
                                },
                                "location": 106,
                              },
                            },
                          },
                        },
                      ],
                      "boolop": "AND_EXPR",
                      "location": 90,
                    },
                  },
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 127,
                        "name": "balance",
                        "val": {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "t",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 137,
                              },
                            },
                            "location": 147,
                            "name": [
                              {
                                "String": {
                                  "sval": "+",
                                },
                              },
                            ],
                            "rexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "s",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 149,
                              },
                            },
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "wq_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 29,
                "relname": "wq_source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 528 1`] = `
[
  "MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance = 99 OR s.balance > 100 THEN
	UPDATE SET balance = t.balance + s.balance",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 44,
                  },
                },
                "location": 50,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 52,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "condition": {
                    "BoolExpr": {
                      "args": [
                        {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "t",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 75,
                              },
                            },
                            "location": 85,
                            "name": [
                              {
                                "String": {
                                  "sval": "=",
                                },
                              },
                            ],
                            "rexpr": {
                              "A_Const": {
                                "ival": {
                                  "ival": 99,
                                },
                                "location": 87,
                              },
                            },
                          },
                        },
                        {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "s",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 93,
                              },
                            },
                            "location": 103,
                            "name": [
                              {
                                "String": {
                                  "sval": ">",
                                },
                              },
                            ],
                            "rexpr": {
                              "A_Const": {
                                "ival": {
                                  "ival": 100,
                                },
                                "location": 105,
                              },
                            },
                          },
                        },
                      ],
                      "boolop": "OR_EXPR",
                      "location": 90,
                    },
                  },
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 126,
                        "name": "balance",
                        "val": {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "t",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 136,
                              },
                            },
                            "location": 146,
                            "name": [
                              {
                                "String": {
                                  "sval": "+",
                                },
                              },
                            ],
                            "rexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "s",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 148,
                              },
                            },
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "wq_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 29,
                "relname": "wq_source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 550 1`] = `
[
  "MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.balance > (SELECT max(balance) FROM target) THEN
	UPDATE SET balance = t.balance + s.balance",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 44,
                  },
                },
                "location": 50,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 52,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "condition": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "t",
                              },
                            },
                            {
                              "String": {
                                "sval": "balance",
                              },
                            },
                          ],
                          "location": 75,
                        },
                      },
                      "location": 85,
                      "name": [
                        {
                          "String": {
                            "sval": ">",
                          },
                        },
                      ],
                      "rexpr": {
                        "SubLink": {
                          "location": 87,
                          "subLinkType": "EXPR_SUBLINK",
                          "subselect": {
                            "SelectStmt": {
                              "fromClause": [
                                {
                                  "RangeVar": {
                                    "inh": true,
                                    "location": 113,
                                    "relname": "target",
                                    "relpersistence": "p",
                                  },
                                },
                              ],
                              "limitOption": "LIMIT_OPTION_DEFAULT",
                              "op": "SETOP_NONE",
                              "targetList": [
                                {
                                  "ResTarget": {
                                    "location": 95,
                                    "val": {
                                      "FuncCall": {
                                        "args": [
                                          {
                                            "ColumnRef": {
                                              "fields": [
                                                {
                                                  "String": {
                                                    "sval": "balance",
                                                  },
                                                },
                                              ],
                                              "location": 99,
                                            },
                                          },
                                        ],
                                        "funcformat": "COERCE_EXPLICIT_CALL",
                                        "funcname": [
                                          {
                                            "String": {
                                              "sval": "max",
                                            },
                                          },
                                        ],
                                        "location": 95,
                                      },
                                    },
                                  },
                                },
                              ],
                            },
                          },
                        },
                      },
                    },
                  },
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 138,
                        "name": "balance",
                        "val": {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "t",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 148,
                              },
                            },
                            "location": 158,
                            "name": [
                              {
                                "String": {
                                  "sval": "+",
                                },
                              },
                            ],
                            "rexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "s",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 160,
                              },
                            },
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "wq_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 29,
                "relname": "wq_source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 556 1`] = `
[
  "MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.xmin = t.xmax THEN
	UPDATE SET balance = t.balance + s.balance",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 44,
                  },
                },
                "location": 50,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 52,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "condition": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "t",
                              },
                            },
                            {
                              "String": {
                                "sval": "xmin",
                              },
                            },
                          ],
                          "location": 75,
                        },
                      },
                      "location": 82,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "t",
                              },
                            },
                            {
                              "String": {
                                "sval": "xmax",
                              },
                            },
                          ],
                          "location": 84,
                        },
                      },
                    },
                  },
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 108,
                        "name": "balance",
                        "val": {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "t",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 118,
                              },
                            },
                            "location": 128,
                            "name": [
                              {
                                "String": {
                                  "sval": "+",
                                },
                              },
                            ],
                            "rexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "s",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 130,
                              },
                            },
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "wq_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 29,
                "relname": "wq_source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 561 1`] = `
[
  "MERGE INTO wq_target t
USING wq_source s ON t.tid = s.sid
WHEN MATCHED AND t.tableoid >= 0 THEN
	UPDATE SET balance = t.balance + s.balance",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 44,
                  },
                },
                "location": 50,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 52,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "condition": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "t",
                              },
                            },
                            {
                              "String": {
                                "sval": "tableoid",
                              },
                            },
                          ],
                          "location": 75,
                        },
                      },
                      "location": 86,
                      "name": [
                        {
                          "String": {
                            "sval": ">=",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "ival": {},
                          "location": 89,
                        },
                      },
                    },
                  },
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 108,
                        "name": "balance",
                        "val": {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "t",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 118,
                              },
                            },
                            "location": 128,
                            "name": [
                              {
                                "String": {
                                  "sval": "+",
                                },
                              },
                            ],
                            "rexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "s",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 130,
                              },
                            },
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "wq_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 29,
                "relname": "wq_source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 567 1`] = `
[
  "DROP TABLE wq_target, wq_source",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "wq_target",
                      },
                    },
                  ],
                },
              },
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "wq_source",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 570 1`] = `
[
  "create or replace function merge_trigfunc () returns trigger
language plpgsql as
$$
DECLARE
	line text;
BEGIN
	SELECT INTO line format('%s %s %s trigger%s',
		TG_WHEN, TG_OP, TG_LEVEL, CASE
		WHEN TG_OP = 'INSERT' AND TG_LEVEL = 'ROW'
			THEN format(' row: %s', NEW)
		WHEN TG_OP = 'UPDATE' AND TG_LEVEL = 'ROW'
			THEN format(' row: %s -> %s', OLD, NEW)
		WHEN TG_OP = 'DELETE' AND TG_LEVEL = 'ROW'
			THEN format(' row: %s', OLD)
		END);

	RAISE NOTICE '%', line;
	IF (TG_WHEN = 'BEFORE' AND TG_LEVEL = 'ROW') THEN
		IF (TG_OP = 'DELETE') THEN
			RETURN OLD;
		ELSE
			RETURN NEW;
		END IF;
	ELSE
		RETURN NULL;
	END IF;
END;
$$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "merge_trigfunc",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 61,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
DECLARE
	line text;
BEGIN
	SELECT INTO line format('%s %s %s trigger%s',
		TG_WHEN, TG_OP, TG_LEVEL, CASE
		WHEN TG_OP = 'INSERT' AND TG_LEVEL = 'ROW'
			THEN format(' row: %s', NEW)
		WHEN TG_OP = 'UPDATE' AND TG_LEVEL = 'ROW'
			THEN format(' row: %s -> %s', OLD, NEW)
		WHEN TG_OP = 'DELETE' AND TG_LEVEL = 'ROW'
			THEN format(' row: %s', OLD)
		END);

	RAISE NOTICE '%', line;
	IF (TG_WHEN = 'BEFORE' AND TG_LEVEL = 'ROW') THEN
		IF (TG_OP = 'DELETE') THEN
			RETURN OLD;
		ELSE
			RETURN NEW;
		END IF;
	ELSE
		RETURN NULL;
	END IF;
END;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 78,
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 53,
              "names": [
                {
                  "String": {
                    "sval": "trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 615 1`] = `
[
  "MERGE INTO target t
USING source AS s
ON t.tid = s.sid
WHEN MATCHED AND t.balance > s.delta THEN
	UPDATE SET balance = t.balance - s.delta
WHEN MATCHED THEN
	DELETE
WHEN NOT MATCHED THEN
	INSERT VALUES (s.sid, s.delta)",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 41,
                  },
                },
                "location": 47,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 49,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "condition": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "t",
                              },
                            },
                            {
                              "String": {
                                "sval": "balance",
                              },
                            },
                          ],
                          "location": 72,
                        },
                      },
                      "location": 82,
                      "name": [
                        {
                          "String": {
                            "sval": ">",
                          },
                        },
                      ],
                      "rexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "s",
                              },
                            },
                            {
                              "String": {
                                "sval": "delta",
                              },
                            },
                          ],
                          "location": 84,
                        },
                      },
                    },
                  },
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 109,
                        "name": "balance",
                        "val": {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "t",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "balance",
                                    },
                                  },
                                ],
                                "location": 119,
                              },
                            },
                            "location": 129,
                            "name": [
                              {
                                "String": {
                                  "sval": "-",
                                },
                              },
                            ],
                            "rexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "s",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "delta",
                                    },
                                  },
                                ],
                                "location": 131,
                              },
                            },
                          },
                        },
                      },
                    },
                  ],
                },
              },
              {
                "MergeWhenClause": {
                  "commandType": "CMD_DELETE",
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                },
              },
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "override": "OVERRIDING_NOT_SET",
                  "values": [
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "s",
                            },
                          },
                          {
                            "String": {
                              "sval": "sid",
                            },
                          },
                        ],
                        "location": 203,
                      },
                    },
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "s",
                            },
                          },
                          {
                            "String": {
                              "sval": "delta",
                            },
                          },
                        ],
                        "location": 210,
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 26,
                "relname": "source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 628 1`] = `
[
  "create or replace function skip_merge_op() returns trigger
language plpgsql as
$$
BEGIN
	RETURN NULL;
END;
$$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "skip_merge_op",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 59,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
BEGIN
	RETURN NULL;
END;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 76,
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 51,
              "names": [
                {
                  "String": {
                    "sval": "trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 636 1`] = `
[
  "SELECT * FROM target full outer join source on (sid = tid)",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "JoinExpr": {
                  "jointype": "JOIN_FULL",
                  "larg": {
                    "RangeVar": {
                      "inh": true,
                      "location": 14,
                      "relname": "target",
                      "relpersistence": "p",
                    },
                  },
                  "quals": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "sid",
                              },
                            },
                          ],
                          "location": 48,
                        },
                      },
                      "location": 52,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "tid",
                              },
                            },
                          ],
                          "location": 54,
                        },
                      },
                    },
                  },
                  "rarg": {
                    "RangeVar": {
                      "inh": true,
                      "location": 37,
                      "relname": "source",
                      "relpersistence": "p",
                    },
                  },
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 773 1`] = `
[
  "MERGE INTO target t
USING (SELECT 1) s
ON t.tid = $1
WHEN MATCHED THEN
UPDATE SET balance = $2",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 42,
                  },
                },
                "location": 48,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ParamRef": {
                    "location": 50,
                    "number": 1,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 82,
                        "name": "balance",
                        "val": {
                          "ParamRef": {
                            "location": 92,
                            "number": 2,
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeSubselect": {
                "alias": {
                  "aliasname": "s",
                },
                "subquery": {
                  "SelectStmt": {
                    "limitOption": "LIMIT_OPTION_DEFAULT",
                    "op": "SETOP_NONE",
                    "targetList": [
                      {
                        "ResTarget": {
                          "location": 34,
                          "val": {
                            "A_Const": {
                              "ival": {
                                "ival": 1,
                              },
                              "location": 34,
                            },
                          },
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 779 1`] = `
[
  "execute foom2 (1, 1)",
  {
    "stmts": [
      {
        "stmt": {
          "ExecuteStmt": {
            "name": "foom2",
            "params": [
              {
                "A_Const": {
                  "ival": {
                    "ival": 1,
                  },
                  "location": 15,
                },
              },
              {
                "A_Const": {
                  "ival": {
                    "ival": 1,
                  },
                  "location": 18,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 790 1`] = `
[
  "INSERT INTO sq_target(tid, balance) VALUES (1,100), (2,200), (3,300)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 22,
                  "name": "tid",
                },
              },
              {
                "ResTarget": {
                  "location": 27,
                  "name": "balance",
                },
              },
            ],
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "sq_target",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 44,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 100,
                            },
                            "location": 46,
                          },
                        },
                      ],
                    },
                  },
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 53,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 200,
                            },
                            "location": 55,
                          },
                        },
                      ],
                    },
                  },
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 3,
                            },
                            "location": 62,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 300,
                            },
                            "location": 64,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 803 1`] = `
[
  "CREATE VIEW v AS SELECT * FROM sq_source WHERE sid < 2",
  {
    "stmts": [
      {
        "stmt": {
          "ViewStmt": {
            "query": {
              "SelectStmt": {
                "fromClause": [
                  {
                    "RangeVar": {
                      "inh": true,
                      "location": 31,
                      "relname": "sq_source",
                      "relpersistence": "p",
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 24,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "A_Star": {},
                            },
                          ],
                          "location": 24,
                        },
                      },
                    },
                  },
                ],
                "whereClause": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "sid",
                            },
                          },
                        ],
                        "location": 47,
                      },
                    },
                    "location": 51,
                    "name": [
                      {
                        "String": {
                          "sval": "<",
                        },
                      },
                    ],
                    "rexpr": {
                      "A_Const": {
                        "ival": {
                          "ival": 2,
                        },
                        "location": 53,
                      },
                    },
                  },
                },
              },
            },
            "view": {
              "inh": true,
              "location": 12,
              "relname": "v",
              "relpersistence": "p",
            },
            "withCheckOption": "NO_CHECK_OPTION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 874 1`] = `
[
  "CREATE TABLE ex_mtarget (a int, b int)
  WITH (autovacuum_enabled=off)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 66,
                      "names": [
                        {
                          "String": {
                            "sval": "off",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "autovacuum_enabled",
                  "location": 47,
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "ex_mtarget",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 25,
                  "typeName": {
                    "location": 27,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 32,
                  "typeName": {
                    "location": 34,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 881 1`] = `
[
  "CREATE FUNCTION explain_merge(query text) RETURNS SETOF text
LANGUAGE plpgsql AS
$$
DECLARE ln text;
BEGIN
    FOR ln IN
        EXECUTE 'explain (analyze, timing off, summary off, costs off) ' ||
		  query
    LOOP
        ln := regexp_replace(ln, '(Memory( Usage)?|Buckets|Batches): \\S*',  '\\1: xxx', 'g');
        RETURN NEXT ln;
    END LOOP;
END;
$$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "explain_merge",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 61,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
DECLARE ln text;
BEGIN
    FOR ln IN
        EXECUTE 'explain (analyze, timing off, summary off, costs off) ' ||
		  query
    LOOP
        ln := regexp_replace(ln, '(Memory( Usage)?|Buckets|Batches): \\S*',  '\\1: xxx', 'g');
        RETURN NEXT ln;
    END LOOP;
END;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 78,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 36,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                  "name": "query",
                },
              },
            ],
            "returnType": {
              "location": 56,
              "names": [
                {
                  "String": {
                    "sval": "text",
                  },
                },
              ],
              "setof": true,
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 897 1`] = `
[
  "SELECT explain_merge('
MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
WHEN MATCHED THEN
	UPDATE SET b = t.b + 1')",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "A_Const": {
                            "location": 21,
                            "sval": {
                              "sval": "
MERGE INTO ex_mtarget t USING ex_msource s ON t.a = s.a
WHEN MATCHED THEN
	UPDATE SET b = t.b + 1",
                            },
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "explain_merge",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 938 1`] = `
[
  "DROP TABLE ex_msource, ex_mtarget",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "ex_msource",
                      },
                    },
                  ],
                },
              },
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "ex_mtarget",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 969 1`] = `
[
  "DROP TABLE sq_target, sq_source CASCADE",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_CASCADE",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "sq_target",
                      },
                    },
                  ],
                },
              },
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "sq_source",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 971 1`] = `
[
  "CREATE TABLE pa_target (tid integer, balance float, val text)
	PARTITION BY LIST (tid)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "partspec": {
              "location": 63,
              "partParams": [
                {
                  "PartitionElem": {
                    "location": 82,
                    "name": "tid",
                  },
                },
              ],
              "strategy": "PARTITION_STRATEGY_LIST",
            },
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "pa_target",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "tid",
                  "is_local": true,
                  "location": 24,
                  "typeName": {
                    "location": 28,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "balance",
                  "is_local": true,
                  "location": 37,
                  "typeName": {
                    "location": 45,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "float8",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "val",
                  "is_local": true,
                  "location": 52,
                  "typeName": {
                    "location": 56,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 974 1`] = `
[
  "CREATE TABLE part1 PARTITION OF pa_target FOR VALUES IN (1,4)
  WITH (autovacuum_enabled=off)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "inhRelations": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 32,
                  "relname": "pa_target",
                  "relpersistence": "p",
                },
              },
            ],
            "oncommit": "ONCOMMIT_NOOP",
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 89,
                      "names": [
                        {
                          "String": {
                            "sval": "off",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "autovacuum_enabled",
                  "location": 70,
                },
              },
            ],
            "partbound": {
              "listdatums": [
                {
                  "A_Const": {
                    "ival": {
                      "ival": 1,
                    },
                    "location": 57,
                  },
                },
                {
                  "A_Const": {
                    "ival": {
                      "ival": 4,
                    },
                    "location": 59,
                  },
                },
              ],
              "location": 53,
              "strategy": "l",
            },
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "part1",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 983 1`] = `
[
  "CREATE TABLE pa_source (sid integer, delta float)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "pa_source",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "sid",
                  "is_local": true,
                  "location": 24,
                  "typeName": {
                    "location": 28,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "delta",
                  "is_local": true,
                  "location": 37,
                  "typeName": {
                    "location": 43,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "float8",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 985 1`] = `
[
  "INSERT INTO pa_source SELECT id, id * 10  FROM generate_series(1,14) AS id",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "pa_source",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "fromClause": [
                  {
                    "RangeFunction": {
                      "alias": {
                        "aliasname": "id",
                      },
                      "functions": [
                        {
                          "List": {
                            "items": [
                              {
                                "FuncCall": {
                                  "args": [
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 1,
                                        },
                                        "location": 63,
                                      },
                                    },
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 14,
                                        },
                                        "location": 65,
                                      },
                                    },
                                  ],
                                  "funcformat": "COERCE_EXPLICIT_CALL",
                                  "funcname": [
                                    {
                                      "String": {
                                        "sval": "generate_series",
                                      },
                                    },
                                  ],
                                  "location": 47,
                                },
                              },
                              {},
                            ],
                          },
                        },
                      ],
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 29,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "id",
                              },
                            },
                          ],
                          "location": 29,
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 33,
                      "val": {
                        "A_Expr": {
                          "kind": "AEXPR_OP",
                          "lexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "id",
                                  },
                                },
                              ],
                              "location": 33,
                            },
                          },
                          "location": 36,
                          "name": [
                            {
                              "String": {
                                "sval": "*",
                              },
                            },
                          ],
                          "rexpr": {
                            "A_Const": {
                              "ival": {
                                "ival": 10,
                              },
                              "location": 38,
                            },
                          },
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 987 1`] = `
[
  "INSERT INTO pa_target SELECT id, id * 100, 'initial' FROM generate_series(1,14,2) AS id",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "pa_target",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "fromClause": [
                  {
                    "RangeFunction": {
                      "alias": {
                        "aliasname": "id",
                      },
                      "functions": [
                        {
                          "List": {
                            "items": [
                              {
                                "FuncCall": {
                                  "args": [
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 1,
                                        },
                                        "location": 74,
                                      },
                                    },
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 14,
                                        },
                                        "location": 76,
                                      },
                                    },
                                    {
                                      "A_Const": {
                                        "ival": {
                                          "ival": 2,
                                        },
                                        "location": 79,
                                      },
                                    },
                                  ],
                                  "funcformat": "COERCE_EXPLICIT_CALL",
                                  "funcname": [
                                    {
                                      "String": {
                                        "sval": "generate_series",
                                      },
                                    },
                                  ],
                                  "location": 58,
                                },
                              },
                              {},
                            ],
                          },
                        },
                      ],
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 29,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "id",
                              },
                            },
                          ],
                          "location": 29,
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 33,
                      "val": {
                        "A_Expr": {
                          "kind": "AEXPR_OP",
                          "lexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "id",
                                  },
                                },
                              ],
                              "location": 33,
                            },
                          },
                          "location": 36,
                          "name": [
                            {
                              "String": {
                                "sval": "*",
                              },
                            },
                          ],
                          "rexpr": {
                            "A_Const": {
                              "ival": {
                                "ival": 100,
                              },
                              "location": 38,
                            },
                          },
                        },
                      },
                    },
                  },
                  {
                    "ResTarget": {
                      "location": 43,
                      "val": {
                        "A_Const": {
                          "location": 43,
                          "sval": {
                            "sval": "initial",
                          },
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1036 1`] = `
[
  "DROP TABLE pa_target CASCADE",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_CASCADE",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "pa_target",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1043 1`] = `
[
  "CREATE TABLE part1 (tid integer, balance float, val text)
  WITH (autovacuum_enabled=off)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 85,
                      "names": [
                        {
                          "String": {
                            "sval": "off",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "autovacuum_enabled",
                  "location": 66,
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "part1",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "tid",
                  "is_local": true,
                  "location": 20,
                  "typeName": {
                    "location": 24,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "balance",
                  "is_local": true,
                  "location": 33,
                  "typeName": {
                    "location": 41,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "float8",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "val",
                  "is_local": true,
                  "location": 48,
                  "typeName": {
                    "location": 52,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1053 1`] = `
[
  "ALTER TABLE pa_target ATTACH PARTITION part1 FOR VALUES IN (1,4)",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "def": {
                    "PartitionCmd": {
                      "bound": {
                        "listdatums": [
                          {
                            "A_Const": {
                              "ival": {
                                "ival": 1,
                              },
                              "location": 60,
                            },
                          },
                          {
                            "A_Const": {
                              "ival": {
                                "ival": 4,
                              },
                              "location": 62,
                            },
                          },
                        ],
                        "location": 56,
                        "strategy": "l",
                      },
                      "name": {
                        "inh": true,
                        "location": 39,
                        "relname": "part1",
                        "relpersistence": "p",
                      },
                    },
                  },
                  "subtype": "AT_AttachPartition",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "pa_target",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1110 1`] = `
[
  "DROP TABLE pa_source",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "pa_source",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1114 1`] = `
[
  "CREATE TABLE pa_target (logts timestamp, tid integer, balance float, val text)
	PARTITION BY RANGE (logts)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "partspec": {
              "location": 80,
              "partParams": [
                {
                  "PartitionElem": {
                    "location": 100,
                    "name": "logts",
                  },
                },
              ],
              "strategy": "PARTITION_STRATEGY_RANGE",
            },
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "pa_target",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "logts",
                  "is_local": true,
                  "location": 24,
                  "typeName": {
                    "location": 30,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "timestamp",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "tid",
                  "is_local": true,
                  "location": 41,
                  "typeName": {
                    "location": 45,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "balance",
                  "is_local": true,
                  "location": 54,
                  "typeName": {
                    "location": 62,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "float8",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "val",
                  "is_local": true,
                  "location": 69,
                  "typeName": {
                    "location": 73,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1117 1`] = `
[
  "CREATE TABLE part_m01 PARTITION OF pa_target
	FOR VALUES FROM ('2017-01-01') TO ('2017-02-01')
	PARTITION BY LIST (tid)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "inhRelations": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 35,
                  "relname": "pa_target",
                  "relpersistence": "p",
                },
              },
            ],
            "oncommit": "ONCOMMIT_NOOP",
            "partbound": {
              "location": 57,
              "lowerdatums": [
                {
                  "A_Const": {
                    "location": 63,
                    "sval": {
                      "sval": "2017-01-01",
                    },
                  },
                },
              ],
              "strategy": "r",
              "upperdatums": [
                {
                  "A_Const": {
                    "location": 81,
                    "sval": {
                      "sval": "2017-02-01",
                    },
                  },
                },
              ],
            },
            "partspec": {
              "location": 96,
              "partParams": [
                {
                  "PartitionElem": {
                    "location": 115,
                    "name": "tid",
                  },
                },
              ],
              "strategy": "PARTITION_STRATEGY_LIST",
            },
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "part_m01",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1132 1`] = `
[
  "CREATE TABLE pa_source (sid integer, delta float)
  WITH (autovacuum_enabled=off)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 77,
                      "names": [
                        {
                          "String": {
                            "sval": "off",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "autovacuum_enabled",
                  "location": 58,
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "pa_source",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "sid",
                  "is_local": true,
                  "location": 24,
                  "typeName": {
                    "location": 28,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "delta",
                  "is_local": true,
                  "location": 37,
                  "typeName": {
                    "location": 43,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "float8",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1161 1`] = `
[
  "INSERT INTO pa_source VALUES (1), (2)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "pa_source",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 30,
                          },
                        },
                      ],
                    },
                  },
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 35,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1163 1`] = `
[
  "EXPLAIN (VERBOSE, COSTS OFF)
MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
  WHEN NOT MATCHED THEN INSERT VALUES (s.sid)",
  {
    "stmts": [
      {
        "stmt": {
          "ExplainStmt": {
            "options": [
              {
                "DefElem": {
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "verbose",
                  "location": 9,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "off",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "costs",
                  "location": 18,
                },
              },
            ],
            "query": {
              "MergeStmt": {
                "joinCondition": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "t",
                            },
                          },
                          {
                            "String": {
                              "sval": "tid",
                            },
                          },
                        ],
                        "location": 73,
                      },
                    },
                    "location": 79,
                    "name": [
                      {
                        "String": {
                          "sval": "=",
                        },
                      },
                    ],
                    "rexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "s",
                            },
                          },
                          {
                            "String": {
                              "sval": "sid",
                            },
                          },
                        ],
                        "location": 81,
                      },
                    },
                  },
                },
                "mergeWhenClauses": [
                  {
                    "MergeWhenClause": {
                      "commandType": "CMD_INSERT",
                      "override": "OVERRIDING_NOT_SET",
                      "values": [
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "s",
                                },
                              },
                              {
                                "String": {
                                  "sval": "sid",
                                },
                              },
                            ],
                            "location": 126,
                          },
                        },
                      ],
                    },
                  },
                ],
                "relation": {
                  "alias": {
                    "aliasname": "t",
                  },
                  "inh": true,
                  "location": 40,
                  "relname": "pa_target",
                  "relpersistence": "p",
                },
                "sourceRelation": {
                  "RangeVar": {
                    "alias": {
                      "aliasname": "s",
                    },
                    "inh": true,
                    "location": 58,
                    "relname": "pa_source",
                    "relpersistence": "p",
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1167 1`] = `
[
  "MERGE INTO pa_target t USING pa_source s ON t.tid = s.sid
  WHEN NOT MATCHED THEN INSERT VALUES (s.sid)",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 44,
                  },
                },
                "location": 50,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 52,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "override": "OVERRIDING_NOT_SET",
                  "values": [
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "s",
                            },
                          },
                          {
                            "String": {
                              "sval": "sid",
                            },
                          },
                        ],
                        "location": 97,
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "pa_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "s",
                },
                "inh": true,
                "location": 29,
                "relname": "pa_source",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1170 1`] = `
[
  "TABLE pa_target",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 6,
                  "relname": "pa_target",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": -1,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": -1,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1204 1`] = `
[
  "MERGE INTO cj_target t
USING cj_source1 s1
	INNER JOIN cj_source2 s2 ON sid1 = sid2
ON t.tid = sid1
WHEN NOT MATCHED THEN
	INSERT VALUES (sid1, delta, sval)",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 87,
                  },
                },
                "location": 93,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "sid1",
                        },
                      },
                    ],
                    "location": 95,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "override": "OVERRIDING_NOT_SET",
                  "values": [
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "sid1",
                            },
                          },
                        ],
                        "location": 138,
                      },
                    },
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "delta",
                            },
                          },
                        ],
                        "location": 144,
                      },
                    },
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "sval",
                            },
                          },
                        ],
                        "location": 151,
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "cj_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "JoinExpr": {
                "jointype": "JOIN_INNER",
                "larg": {
                  "RangeVar": {
                    "alias": {
                      "aliasname": "s1",
                    },
                    "inh": true,
                    "location": 29,
                    "relname": "cj_source1",
                    "relpersistence": "p",
                  },
                },
                "quals": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "sid1",
                            },
                          },
                        ],
                        "location": 72,
                      },
                    },
                    "location": 77,
                    "name": [
                      {
                        "String": {
                          "sval": "=",
                        },
                      },
                    ],
                    "rexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "sid2",
                            },
                          },
                        ],
                        "location": 79,
                      },
                    },
                  },
                },
                "rarg": {
                  "RangeVar": {
                    "alias": {
                      "aliasname": "s2",
                    },
                    "inh": true,
                    "location": 55,
                    "relname": "cj_source2",
                    "relpersistence": "p",
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1212 1`] = `
[
  "MERGE INTO cj_target t
USING cj_source2 s2
	INNER JOIN cj_source1 s1 ON sid1 = sid2 AND scat = 20
ON t.tid = sid1
WHEN NOT MATCHED THEN
	INSERT VALUES (sid2, delta, sval)
WHEN MATCHED THEN
	DELETE",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 101,
                  },
                },
                "location": 107,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "sid1",
                        },
                      },
                    ],
                    "location": 109,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "override": "OVERRIDING_NOT_SET",
                  "values": [
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "sid2",
                            },
                          },
                        ],
                        "location": 152,
                      },
                    },
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "delta",
                            },
                          },
                        ],
                        "location": 158,
                      },
                    },
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "sval",
                            },
                          },
                        ],
                        "location": 165,
                      },
                    },
                  ],
                },
              },
              {
                "MergeWhenClause": {
                  "commandType": "CMD_DELETE",
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "cj_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "JoinExpr": {
                "jointype": "JOIN_INNER",
                "larg": {
                  "RangeVar": {
                    "alias": {
                      "aliasname": "s2",
                    },
                    "inh": true,
                    "location": 29,
                    "relname": "cj_source2",
                    "relpersistence": "p",
                  },
                },
                "quals": {
                  "BoolExpr": {
                    "args": [
                      {
                        "A_Expr": {
                          "kind": "AEXPR_OP",
                          "lexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "sid1",
                                  },
                                },
                              ],
                              "location": 72,
                            },
                          },
                          "location": 77,
                          "name": [
                            {
                              "String": {
                                "sval": "=",
                              },
                            },
                          ],
                          "rexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "sid2",
                                  },
                                },
                              ],
                              "location": 79,
                            },
                          },
                        },
                      },
                      {
                        "A_Expr": {
                          "kind": "AEXPR_OP",
                          "lexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "scat",
                                  },
                                },
                              ],
                              "location": 88,
                            },
                          },
                          "location": 93,
                          "name": [
                            {
                              "String": {
                                "sval": "=",
                              },
                            },
                          ],
                          "rexpr": {
                            "A_Const": {
                              "ival": {
                                "ival": 20,
                              },
                              "location": 95,
                            },
                          },
                        },
                      },
                    ],
                    "boolop": "AND_EXPR",
                    "location": 84,
                  },
                },
                "rarg": {
                  "RangeVar": {
                    "alias": {
                      "aliasname": "s1",
                    },
                    "inh": true,
                    "location": 55,
                    "relname": "cj_source1",
                    "relpersistence": "p",
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1222 1`] = `
[
  "MERGE INTO cj_target t
USING cj_source2 s2
	INNER JOIN cj_source1 s1 ON sid1 = sid2
ON t.tid = sid1
WHEN NOT MATCHED THEN
	INSERT VALUES (sid2, delta + scat, sval)
WHEN MATCHED THEN
	UPDATE SET val = val || ' updated by merge'",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 87,
                  },
                },
                "location": 93,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "sid1",
                        },
                      },
                    ],
                    "location": 95,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "override": "OVERRIDING_NOT_SET",
                  "values": [
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "sid2",
                            },
                          },
                        ],
                        "location": 138,
                      },
                    },
                    {
                      "A_Expr": {
                        "kind": "AEXPR_OP",
                        "lexpr": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "delta",
                                },
                              },
                            ],
                            "location": 144,
                          },
                        },
                        "location": 150,
                        "name": [
                          {
                            "String": {
                              "sval": "+",
                            },
                          },
                        ],
                        "rexpr": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "scat",
                                },
                              },
                            ],
                            "location": 152,
                          },
                        },
                      },
                    },
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "sval",
                            },
                          },
                        ],
                        "location": 158,
                      },
                    },
                  ],
                },
              },
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 194,
                        "name": "val",
                        "val": {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "val",
                                    },
                                  },
                                ],
                                "location": 200,
                              },
                            },
                            "location": 204,
                            "name": [
                              {
                                "String": {
                                  "sval": "||",
                                },
                              },
                            ],
                            "rexpr": {
                              "A_Const": {
                                "location": 207,
                                "sval": {
                                  "sval": " updated by merge",
                                },
                              },
                            },
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "cj_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "JoinExpr": {
                "jointype": "JOIN_INNER",
                "larg": {
                  "RangeVar": {
                    "alias": {
                      "aliasname": "s2",
                    },
                    "inh": true,
                    "location": 29,
                    "relname": "cj_source2",
                    "relpersistence": "p",
                  },
                },
                "quals": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "sid1",
                            },
                          },
                        ],
                        "location": 72,
                      },
                    },
                    "location": 77,
                    "name": [
                      {
                        "String": {
                          "sval": "=",
                        },
                      },
                    ],
                    "rexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "sid2",
                            },
                          },
                        ],
                        "location": 79,
                      },
                    },
                  },
                },
                "rarg": {
                  "RangeVar": {
                    "alias": {
                      "aliasname": "s1",
                    },
                    "inh": true,
                    "location": 55,
                    "relname": "cj_source1",
                    "relpersistence": "p",
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1231 1`] = `
[
  "MERGE INTO cj_target t
USING cj_source2 s2
	INNER JOIN cj_source1 s1 ON sid1 = sid2 AND scat = 20
ON t.tid = sid1
WHEN MATCHED THEN
	UPDATE SET val = val || ' ' || delta::text",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 101,
                  },
                },
                "location": 107,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "sid1",
                        },
                      },
                    ],
                    "location": 109,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 144,
                        "name": "val",
                        "val": {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "A_Expr": {
                                "kind": "AEXPR_OP",
                                "lexpr": {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "val",
                                        },
                                      },
                                    ],
                                    "location": 150,
                                  },
                                },
                                "location": 154,
                                "name": [
                                  {
                                    "String": {
                                      "sval": "||",
                                    },
                                  },
                                ],
                                "rexpr": {
                                  "A_Const": {
                                    "location": 157,
                                    "sval": {
                                      "sval": " ",
                                    },
                                  },
                                },
                              },
                            },
                            "location": 161,
                            "name": [
                              {
                                "String": {
                                  "sval": "||",
                                },
                              },
                            ],
                            "rexpr": {
                              "TypeCast": {
                                "arg": {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "delta",
                                        },
                                      },
                                    ],
                                    "location": 164,
                                  },
                                },
                                "location": 169,
                                "typeName": {
                                  "location": 171,
                                  "names": [
                                    {
                                      "String": {
                                        "sval": "text",
                                      },
                                    },
                                  ],
                                  "typemod": -1,
                                },
                              },
                            },
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "cj_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "JoinExpr": {
                "jointype": "JOIN_INNER",
                "larg": {
                  "RangeVar": {
                    "alias": {
                      "aliasname": "s2",
                    },
                    "inh": true,
                    "location": 29,
                    "relname": "cj_source2",
                    "relpersistence": "p",
                  },
                },
                "quals": {
                  "BoolExpr": {
                    "args": [
                      {
                        "A_Expr": {
                          "kind": "AEXPR_OP",
                          "lexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "sid1",
                                  },
                                },
                              ],
                              "location": 72,
                            },
                          },
                          "location": 77,
                          "name": [
                            {
                              "String": {
                                "sval": "=",
                              },
                            },
                          ],
                          "rexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "sid2",
                                  },
                                },
                              ],
                              "location": 79,
                            },
                          },
                        },
                      },
                      {
                        "A_Expr": {
                          "kind": "AEXPR_OP",
                          "lexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "scat",
                                  },
                                },
                              ],
                              "location": 88,
                            },
                          },
                          "location": 93,
                          "name": [
                            {
                              "String": {
                                "sval": "=",
                              },
                            },
                          ],
                          "rexpr": {
                            "A_Const": {
                              "ival": {
                                "ival": 20,
                              },
                              "location": 95,
                            },
                          },
                        },
                      },
                    ],
                    "boolop": "AND_EXPR",
                    "location": 84,
                  },
                },
                "rarg": {
                  "RangeVar": {
                    "alias": {
                      "aliasname": "s1",
                    },
                    "inh": true,
                    "location": 55,
                    "relname": "cj_source1",
                    "relpersistence": "p",
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1238 1`] = `
[
  "SELECT * FROM cj_target",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "cj_target",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1241 1`] = `
[
  "MERGE INTO cj_target t
USING (SELECT *, 'join input'::text AS phv FROM cj_source1) fj
	FULL JOIN cj_source2 fj2 ON fj.scat = fj2.sid2 * 10
ON t.tid = fj.scat
WHEN NOT MATCHED THEN
	INSERT (tid, balance, val) VALUES (fj.scat, fj.delta, fj.phv)",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 142,
                  },
                },
                "location": 148,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "fj",
                        },
                      },
                      {
                        "String": {
                          "sval": "scat",
                        },
                      },
                    ],
                    "location": 150,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 189,
                        "name": "tid",
                      },
                    },
                    {
                      "ResTarget": {
                        "location": 194,
                        "name": "balance",
                      },
                    },
                    {
                      "ResTarget": {
                        "location": 203,
                        "name": "val",
                      },
                    },
                  ],
                  "values": [
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "fj",
                            },
                          },
                          {
                            "String": {
                              "sval": "scat",
                            },
                          },
                        ],
                        "location": 216,
                      },
                    },
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "fj",
                            },
                          },
                          {
                            "String": {
                              "sval": "delta",
                            },
                          },
                        ],
                        "location": 225,
                      },
                    },
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "fj",
                            },
                          },
                          {
                            "String": {
                              "sval": "phv",
                            },
                          },
                        ],
                        "location": 235,
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "cj_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "JoinExpr": {
                "jointype": "JOIN_FULL",
                "larg": {
                  "RangeSubselect": {
                    "alias": {
                      "aliasname": "fj",
                    },
                    "subquery": {
                      "SelectStmt": {
                        "fromClause": [
                          {
                            "RangeVar": {
                              "inh": true,
                              "location": 71,
                              "relname": "cj_source1",
                              "relpersistence": "p",
                            },
                          },
                        ],
                        "limitOption": "LIMIT_OPTION_DEFAULT",
                        "op": "SETOP_NONE",
                        "targetList": [
                          {
                            "ResTarget": {
                              "location": 37,
                              "val": {
                                "ColumnRef": {
                                  "fields": [
                                    {
                                      "A_Star": {},
                                    },
                                  ],
                                  "location": 37,
                                },
                              },
                            },
                          },
                          {
                            "ResTarget": {
                              "location": 40,
                              "name": "phv",
                              "val": {
                                "TypeCast": {
                                  "arg": {
                                    "A_Const": {
                                      "location": 40,
                                      "sval": {
                                        "sval": "join input",
                                      },
                                    },
                                  },
                                  "location": 52,
                                  "typeName": {
                                    "location": 54,
                                    "names": [
                                      {
                                        "String": {
                                          "sval": "text",
                                        },
                                      },
                                    ],
                                    "typemod": -1,
                                  },
                                },
                              },
                            },
                          },
                        ],
                      },
                    },
                  },
                },
                "quals": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "fj",
                            },
                          },
                          {
                            "String": {
                              "sval": "scat",
                            },
                          },
                        ],
                        "location": 115,
                      },
                    },
                    "location": 123,
                    "name": [
                      {
                        "String": {
                          "sval": "=",
                        },
                      },
                    ],
                    "rexpr": {
                      "A_Expr": {
                        "kind": "AEXPR_OP",
                        "lexpr": {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "fj2",
                                },
                              },
                              {
                                "String": {
                                  "sval": "sid2",
                                },
                              },
                            ],
                            "location": 125,
                          },
                        },
                        "location": 134,
                        "name": [
                          {
                            "String": {
                              "sval": "*",
                            },
                          },
                        ],
                        "rexpr": {
                          "A_Const": {
                            "ival": {
                              "ival": 10,
                            },
                            "location": 136,
                          },
                        },
                      },
                    },
                  },
                },
                "rarg": {
                  "RangeVar": {
                    "alias": {
                      "aliasname": "fj2",
                    },
                    "inh": true,
                    "location": 97,
                    "relname": "cj_source2",
                    "relpersistence": "p",
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1250 1`] = `
[
  "ALTER TABLE cj_source1 RENAME COLUMN sid1 TO sid",
  {
    "stmts": [
      {
        "stmt": {
          "RenameStmt": {
            "behavior": "DROP_RESTRICT",
            "newname": "sid",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "cj_source1",
              "relpersistence": "p",
            },
            "relationType": "OBJECT_TABLE",
            "renameType": "OBJECT_COLUMN",
            "subname": "sid1",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1253 1`] = `
[
  "TRUNCATE cj_target",
  {
    "stmts": [
      {
        "stmt": {
          "TruncateStmt": {
            "behavior": "DROP_RESTRICT",
            "relations": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 9,
                  "relname": "cj_target",
                  "relpersistence": "p",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1255 1`] = `
[
  "MERGE INTO cj_target t
USING cj_source1 s1
	INNER JOIN cj_source2 s2 ON s1.sid = s2.sid
ON t.tid = s1.sid
WHEN NOT MATCHED THEN
	INSERT VALUES (s2.sid, delta, sval)",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "tid",
                        },
                      },
                    ],
                    "location": 91,
                  },
                },
                "location": 97,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "s1",
                        },
                      },
                      {
                        "String": {
                          "sval": "sid",
                        },
                      },
                    ],
                    "location": 99,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "override": "OVERRIDING_NOT_SET",
                  "values": [
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "s2",
                            },
                          },
                          {
                            "String": {
                              "sval": "sid",
                            },
                          },
                        ],
                        "location": 144,
                      },
                    },
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "delta",
                            },
                          },
                        ],
                        "location": 152,
                      },
                    },
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "sval",
                            },
                          },
                        ],
                        "location": 159,
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "cj_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "JoinExpr": {
                "jointype": "JOIN_INNER",
                "larg": {
                  "RangeVar": {
                    "alias": {
                      "aliasname": "s1",
                    },
                    "inh": true,
                    "location": 29,
                    "relname": "cj_source1",
                    "relpersistence": "p",
                  },
                },
                "quals": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "s1",
                            },
                          },
                          {
                            "String": {
                              "sval": "sid",
                            },
                          },
                        ],
                        "location": 72,
                      },
                    },
                    "location": 79,
                    "name": [
                      {
                        "String": {
                          "sval": "=",
                        },
                      },
                    ],
                    "rexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "s2",
                            },
                          },
                          {
                            "String": {
                              "sval": "sid",
                            },
                          },
                        ],
                        "location": 81,
                      },
                    },
                  },
                },
                "rarg": {
                  "RangeVar": {
                    "alias": {
                      "aliasname": "s2",
                    },
                    "inh": true,
                    "location": 55,
                    "relname": "cj_source2",
                    "relpersistence": "p",
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1262 1`] = `
[
  "DROP TABLE cj_source2, cj_source1, cj_target",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "cj_source2",
                      },
                    },
                  ],
                },
              },
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "cj_source1",
                      },
                    },
                  ],
                },
              },
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "cj_target",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1265 1`] = `
[
  "CREATE TABLE fs_target (a int, b int, c text)
  WITH (autovacuum_enabled=off)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 73,
                      "names": [
                        {
                          "String": {
                            "sval": "off",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "autovacuum_enabled",
                  "location": 54,
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "fs_target",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 24,
                  "typeName": {
                    "location": 26,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 31,
                  "typeName": {
                    "location": 33,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "c",
                  "is_local": true,
                  "location": 38,
                  "typeName": {
                    "location": 40,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1275 1`] = `
[
  "MERGE INTO fs_target t
USING generate_series(1,100,2) AS id
ON t.a = id
WHEN MATCHED THEN
	UPDATE SET b = b + id, c = 'updated '|| id.*::text
WHEN NOT MATCHED THEN
	INSERT VALUES (id, -1, 'inserted ' || id.*::text)",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "t",
                        },
                      },
                      {
                        "String": {
                          "sval": "a",
                        },
                      },
                    ],
                    "location": 63,
                  },
                },
                "location": 67,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "id",
                        },
                      },
                    ],
                    "location": 69,
                  },
                },
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 102,
                        "name": "b",
                        "val": {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "b",
                                    },
                                  },
                                ],
                                "location": 106,
                              },
                            },
                            "location": 108,
                            "name": [
                              {
                                "String": {
                                  "sval": "+",
                                },
                              },
                            ],
                            "rexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "id",
                                    },
                                  },
                                ],
                                "location": 110,
                              },
                            },
                          },
                        },
                      },
                    },
                    {
                      "ResTarget": {
                        "location": 114,
                        "name": "c",
                        "val": {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "A_Const": {
                                "location": 118,
                                "sval": {
                                  "sval": "updated ",
                                },
                              },
                            },
                            "location": 128,
                            "name": [
                              {
                                "String": {
                                  "sval": "||",
                                },
                              },
                            ],
                            "rexpr": {
                              "TypeCast": {
                                "arg": {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "id",
                                        },
                                      },
                                      {
                                        "A_Star": {},
                                      },
                                    ],
                                    "location": 131,
                                  },
                                },
                                "location": 135,
                                "typeName": {
                                  "location": 137,
                                  "names": [
                                    {
                                      "String": {
                                        "sval": "text",
                                      },
                                    },
                                  ],
                                  "typemod": -1,
                                },
                              },
                            },
                          },
                        },
                      },
                    },
                  ],
                },
              },
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "override": "OVERRIDING_NOT_SET",
                  "values": [
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "id",
                            },
                          },
                        ],
                        "location": 180,
                      },
                    },
                    {
                      "A_Const": {
                        "ival": {},
                        "location": 184,
                      },
                    },
                    {
                      "A_Expr": {
                        "kind": "AEXPR_OP",
                        "lexpr": {
                          "A_Const": {
                            "location": 188,
                            "sval": {
                              "sval": "inserted ",
                            },
                          },
                        },
                        "location": 200,
                        "name": [
                          {
                            "String": {
                              "sval": "||",
                            },
                          },
                        ],
                        "rexpr": {
                          "TypeCast": {
                            "arg": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "id",
                                    },
                                  },
                                  {
                                    "A_Star": {},
                                  },
                                ],
                                "location": 203,
                              },
                            },
                            "location": 207,
                            "typeName": {
                              "location": 209,
                              "names": [
                                {
                                  "String": {
                                    "sval": "text",
                                  },
                                },
                              ],
                              "typemod": -1,
                            },
                          },
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "t",
              },
              "inh": true,
              "location": 11,
              "relname": "fs_target",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeFunction": {
                "alias": {
                  "aliasname": "id",
                },
                "functions": [
                  {
                    "List": {
                      "items": [
                        {
                          "FuncCall": {
                            "args": [
                              {
                                "A_Const": {
                                  "ival": {
                                    "ival": 1,
                                  },
                                  "location": 45,
                                },
                              },
                              {
                                "A_Const": {
                                  "ival": {
                                    "ival": 100,
                                  },
                                  "location": 47,
                                },
                              },
                              {
                                "A_Const": {
                                  "ival": {
                                    "ival": 2,
                                  },
                                  "location": 51,
                                },
                              },
                            ],
                            "funcformat": "COERCE_EXPLICIT_CALL",
                            "funcname": [
                              {
                                "String": {
                                  "sval": "generate_series",
                                },
                              },
                            ],
                            "location": 29,
                          },
                        },
                        {},
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1283 1`] = `
[
  "SELECT count(*) FROM fs_target",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 21,
                  "relname": "fs_target",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "agg_star": true,
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "count",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1290 1`] = `
[
  "CREATE TABLE measurement (
    city_id         int not null,
    logdate         date not null,
    peaktemp        int,
    unitsales       int
) WITH (autovacuum_enabled=off)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 172,
                      "names": [
                        {
                          "String": {
                            "sval": "off",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "autovacuum_enabled",
                  "location": 153,
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "measurement",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "city_id",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_NOTNULL",
                        "location": 51,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 31,
                  "typeName": {
                    "location": 47,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "logdate",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_NOTNULL",
                        "location": 86,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 65,
                  "typeName": {
                    "location": 81,
                    "names": [
                      {
                        "String": {
                          "sval": "date",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "peaktemp",
                  "is_local": true,
                  "location": 100,
                  "typeName": {
                    "location": 116,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "unitsales",
                  "is_local": true,
                  "location": 125,
                  "typeName": {
                    "location": 141,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1314 1`] = `
[
  "CREATE OR REPLACE FUNCTION measurement_insert_trigger()
RETURNS TRIGGER AS $$
BEGIN
    IF ( NEW.logdate >= DATE '2006-02-01' AND
         NEW.logdate < DATE '2006-03-01' ) THEN
        INSERT INTO measurement_y2006m02 VALUES (NEW.*);
    ELSIF ( NEW.logdate >= DATE '2006-03-01' AND
            NEW.logdate < DATE '2006-04-01' ) THEN
        INSERT INTO measurement_y2006m03 VALUES (NEW.*);
    ELSIF ( NEW.logdate >= DATE '2007-01-01' AND
            NEW.logdate < DATE '2007-02-01' ) THEN
        INSERT INTO measurement_y2007m01 (city_id, logdate, peaktemp, unitsales)
            VALUES (NEW.*);
    ELSE
        RAISE EXCEPTION 'Date out of range.  Fix the measurement_insert_trigger() function!';
    END IF;
    RETURN NULL;
END;
$$ LANGUAGE plpgsql ",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "measurement_insert_trigger",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
BEGIN
    IF ( NEW.logdate >= DATE '2006-02-01' AND
         NEW.logdate < DATE '2006-03-01' ) THEN
        INSERT INTO measurement_y2006m02 VALUES (NEW.*);
    ELSIF ( NEW.logdate >= DATE '2006-03-01' AND
            NEW.logdate < DATE '2006-04-01' ) THEN
        INSERT INTO measurement_y2006m03 VALUES (NEW.*);
    ELSIF ( NEW.logdate >= DATE '2007-01-01' AND
            NEW.logdate < DATE '2007-02-01' ) THEN
        INSERT INTO measurement_y2007m01 (city_id, logdate, peaktemp, unitsales)
            VALUES (NEW.*);
    ELSE
        RAISE EXCEPTION 'Date out of range.  Fix the measurement_insert_trigger() function!';
    END IF;
    RETURN NULL;
END;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 72,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 741,
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 64,
              "names": [
                {
                  "String": {
                    "sval": "trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1343 1`] = `
[
  "SELECT tableoid::regclass, * FROM measurement ORDER BY city_id, logdate",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 34,
                  "relname": "measurement",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "city_id",
                          },
                        },
                      ],
                      "location": 55,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "logdate",
                          },
                        },
                      ],
                      "location": 64,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "TypeCast": {
                      "arg": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "tableoid",
                              },
                            },
                          ],
                          "location": 7,
                        },
                      },
                      "location": 15,
                      "typeName": {
                        "location": 17,
                        "names": [
                          {
                            "String": {
                              "sval": "regclass",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 27,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 27,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1345 1`] = `
[
  "CREATE TABLE new_measurement (LIKE measurement) WITH (autovacuum_enabled=off)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 73,
                      "names": [
                        {
                          "String": {
                            "sval": "off",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "autovacuum_enabled",
                  "location": 54,
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "new_measurement",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "TableLikeClause": {
                  "relation": {
                    "inh": true,
                    "location": 35,
                    "relname": "measurement",
                    "relpersistence": "p",
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1367 1`] = `
[
  "SELECT tableoid::regclass, * FROM measurement ORDER BY city_id, logdate, peaktemp",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 34,
                  "relname": "measurement",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "city_id",
                          },
                        },
                      ],
                      "location": 55,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "logdate",
                          },
                        },
                      ],
                      "location": 64,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "peaktemp",
                          },
                        },
                      ],
                      "location": 73,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "TypeCast": {
                      "arg": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "tableoid",
                              },
                            },
                          ],
                          "location": 7,
                        },
                      },
                      "location": 15,
                      "typeName": {
                        "location": 17,
                        "names": [
                          {
                            "String": {
                              "sval": "regclass",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 27,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 27,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1370 1`] = `
[
  "MERGE into measurement m
 USING new_measurement nm ON
      (m.city_id = nm.city_id and m.logdate=nm.logdate)
WHEN MATCHED AND nm.peaktemp IS NULL THEN DELETE
WHEN MATCHED THEN UPDATE
     SET peaktemp = greatest(m.peaktemp, nm.peaktemp),
        unitsales = m.unitsales + coalesce(nm.unitsales, 0)
WHEN NOT MATCHED THEN INSERT
     (city_id, logdate, peaktemp, unitsales)
   VALUES (city_id, logdate, peaktemp, unitsales)",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "BoolExpr": {
                "args": [
                  {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "m",
                              },
                            },
                            {
                              "String": {
                                "sval": "city_id",
                              },
                            },
                          ],
                          "location": 61,
                        },
                      },
                      "location": 71,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "nm",
                              },
                            },
                            {
                              "String": {
                                "sval": "city_id",
                              },
                            },
                          ],
                          "location": 73,
                        },
                      },
                    },
                  },
                  {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "m",
                              },
                            },
                            {
                              "String": {
                                "sval": "logdate",
                              },
                            },
                          ],
                          "location": 88,
                        },
                      },
                      "location": 97,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "nm",
                              },
                            },
                            {
                              "String": {
                                "sval": "logdate",
                              },
                            },
                          ],
                          "location": 98,
                        },
                      },
                    },
                  },
                ],
                "boolop": "AND_EXPR",
                "location": 84,
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_DELETE",
                  "condition": {
                    "NullTest": {
                      "arg": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "nm",
                              },
                            },
                            {
                              "String": {
                                "sval": "peaktemp",
                              },
                            },
                          ],
                          "location": 127,
                        },
                      },
                      "location": 139,
                      "nulltesttype": "IS_NULL",
                    },
                  },
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                },
              },
              {
                "MergeWhenClause": {
                  "commandType": "CMD_UPDATE",
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 193,
                        "name": "peaktemp",
                        "val": {
                          "MinMaxExpr": {
                            "args": [
                              {
                                "ColumnRef": {
                                  "fields": [
                                    {
                                      "String": {
                                        "sval": "m",
                                      },
                                    },
                                    {
                                      "String": {
                                        "sval": "peaktemp",
                                      },
                                    },
                                  ],
                                  "location": 213,
                                },
                              },
                              {
                                "ColumnRef": {
                                  "fields": [
                                    {
                                      "String": {
                                        "sval": "nm",
                                      },
                                    },
                                    {
                                      "String": {
                                        "sval": "peaktemp",
                                      },
                                    },
                                  ],
                                  "location": 225,
                                },
                              },
                            ],
                            "location": 204,
                            "op": "IS_GREATEST",
                          },
                        },
                      },
                    },
                    {
                      "ResTarget": {
                        "location": 247,
                        "name": "unitsales",
                        "val": {
                          "A_Expr": {
                            "kind": "AEXPR_OP",
                            "lexpr": {
                              "ColumnRef": {
                                "fields": [
                                  {
                                    "String": {
                                      "sval": "m",
                                    },
                                  },
                                  {
                                    "String": {
                                      "sval": "unitsales",
                                    },
                                  },
                                ],
                                "location": 259,
                              },
                            },
                            "location": 271,
                            "name": [
                              {
                                "String": {
                                  "sval": "+",
                                },
                              },
                            ],
                            "rexpr": {
                              "CoalesceExpr": {
                                "args": [
                                  {
                                    "ColumnRef": {
                                      "fields": [
                                        {
                                          "String": {
                                            "sval": "nm",
                                          },
                                        },
                                        {
                                          "String": {
                                            "sval": "unitsales",
                                          },
                                        },
                                      ],
                                      "location": 282,
                                    },
                                  },
                                  {
                                    "A_Const": {
                                      "ival": {},
                                      "location": 296,
                                    },
                                  },
                                ],
                                "location": 273,
                              },
                            },
                          },
                        },
                      },
                    },
                  ],
                },
              },
              {
                "MergeWhenClause": {
                  "commandType": "CMD_INSERT",
                  "override": "OVERRIDING_NOT_SET",
                  "targetList": [
                    {
                      "ResTarget": {
                        "location": 334,
                        "name": "city_id",
                      },
                    },
                    {
                      "ResTarget": {
                        "location": 343,
                        "name": "logdate",
                      },
                    },
                    {
                      "ResTarget": {
                        "location": 352,
                        "name": "peaktemp",
                      },
                    },
                    {
                      "ResTarget": {
                        "location": 362,
                        "name": "unitsales",
                      },
                    },
                  ],
                  "values": [
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "city_id",
                            },
                          },
                        ],
                        "location": 384,
                      },
                    },
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "logdate",
                            },
                          },
                        ],
                        "location": 393,
                      },
                    },
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "peaktemp",
                            },
                          },
                        ],
                        "location": 402,
                      },
                    },
                    {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "unitsales",
                            },
                          },
                        ],
                        "location": 412,
                      },
                    },
                  ],
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "m",
              },
              "inh": true,
              "location": 11,
              "relname": "measurement",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "nm",
                },
                "inh": true,
                "location": 32,
                "relname": "new_measurement",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1389 1`] = `
[
  "SELECT * FROM new_measurement ORDER BY city_id, logdate",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "new_measurement",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "city_id",
                          },
                        },
                      ],
                      "location": 39,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "logdate",
                          },
                        },
                      ],
                      "location": 48,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1392 1`] = `
[
  "MERGE INTO new_measurement nm
 USING measurement m ON
      (nm.city_id = m.city_id and nm.logdate=m.logdate)
WHEN MATCHED THEN DELETE",
  {
    "stmts": [
      {
        "stmt": {
          "MergeStmt": {
            "joinCondition": {
              "BoolExpr": {
                "args": [
                  {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "nm",
                              },
                            },
                            {
                              "String": {
                                "sval": "city_id",
                              },
                            },
                          ],
                          "location": 61,
                        },
                      },
                      "location": 72,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "m",
                              },
                            },
                            {
                              "String": {
                                "sval": "city_id",
                              },
                            },
                          ],
                          "location": 74,
                        },
                      },
                    },
                  },
                  {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "nm",
                              },
                            },
                            {
                              "String": {
                                "sval": "logdate",
                              },
                            },
                          ],
                          "location": 88,
                        },
                      },
                      "location": 98,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "m",
                              },
                            },
                            {
                              "String": {
                                "sval": "logdate",
                              },
                            },
                          ],
                          "location": 99,
                        },
                      },
                    },
                  },
                ],
                "boolop": "AND_EXPR",
                "location": 84,
              },
            },
            "mergeWhenClauses": [
              {
                "MergeWhenClause": {
                  "commandType": "CMD_DELETE",
                  "matched": true,
                  "override": "OVERRIDING_NOT_SET",
                },
              },
            ],
            "relation": {
              "alias": {
                "aliasname": "nm",
              },
              "inh": true,
              "location": 11,
              "relname": "new_measurement",
              "relpersistence": "p",
            },
            "sourceRelation": {
              "RangeVar": {
                "alias": {
                  "aliasname": "m",
                },
                "inh": true,
                "location": 37,
                "relname": "measurement",
                "relpersistence": "p",
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`merge.sql > line 1399 1`] = `
[
  "DROP TABLE measurement, new_measurement CASCADE",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_CASCADE",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "measurement",
                      },
                    },
                  ],
                },
              },
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "new_measurement",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;
