// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`sequence.sql > line 6 1`] = `
[
  "CREATE SEQUENCE sequence_testx INCREMENT BY 0",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "Integer": {},
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "increment",
                  "location": 31,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 16,
              "relname": "sequence_testx",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 14 1`] = `
[
  "CREATE SEQUENCE sequence_testx OWNED BY nobody",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "nobody",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "owned_by",
                  "location": 31,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 16,
              "relname": "sequence_testx",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 14 2`] = `
[
  "  -- nonsense word
CREATE SEQUENCE sequence_testx OWNED BY pg_class_oid_index.oid",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "pg_class_oid_index",
                          },
                        },
                        {
                          "String": {
                            "sval": "oid",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "owned_by",
                  "location": 50,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 35,
              "relname": "sequence_testx",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 15 1`] = `
[
  "  -- not a table
CREATE SEQUENCE sequence_testx OWNED BY pg_class.relname",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "pg_class",
                          },
                        },
                        {
                          "String": {
                            "sval": "relname",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "owned_by",
                  "location": 48,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 33,
              "relname": "sequence_testx",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 16 1`] = `
[
  "  -- not same schema
CREATE TABLE sequence_test_table (a int)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 34,
              "relname": "sequence_test_table",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 55,
                  "typeName": {
                    "location": 57,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 18 1`] = `
[
  "  -- wrong column
DROP TABLE sequence_test_table",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "sequence_test_table",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 22 1`] = `
[
  "CREATE SEQUENCE sequence_test5 AS integer",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 34,
                      "names": [
                        {
                          "String": {
                            "sval": "pg_catalog",
                          },
                        },
                        {
                          "String": {
                            "sval": "int4",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 31,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 16,
              "relname": "sequence_test5",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 35 1`] = `
[
  "CREATE SEQUENCE sequence_testx AS smallint MAXVALUE 100000",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 34,
                      "names": [
                        {
                          "String": {
                            "sval": "pg_catalog",
                          },
                        },
                        {
                          "String": {
                            "sval": "int2",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 31,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 100000,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "maxvalue",
                  "location": 43,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 16,
              "relname": "sequence_testx",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 38 1`] = `
[
  "ALTER SEQUENCE sequence_test5 AS smallint",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 33,
                      "names": [
                        {
                          "String": {
                            "sval": "pg_catalog",
                          },
                        },
                        {
                          "String": {
                            "sval": "int2",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 30,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 15,
              "relname": "sequence_test5",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 38 2`] = `
[
  "  -- success, max will be adjusted
ALTER SEQUENCE sequence_test8 AS smallint",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 68,
                      "names": [
                        {
                          "String": {
                            "sval": "pg_catalog",
                          },
                        },
                        {
                          "String": {
                            "sval": "int2",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 65,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 50,
              "relname": "sequence_test8",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 39 1`] = `
[
  "  -- fail, max has to be adjusted
ALTER SEQUENCE sequence_test8 AS smallint MAXVALUE 20000",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 67,
                      "names": [
                        {
                          "String": {
                            "sval": "pg_catalog",
                          },
                        },
                        {
                          "String": {
                            "sval": "int2",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 64,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 20000,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "maxvalue",
                  "location": 76,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 49,
              "relname": "sequence_test8",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 40 1`] = `
[
  "  -- ok now
ALTER SEQUENCE sequence_test9 AS smallint",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 45,
                      "names": [
                        {
                          "String": {
                            "sval": "pg_catalog",
                          },
                        },
                        {
                          "String": {
                            "sval": "int2",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 42,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 27,
              "relname": "sequence_test9",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 41 1`] = `
[
  "  -- success, min will be adjusted
ALTER SEQUENCE sequence_test10 AS smallint",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 69,
                      "names": [
                        {
                          "String": {
                            "sval": "pg_catalog",
                          },
                        },
                        {
                          "String": {
                            "sval": "int2",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 66,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 50,
              "relname": "sequence_test10",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 42 1`] = `
[
  "  -- fail, min has to be adjusted
ALTER SEQUENCE sequence_test10 AS smallint MINVALUE -20000",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 68,
                      "names": [
                        {
                          "String": {
                            "sval": "pg_catalog",
                          },
                        },
                        {
                          "String": {
                            "sval": "int2",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 65,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {},
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "minvalue",
                  "location": 77,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 49,
              "relname": "sequence_test10",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 43 1`] = `
[
  "  -- ok now

ALTER SEQUENCE sequence_test11 AS int",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 47,
                      "names": [
                        {
                          "String": {
                            "sval": "pg_catalog",
                          },
                        },
                        {
                          "String": {
                            "sval": "int4",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 44,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 28,
              "relname": "sequence_test11",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 48 1`] = `
[
  "  -- min and max will be adjusted

---
--- test creation of SERIAL column
---

CREATE TABLE serialTest1 (f1 text, f2 serial)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 92,
              "relname": "serialtest1",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "f1",
                  "is_local": true,
                  "location": 105,
                  "typeName": {
                    "location": 108,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "f2",
                  "is_local": true,
                  "location": 114,
                  "typeName": {
                    "location": 117,
                    "names": [
                      {
                        "String": {
                          "sval": "serial",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 56 1`] = `
[
  "INSERT INTO serialTest1 VALUES ('foo')",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "serialtest1",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 32,
                            "sval": {
                              "sval": "foo",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 61 1`] = `
[
  "SELECT * FROM serialTest1",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "serialtest1",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 63 1`] = `
[
  "SELECT pg_get_serial_sequence('serialTest1', 'f2')",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "A_Const": {
                            "location": 30,
                            "sval": {
                              "sval": "serialTest1",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "location": 45,
                            "sval": {
                              "sval": "f2",
                            },
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "pg_get_serial_sequence",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 66 1`] = `
[
  "CREATE TABLE serialTest2 (f1 text, f2 serial, f3 smallserial, f4 serial2,
  f5 bigserial, f6 serial8)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "serialtest2",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "f1",
                  "is_local": true,
                  "location": 26,
                  "typeName": {
                    "location": 29,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "f2",
                  "is_local": true,
                  "location": 35,
                  "typeName": {
                    "location": 38,
                    "names": [
                      {
                        "String": {
                          "sval": "serial",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "f3",
                  "is_local": true,
                  "location": 46,
                  "typeName": {
                    "location": 49,
                    "names": [
                      {
                        "String": {
                          "sval": "smallserial",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "f4",
                  "is_local": true,
                  "location": 62,
                  "typeName": {
                    "location": 65,
                    "names": [
                      {
                        "String": {
                          "sval": "serial2",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "f5",
                  "is_local": true,
                  "location": 76,
                  "typeName": {
                    "location": 79,
                    "names": [
                      {
                        "String": {
                          "sval": "bigserial",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "f6",
                  "is_local": true,
                  "location": 90,
                  "typeName": {
                    "location": 93,
                    "names": [
                      {
                        "String": {
                          "sval": "serial8",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 69 1`] = `
[
  "INSERT INTO serialTest2 (f1)
  VALUES ('test_defaults')",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 25,
                  "name": "f1",
                },
              },
            ],
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "serialtest2",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 39,
                            "sval": {
                              "sval": "test_defaults",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 72 1`] = `
[
  "INSERT INTO serialTest2 (f1, f2, f3, f4, f5, f6)
  VALUES ('test_max_vals', 2147483647, 32767, 32767, 9223372036854775807,
          9223372036854775807),
         ('test_min_vals', -2147483648, -32768, -32768, -9223372036854775808,
          -9223372036854775808)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 25,
                  "name": "f1",
                },
              },
              {
                "ResTarget": {
                  "location": 29,
                  "name": "f2",
                },
              },
              {
                "ResTarget": {
                  "location": 33,
                  "name": "f3",
                },
              },
              {
                "ResTarget": {
                  "location": 37,
                  "name": "f4",
                },
              },
              {
                "ResTarget": {
                  "location": 41,
                  "name": "f5",
                },
              },
              {
                "ResTarget": {
                  "location": 45,
                  "name": "f6",
                },
              },
            ],
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "serialtest2",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 59,
                            "sval": {
                              "sval": "test_max_vals",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2147483647,
                            },
                            "location": 76,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 32767,
                            },
                            "location": 88,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 32767,
                            },
                            "location": 95,
                          },
                        },
                        {
                          "A_Const": {
                            "fval": {
                              "fval": "9223372036854775807",
                            },
                            "location": 102,
                          },
                        },
                        {
                          "A_Const": {
                            "fval": {
                              "fval": "9223372036854775807",
                            },
                            "location": 133,
                          },
                        },
                      ],
                    },
                  },
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 165,
                            "sval": {
                              "sval": "test_min_vals",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "fval": {
                              "fval": "-2147483648",
                            },
                            "location": 182,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {},
                            "location": 195,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {},
                            "location": 203,
                          },
                        },
                        {
                          "A_Const": {
                            "fval": {
                              "fval": "-9223372036854775808",
                            },
                            "location": 211,
                          },
                        },
                        {
                          "A_Const": {
                            "fval": {
                              "fval": "-9223372036854775808",
                            },
                            "location": 243,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 79 1`] = `
[
  "INSERT INTO serialTest2 (f1, f3)
  VALUES ('bogus', -32769)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 25,
                  "name": "f1",
                },
              },
              {
                "ResTarget": {
                  "location": 29,
                  "name": "f3",
                },
              },
            ],
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "serialtest2",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 43,
                            "sval": {
                              "sval": "bogus",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {},
                            "location": 52,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 82 1`] = `
[
  "INSERT INTO serialTest2 (f1, f4)
  VALUES ('bogus', -32769)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 25,
                  "name": "f1",
                },
              },
              {
                "ResTarget": {
                  "location": 29,
                  "name": "f4",
                },
              },
            ],
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "serialtest2",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 43,
                            "sval": {
                              "sval": "bogus",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {},
                            "location": 52,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 91 1`] = `
[
  "INSERT INTO serialTest2 (f1, f5)
  VALUES ('bogus', -9223372036854775809)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 25,
                  "name": "f1",
                },
              },
              {
                "ResTarget": {
                  "location": 29,
                  "name": "f5",
                },
              },
            ],
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "serialtest2",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 43,
                            "sval": {
                              "sval": "bogus",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "fval": {
                              "fval": "-9223372036854775809",
                            },
                            "location": 52,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 94 1`] = `
[
  "INSERT INTO serialTest2 (f1, f6)
  VALUES ('bogus', -9223372036854775809)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "cols": [
              {
                "ResTarget": {
                  "location": 25,
                  "name": "f1",
                },
              },
              {
                "ResTarget": {
                  "location": 29,
                  "name": "f6",
                },
              },
            ],
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "serialtest2",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 43,
                            "sval": {
                              "sval": "bogus",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "fval": {
                              "fval": "-9223372036854775809",
                            },
                            "location": 52,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 103 1`] = `
[
  "SELECT * FROM serialTest2 ORDER BY f2 ASC",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "serialtest2",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "f2",
                          },
                        },
                      ],
                      "location": 35,
                    },
                  },
                  "sortby_dir": "SORTBY_ASC",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 105 1`] = `
[
  "SELECT nextval('serialTest2_f2_seq')",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "A_Const": {
                            "location": 15,
                            "sval": {
                              "sval": "serialTest2_f2_seq",
                            },
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "nextval",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 112 1`] = `
[
  "CREATE SEQUENCE sequence_test",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "sequence": {
              "inh": true,
              "location": 16,
              "relname": "sequence_test",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 130 1`] = `
[
  "DROP SEQUENCE sequence_test",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "sequence_test",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_SEQUENCE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 133 1`] = `
[
  "CREATE SEQUENCE foo_seq",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "sequence": {
              "inh": true,
              "location": 16,
              "relname": "foo_seq",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 140 1`] = `
[
  "SELECT last_value, log_cnt IN (31, 32) AS log_cnt_ok, is_called FROM foo_seq_new",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 69,
                  "relname": "foo_seq_new",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "last_value",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 19,
                  "name": "log_cnt_ok",
                  "val": {
                    "A_Expr": {
                      "kind": "AEXPR_IN",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "log_cnt",
                              },
                            },
                          ],
                          "location": 19,
                        },
                      },
                      "location": 27,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "ival": {
                                  "ival": 31,
                                },
                                "location": 31,
                              },
                            },
                            {
                              "A_Const": {
                                "ival": {
                                  "ival": 32,
                                },
                                "location": 35,
                              },
                            },
                          ],
                        },
                      },
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 54,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "is_called",
                          },
                        },
                      ],
                      "location": 54,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 144 1`] = `
[
  "ALTER TABLE serialtest1_f2_seq RENAME TO serialtest1_f2_foo",
  {
    "stmts": [
      {
        "stmt": {
          "RenameStmt": {
            "behavior": "DROP_RESTRICT",
            "newname": "serialtest1_f2_foo",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "serialtest1_f2_seq",
              "relpersistence": "p",
            },
            "relationType": "OBJECT_ACCESS_METHOD",
            "renameType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 151 1`] = `
[
  "CREATE TEMP SEQUENCE myseq2",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "sequence": {
              "inh": true,
              "location": 21,
              "relname": "myseq2",
              "relpersistence": "t",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 159 1`] = `
[
  "DROP SEQUENCE t1_f1_seq",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "t1_f1_seq",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_SEQUENCE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 162 1`] = `
[
  "DROP SEQUENCE myseq3",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "myseq3",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_SEQUENCE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 167 1`] = `
[
  "DROP SEQUENCE myseq2",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "myseq2",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_SEQUENCE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 176 1`] = `
[
  "ALTER SEQUENCE serialTest1 CYCLE",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "Boolean": {
                      "boolval": true,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "cycle",
                  "location": 27,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 15,
              "relname": "serialtest1",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 176 2`] = `
[
  "  -- error, not a sequence

CREATE SEQUENCE sequence_test2 START WITH 32",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 32,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "start",
                  "location": 59,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 44,
              "relname": "sequence_test2",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 184 1`] = `
[
  "ALTER SEQUENCE sequence_test2 RESTART",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "restart",
                  "location": 30,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 15,
              "relname": "sequence_test2",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 187 1`] = `
[
  "  -- error
ALTER SEQUENCE sequence_test4 RESTART WITH 40",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 40,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "restart",
                  "location": 41,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 26,
              "relname": "sequence_test4",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 188 1`] = `
[
  "  -- error

-- test CYCLE and NO CYCLE
ALTER SEQUENCE sequence_test2 RESTART WITH 24
  INCREMENT BY 4 MAXVALUE 36 MINVALUE 5 CYCLE",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 24,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "restart",
                  "location": 69,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 4,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "increment",
                  "location": 87,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 36,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "maxvalue",
                  "location": 102,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 5,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "minvalue",
                  "location": 114,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Boolean": {
                      "boolval": true,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "cycle",
                  "location": 125,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 54,
              "relname": "sequence_test2",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 197 1`] = `
[
  "  -- cycled

ALTER SEQUENCE sequence_test2 RESTART WITH 24
  NO CYCLE",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 24,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "restart",
                  "location": 43,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Boolean": {
                      "boolval": false,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "cycle",
                  "location": 61,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 28,
              "relname": "sequence_test2",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 205 1`] = `
[
  "  -- error

ALTER SEQUENCE sequence_test2 RESTART WITH -24 START WITH -24
  INCREMENT BY -4 MINVALUE -36 MAXVALUE -5 CYCLE",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "Integer": {},
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "restart",
                  "location": 42,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {},
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "start",
                  "location": 59,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {},
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "increment",
                  "location": 76,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {},
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "minvalue",
                  "location": 92,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {},
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "maxvalue",
                  "location": 105,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Boolean": {
                      "boolval": true,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "cycle",
                  "location": 117,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 27,
              "relname": "sequence_test2",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 213 1`] = `
[
  "  -- cycled

ALTER SEQUENCE sequence_test2 RESTART WITH -24
  NO CYCLE",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "Integer": {},
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "restart",
                  "location": 43,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Boolean": {
                      "boolval": false,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "cycle",
                  "location": 62,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 28,
              "relname": "sequence_test2",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 221 1`] = `
[
  "  -- error

-- reset
ALTER SEQUENCE IF EXISTS sequence_test2 RESTART WITH 32 START WITH 32
  INCREMENT BY 4 MAXVALUE 36 MINVALUE 5 CYCLE",
  {
    "stmts": [
      {
        "stmt": {
          "AlterSeqStmt": {
            "missing_ok": true,
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 32,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "restart",
                  "location": 61,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 32,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "start",
                  "location": 77,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 4,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "increment",
                  "location": 93,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 36,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "maxvalue",
                  "location": 108,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 5,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "minvalue",
                  "location": 120,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Boolean": {
                      "boolval": true,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "cycle",
                  "location": 131,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 46,
              "relname": "sequence_test2",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 227 1`] = `
[
  "SELECT setval('sequence_test2', -100)",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "A_Const": {
                            "location": 14,
                            "sval": {
                              "sval": "sequence_test2",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {},
                            "location": 32,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "setval",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 231 1`] = `
[
  "CREATE SEQUENCE sequence_test3",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "sequence": {
              "inh": true,
              "location": 16,
              "relname": "sequence_test3",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 231 2`] = `
[
  "  -- not read from, to test is_called


-- Information schema
SELECT * FROM information_schema.sequences
  WHERE sequence_name ~ ANY(ARRAY['sequence_test', 'serialtest'])
  ORDER BY sequence_name ASC",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 76,
                  "relname": "sequences",
                  "relpersistence": "p",
                  "schemaname": "information_schema",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "sequence_name",
                          },
                        },
                      ],
                      "location": 182,
                    },
                  },
                  "sortby_dir": "SORTBY_ASC",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 69,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 69,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP_ANY",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "sequence_name",
                        },
                      },
                    ],
                    "location": 113,
                  },
                },
                "location": 127,
                "name": [
                  {
                    "String": {
                      "sval": "~",
                    },
                  },
                ],
                "rexpr": {
                  "A_ArrayExpr": {
                    "elements": [
                      {
                        "A_Const": {
                          "location": 139,
                          "sval": {
                            "sval": "sequence_test",
                          },
                        },
                      },
                      {
                        "A_Const": {
                          "location": 156,
                          "sval": {
                            "sval": "serialtest",
                          },
                        },
                      },
                    ],
                    "location": 133,
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 239 1`] = `
[
  "SELECT schemaname, sequencename, start_value, min_value, max_value, increment_by, cycle, cache_size, last_value
FROM pg_sequences
WHERE sequencename ~ ANY(ARRAY['sequence_test', 'serialtest'])
  ORDER BY sequencename ASC",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 117,
                  "relname": "pg_sequences",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "sequencename",
                          },
                        },
                      ],
                      "location": 204,
                    },
                  },
                  "sortby_dir": "SORTBY_ASC",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "schemaname",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 19,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "sequencename",
                          },
                        },
                      ],
                      "location": 19,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 33,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "start_value",
                          },
                        },
                      ],
                      "location": 33,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 46,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "min_value",
                          },
                        },
                      ],
                      "location": 46,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 57,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "max_value",
                          },
                        },
                      ],
                      "location": 57,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 68,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "increment_by",
                          },
                        },
                      ],
                      "location": 68,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 82,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "cycle",
                          },
                        },
                      ],
                      "location": 82,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 89,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "cache_size",
                          },
                        },
                      ],
                      "location": 89,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 101,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "last_value",
                          },
                        },
                      ],
                      "location": 101,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP_ANY",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "sequencename",
                        },
                      },
                    ],
                    "location": 136,
                  },
                },
                "location": 149,
                "name": [
                  {
                    "String": {
                      "sval": "~",
                    },
                  },
                ],
                "rexpr": {
                  "A_ArrayExpr": {
                    "elements": [
                      {
                        "A_Const": {
                          "location": 161,
                          "sval": {
                            "sval": "sequence_test",
                          },
                        },
                      },
                      {
                        "A_Const": {
                          "location": 178,
                          "sval": {
                            "sval": "serialtest",
                          },
                        },
                      },
                    ],
                    "location": 155,
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 258 1`] = `
[
  "CREATE SEQUENCE seq",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "sequence": {
              "inh": true,
              "location": 16,
              "relname": "seq",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 266 1`] = `
[
  "CREATE SEQUENCE seq2",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "sequence": {
              "inh": true,
              "location": 16,
              "relname": "seq2",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 270 1`] = `
[
  "DROP SEQUENCE seq2",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "seq2",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_SEQUENCE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 272 1`] = `
[
  "SELECT lastval()",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "lastval",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 276 1`] = `
[
  "CREATE UNLOGGED SEQUENCE sequence_test_unlogged",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "sequence": {
              "inh": true,
              "location": 25,
              "relname": "sequence_test_unlogged",
              "relpersistence": "u",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 279 1`] = `
[
  "ALTER SEQUENCE sequence_test_unlogged SET UNLOGGED",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "subtype": "AT_SetUnLogged",
                },
              },
            ],
            "objtype": "OBJECT_SEQUENCE",
            "relation": {
              "inh": true,
              "location": 15,
              "relname": "sequence_test_unlogged",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 281 1`] = `
[
  "DROP SEQUENCE sequence_test_unlogged",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "sequence_test_unlogged",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_SEQUENCE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 287 1`] = `
[
  "  -- error
ROLLBACK",
  {
    "stmts": [
      {
        "stmt": {
          "TransactionStmt": {
            "kind": "TRANS_STMT_ROLLBACK",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 299 1`] = `
[
  "BEGIN",
  {
    "stmts": [
      {
        "stmt": {
          "TransactionStmt": {
            "kind": "TRANS_STMT_BEGIN",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 399 1`] = `
[
  "DROP TABLE serialTest1, serialTest2",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "serialtest1",
                      },
                    },
                  ],
                },
              },
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "serialtest2",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 402 1`] = `
[
  "SELECT * FROM information_schema.sequences WHERE sequence_name IN
  ('sequence_test2', 'serialtest2_f2_seq', 'serialtest2_f3_seq',
   'serialtest2_f4_seq', 'serialtest2_f5_seq', 'serialtest2_f6_seq')
  ORDER BY sequence_name ASC",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "sequences",
                  "relpersistence": "p",
                  "schemaname": "information_schema",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "sequence_name",
                          },
                        },
                      ],
                      "location": 211,
                    },
                  },
                  "sortby_dir": "SORTBY_ASC",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_IN",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "sequence_name",
                        },
                      },
                    ],
                    "location": 49,
                  },
                },
                "location": 63,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "List": {
                    "items": [
                      {
                        "A_Const": {
                          "location": 69,
                          "sval": {
                            "sval": "sequence_test2",
                          },
                        },
                      },
                      {
                        "A_Const": {
                          "location": 87,
                          "sval": {
                            "sval": "serialtest2_f2_seq",
                          },
                        },
                      },
                      {
                        "A_Const": {
                          "location": 109,
                          "sval": {
                            "sval": "serialtest2_f3_seq",
                          },
                        },
                      },
                      {
                        "A_Const": {
                          "location": 134,
                          "sval": {
                            "sval": "serialtest2_f4_seq",
                          },
                        },
                      },
                      {
                        "A_Const": {
                          "location": 156,
                          "sval": {
                            "sval": "serialtest2_f5_seq",
                          },
                        },
                      },
                      {
                        "A_Const": {
                          "location": 178,
                          "sval": {
                            "sval": "serialtest2_f6_seq",
                          },
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 407 1`] = `
[
  "DROP USER regress_seq_user",
  {
    "stmts": [
      {
        "stmt": {
          "DropRoleStmt": {
            "roles": [
              {
                "RoleSpec": {
                  "location": 10,
                  "rolename": "regress_seq_user",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 411 1`] = `
[
  "CREATE SEQUENCE test_seq1 CACHE 10",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 10,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "cache",
                  "location": 26,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 16,
              "relname": "test_seq1",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`sequence.sql > line 416 1`] = `
[
  "DROP SEQUENCE test_seq1",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_seq1",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_SEQUENCE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;
