// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`enum.sql > line 10 1`] = `
[
  "SELECT COUNT(*) FROM pg_enum WHERE enumtypid = 'rainbow'::regtype",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 21,
                  "relname": "pg_enum",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "agg_star": true,
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "count",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "enumtypid",
                        },
                      },
                    ],
                    "location": 35,
                  },
                },
                "location": 45,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "TypeCast": {
                    "arg": {
                      "A_Const": {
                        "location": 47,
                        "sval": {
                          "sval": "rainbow",
                        },
                      },
                    },
                    "location": 56,
                    "typeName": {
                      "location": 58,
                      "names": [
                        {
                          "String": {
                            "sval": "regtype",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 15 1`] = `
[
  "SELECT 'red'::rainbow",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "TypeCast": {
                      "arg": {
                        "A_Const": {
                          "location": 7,
                          "sval": {
                            "sval": "red",
                          },
                        },
                      },
                      "location": 12,
                      "typeName": {
                        "location": 14,
                        "names": [
                          {
                            "String": {
                              "sval": "rainbow",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 19 1`] = `
[
  "SELECT pg_input_is_valid('red', 'rainbow')",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "A_Const": {
                            "location": 25,
                            "sval": {
                              "sval": "red",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "location": 32,
                            "sval": {
                              "sval": "rainbow",
                            },
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "pg_input_is_valid",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 23 1`] = `
[
  "SELECT * FROM pg_input_error_info(repeat('too_long', 32), 'rainbow')",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeFunction": {
                  "functions": [
                    {
                      "List": {
                        "items": [
                          {
                            "FuncCall": {
                              "args": [
                                {
                                  "FuncCall": {
                                    "args": [
                                      {
                                        "A_Const": {
                                          "location": 41,
                                          "sval": {
                                            "sval": "too_long",
                                          },
                                        },
                                      },
                                      {
                                        "A_Const": {
                                          "ival": {
                                            "ival": 32,
                                          },
                                          "location": 53,
                                        },
                                      },
                                    ],
                                    "funcformat": "COERCE_EXPLICIT_CALL",
                                    "funcname": [
                                      {
                                        "String": {
                                          "sval": "repeat",
                                        },
                                      },
                                    ],
                                    "location": 34,
                                  },
                                },
                                {
                                  "A_Const": {
                                    "location": 58,
                                    "sval": {
                                      "sval": "rainbow",
                                    },
                                  },
                                },
                              ],
                              "funcformat": "COERCE_EXPLICIT_CALL",
                              "funcname": [
                                {
                                  "String": {
                                    "sval": "pg_input_error_info",
                                  },
                                },
                              ],
                              "location": 14,
                            },
                          },
                          {},
                        ],
                      },
                    },
                  ],
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 32 1`] = `
[
  "SELECT enumlabel, enumsortorder
FROM pg_enum
WHERE enumtypid = 'planets'::regtype
ORDER BY 2",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 37,
                  "relname": "pg_enum",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "A_Const": {
                      "ival": {
                        "ival": 2,
                      },
                      "location": 91,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "enumlabel",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 18,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "enumsortorder",
                          },
                        },
                      ],
                      "location": 18,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "enumtypid",
                        },
                      },
                    ],
                    "location": 51,
                  },
                },
                "location": 61,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "TypeCast": {
                    "arg": {
                      "A_Const": {
                        "location": 63,
                        "sval": {
                          "sval": "planets",
                        },
                      },
                    },
                    "location": 72,
                    "typeName": {
                      "location": 74,
                      "names": [
                        {
                          "String": {
                            "sval": "regtype",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 37 1`] = `
[
  "ALTER TYPE planets ADD VALUE 'uranus'",
  {
    "stmts": [
      {
        "stmt": {
          "AlterEnumStmt": {
            "newVal": "uranus",
            "newValIsAfter": true,
            "typeName": [
              {
                "String": {
                  "sval": "planets",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 44 1`] = `
[
  "ALTER TYPE planets ADD VALUE 'mercury' BEFORE 'venus'",
  {
    "stmts": [
      {
        "stmt": {
          "AlterEnumStmt": {
            "newVal": "mercury",
            "newValNeighbor": "venus",
            "typeName": [
              {
                "String": {
                  "sval": "planets",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 54 1`] = `
[
  "SELECT enumlabel, enumsortorder
FROM pg_enum
WHERE enumtypid = 'planets'::regtype
ORDER BY enumlabel::planets",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 37,
                  "relname": "pg_enum",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "TypeCast": {
                      "arg": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "enumlabel",
                              },
                            },
                          ],
                          "location": 91,
                        },
                      },
                      "location": 100,
                      "typeName": {
                        "location": 102,
                        "names": [
                          {
                            "String": {
                              "sval": "planets",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "enumlabel",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 18,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "enumsortorder",
                          },
                        },
                      ],
                      "location": 18,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "enumtypid",
                        },
                      },
                    ],
                    "location": 51,
                  },
                },
                "location": 61,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "TypeCast": {
                    "arg": {
                      "A_Const": {
                        "location": 63,
                        "sval": {
                          "sval": "planets",
                        },
                      },
                    },
                    "location": 72,
                    "typeName": {
                      "location": 74,
                      "names": [
                        {
                          "String": {
                            "sval": "regtype",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 60 1`] = `
[
  "ALTER TYPE planets ADD VALUE
  'plutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutopluto'",
  {
    "stmts": [
      {
        "stmt": {
          "AlterEnumStmt": {
            "newVal": "plutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutoplutopluto",
            "newValIsAfter": true,
            "typeName": [
              {
                "String": {
                  "sval": "planets",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 63 1`] = `
[
  "ALTER TYPE planets ADD VALUE 'pluto' AFTER 'zeus'",
  {
    "stmts": [
      {
        "stmt": {
          "AlterEnumStmt": {
            "newVal": "pluto",
            "newValIsAfter": true,
            "newValNeighbor": "zeus",
            "typeName": [
              {
                "String": {
                  "sval": "planets",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 68 1`] = `
[
  "ALTER TYPE planets ADD VALUE 'mercury'",
  {
    "stmts": [
      {
        "stmt": {
          "AlterEnumStmt": {
            "newVal": "mercury",
            "newValIsAfter": true,
            "typeName": [
              {
                "String": {
                  "sval": "planets",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 71 1`] = `
[
  "ALTER TYPE planets ADD VALUE IF NOT EXISTS 'mercury'",
  {
    "stmts": [
      {
        "stmt": {
          "AlterEnumStmt": {
            "newVal": "mercury",
            "newValIsAfter": true,
            "skipIfNewValExists": true,
            "typeName": [
              {
                "String": {
                  "sval": "planets",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 74 1`] = `
[
  "SELECT enum_last(NULL::planets)",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "TypeCast": {
                            "arg": {
                              "A_Const": {
                                "isnull": true,
                                "location": 17,
                              },
                            },
                            "location": 21,
                            "typeName": {
                              "location": 23,
                              "names": [
                                {
                                  "String": {
                                    "sval": "planets",
                                  },
                                },
                              ],
                              "typemod": -1,
                            },
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "enum_last",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 76 1`] = `
[
  "ALTER TYPE planets ADD VALUE IF NOT EXISTS 'pluto'",
  {
    "stmts": [
      {
        "stmt": {
          "AlterEnumStmt": {
            "newVal": "pluto",
            "newValIsAfter": true,
            "skipIfNewValExists": true,
            "typeName": [
              {
                "String": {
                  "sval": "planets",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 87 1`] = `
[
  "alter type insenum add value 'i1' before 'L2'",
  {
    "stmts": [
      {
        "stmt": {
          "AlterEnumStmt": {
            "newVal": "i1",
            "newValNeighbor": "L2",
            "typeName": [
              {
                "String": {
                  "sval": "insenum",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 131 1`] = `
[
  "CREATE TABLE enumtest (col rainbow)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "enumtest",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "col",
                  "is_local": true,
                  "location": 23,
                  "typeName": {
                    "location": 27,
                    "names": [
                      {
                        "String": {
                          "sval": "rainbow",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 139 1`] = `
[
  "SELECT * FROM enumtest WHERE col = 'orange'",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "enumtest",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "col",
                        },
                      },
                    ],
                    "location": 29,
                  },
                },
                "location": 33,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "A_Const": {
                    "location": 35,
                    "sval": {
                      "sval": "orange",
                    },
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 149 1`] = `
[
  "SELECT 'red'::rainbow::text || 'hithere'",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "TypeCast": {
                          "arg": {
                            "TypeCast": {
                              "arg": {
                                "A_Const": {
                                  "location": 7,
                                  "sval": {
                                    "sval": "red",
                                  },
                                },
                              },
                              "location": 12,
                              "typeName": {
                                "location": 14,
                                "names": [
                                  {
                                    "String": {
                                      "sval": "rainbow",
                                    },
                                  },
                                ],
                                "typemod": -1,
                              },
                            },
                          },
                          "location": 21,
                          "typeName": {
                            "location": 23,
                            "names": [
                              {
                                "String": {
                                  "sval": "text",
                                },
                              },
                            ],
                            "typemod": -1,
                          },
                        },
                      },
                      "location": 28,
                      "name": [
                        {
                          "String": {
                            "sval": "||",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "location": 31,
                          "sval": {
                            "sval": "hithere",
                          },
                        },
                      },
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 155 1`] = `
[
  "SELECT min(col) FROM enumtest",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 21,
                  "relname": "enumtest",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "col",
                                },
                              },
                            ],
                            "location": 11,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "min",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 162 1`] = `
[
  "SET enable_seqscan = off",
  {
    "stmts": [
      {
        "stmt": {
          "VariableSetStmt": {
            "args": [
              {
                "A_Const": {
                  "location": 21,
                  "sval": {
                    "sval": "off",
                  },
                },
              },
            ],
            "kind": "VAR_SET_VALUE",
            "name": "enable_seqscan",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 168 1`] = `
[
  "CREATE UNIQUE INDEX enumtest_btree ON enumtest USING btree (col)",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "enumtest_btree",
            "indexParams": [
              {
                "IndexElem": {
                  "name": "col",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 38,
              "relname": "enumtest",
              "relpersistence": "p",
            },
            "unique": true,
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 183 1`] = `
[
  "CREATE INDEX enumtest_hash ON enumtest USING hash (col)",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "hash",
            "idxname": "enumtest_hash",
            "indexParams": [
              {
                "IndexElem": {
                  "name": "col",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 30,
              "relname": "enumtest",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 190 1`] = `
[
  "RESET enable_seqscan",
  {
    "stmts": [
      {
        "stmt": {
          "VariableSetStmt": {
            "kind": "VAR_RESET",
            "name": "enable_seqscan",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 196 1`] = `
[
  "CREATE DOMAIN rgb AS rainbow CHECK (VALUE IN ('red', 'green', 'blue'))",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "constraints": [
              {
                "Constraint": {
                  "contype": "CONSTR_CHECK",
                  "initially_valid": true,
                  "location": 29,
                  "raw_expr": {
                    "A_Expr": {
                      "kind": "AEXPR_IN",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "value",
                              },
                            },
                          ],
                          "location": 36,
                        },
                      },
                      "location": 42,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "List": {
                          "items": [
                            {
                              "A_Const": {
                                "location": 46,
                                "sval": {
                                  "sval": "red",
                                },
                              },
                            },
                            {
                              "A_Const": {
                                "location": 53,
                                "sval": {
                                  "sval": "green",
                                },
                              },
                            },
                            {
                              "A_Const": {
                                "location": 62,
                                "sval": {
                                  "sval": "blue",
                                },
                              },
                            },
                          ],
                        },
                      },
                    },
                  },
                },
              },
            ],
            "domainname": [
              {
                "String": {
                  "sval": "rgb",
                },
              },
            ],
            "typeName": {
              "location": 21,
              "names": [
                {
                  "String": {
                    "sval": "rainbow",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 215 1`] = `
[
  "SELECT enum_first(NULL::rainbow)",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "TypeCast": {
                            "arg": {
                              "A_Const": {
                                "isnull": true,
                                "location": 18,
                              },
                            },
                            "location": 22,
                            "typeName": {
                              "location": 24,
                              "names": [
                                {
                                  "String": {
                                    "sval": "rainbow",
                                  },
                                },
                              ],
                              "typemod": -1,
                            },
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "enum_first",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 226 1`] = `
[
  "CREATE FUNCTION echo_me(anyenum) RETURNS text AS $$
BEGIN
RETURN $1::text || 'omg';
END
$$ LANGUAGE plpgsql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "echo_me",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
BEGIN
RETURN $1::text || 'omg';
END
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 46,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 91,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 24,
                    "names": [
                      {
                        "String": {
                          "sval": "anyenum",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
            "returnType": {
              "location": 41,
              "names": [
                {
                  "String": {
                    "sval": "text",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 235 1`] = `
[
  "CREATE FUNCTION echo_me(rainbow) RETURNS text AS $$
BEGIN
RETURN $1::text || 'wtf';
END
$$ LANGUAGE plpgsql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "echo_me",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
BEGIN
RETURN $1::text || 'wtf';
END
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 46,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 91,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 24,
                    "names": [
                      {
                        "String": {
                          "sval": "rainbow",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
            "returnType": {
              "location": 41,
              "names": [
                {
                  "String": {
                    "sval": "text",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 245 1`] = `
[
  "DROP FUNCTION echo_me(anyenum)",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "ObjectWithArgs": {
                  "objargs": [
                    {
                      "TypeName": {
                        "location": 22,
                        "names": [
                          {
                            "String": {
                              "sval": "anyenum",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  ],
                  "objfuncargs": [
                    {
                      "FunctionParameter": {
                        "argType": {
                          "location": 22,
                          "names": [
                            {
                              "String": {
                                "sval": "anyenum",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                        "mode": "FUNC_PARAM_DEFAULT",
                      },
                    },
                  ],
                  "objname": [
                    {
                      "String": {
                        "sval": "echo_me",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_FUNCTION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 252 1`] = `
[
  "CREATE TABLE enumtest_parent (id rainbow PRIMARY KEY)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "enumtest_parent",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "id",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_PRIMARY",
                        "location": 41,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 30,
                  "typeName": {
                    "location": 33,
                    "names": [
                      {
                        "String": {
                          "sval": "rainbow",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 256 1`] = `
[
  "  -- fail
DELETE FROM enumtest_parent",
  {
    "stmts": [
      {
        "stmt": {
          "DeleteStmt": {
            "relation": {
              "inh": true,
              "location": 22,
              "relname": "enumtest_parent",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 257 1`] = `
[
  "  -- fail
--
-- cross-type RI should fail
--
CREATE TYPE bogus AS ENUM('good', 'bad', 'ugly')",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEnumStmt": {
            "typeName": [
              {
                "String": {
                  "sval": "bogus",
                },
              },
            ],
            "vals": [
              {
                "String": {
                  "sval": "good",
                },
              },
              {
                "String": {
                  "sval": "bad",
                },
              },
              {
                "String": {
                  "sval": "ugly",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 266 1`] = `
[
  "ALTER TYPE rainbow RENAME VALUE 'red' TO 'crimson'",
  {
    "stmts": [
      {
        "stmt": {
          "AlterEnumStmt": {
            "newVal": "crimson",
            "oldVal": "red",
            "typeName": [
              {
                "String": {
                  "sval": "rainbow",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 274 1`] = `
[
  "ALTER TYPE rainbow RENAME VALUE 'blue' TO 'green'",
  {
    "stmts": [
      {
        "stmt": {
          "AlterEnumStmt": {
            "newVal": "green",
            "oldVal": "blue",
            "typeName": [
              {
                "String": {
                  "sval": "rainbow",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 279 1`] = `
[
  "CREATE TYPE bogus AS ENUM('good')",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEnumStmt": {
            "typeName": [
              {
                "String": {
                  "sval": "bogus",
                },
              },
            ],
            "vals": [
              {
                "String": {
                  "sval": "good",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 283 1`] = `
[
  "BEGIN",
  {
    "stmts": [
      {
        "stmt": {
          "TransactionStmt": {
            "kind": "TRANS_STMT_BEGIN",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 286 1`] = `
[
  "  -- unsafe
ROLLBACK TO x",
  {
    "stmts": [
      {
        "stmt": {
          "TransactionStmt": {
            "kind": "TRANS_STMT_ROLLBACK_TO",
            "savepoint_name": "x",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 314 1`] = `
[
  "DROP TYPE bogus",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "TypeName": {
                  "location": 10,
                  "names": [
                    {
                      "String": {
                        "sval": "bogus",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 330 1`] = `
[
  "  -- fails
ROLLBACK",
  {
    "stmts": [
      {
        "stmt": {
          "TransactionStmt": {
            "kind": "TRANS_STMT_ROLLBACK",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 336 1`] = `
[
  "DROP TABLE enumtest_child",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "enumtest_child",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 344 1`] = `
[
  "SELECT COUNT(*) FROM pg_type WHERE typname = 'rainbow'",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 21,
                  "relname": "pg_type",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "agg_star": true,
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "count",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "typname",
                        },
                      },
                    ],
                    "location": 35,
                  },
                },
                "location": 43,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "A_Const": {
                    "location": 45,
                    "sval": {
                      "sval": "rainbow",
                    },
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`enum.sql > line 346 1`] = `
[
  "  (SELECT 1 FROM pg_type WHERE pg_type.oid = enumtypid)",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 17,
                  "relname": "pg_type",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 10,
                  "val": {
                    "A_Const": {
                      "ival": {
                        "ival": 1,
                      },
                      "location": 10,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "pg_type",
                        },
                      },
                      {
                        "String": {
                          "sval": "oid",
                        },
                      },
                    ],
                    "location": 31,
                  },
                },
                "location": 43,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "enumtypid",
                        },
                      },
                    ],
                    "location": 45,
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;
