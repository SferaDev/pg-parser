// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`event_trigger.sql > line 2 1`] = `
[
  "create event trigger regress_event_trigger
   on ddl_command_start
   execute procedure pg_backend_pid()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "ddl_command_start",
            "funcname": [
              {
                "String": {
                  "sval": "pg_backend_pid",
                },
              },
            ],
            "trigname": "regress_event_trigger",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 7 1`] = `
[
  "create function test_event_trigger() returns event_trigger as $$
BEGIN
    RAISE NOTICE 'test_event_trigger: % %', tg_event, tg_tag;
END
$$ language plpgsql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
BEGIN
    RAISE NOTICE 'test_event_trigger: % %', tg_event, tg_tag;
END
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 59,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 140,
                },
              },
            ],
            "returnType": {
              "location": 45,
              "names": [
                {
                  "String": {
                    "sval": "event_trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 14 1`] = `
[
  "SELECT test_event_trigger()",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "test_event_trigger",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 17 1`] = `
[
  "create function test_event_trigger_arg(name text)
returns event_trigger as $$ BEGIN RETURN 1; END $$ language plpgsql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger_arg",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": " BEGIN RETURN 1; END ",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 72,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 101,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 44,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                  "name": "name",
                },
              },
            ],
            "returnType": {
              "location": 58,
              "names": [
                {
                  "String": {
                    "sval": "event_trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 21 1`] = `
[
  "create function test_event_trigger_sql() returns event_trigger as $$
SELECT 1 $$ language sql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger_sql",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
SELECT 1 ",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 63,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "sql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 81,
                },
              },
            ],
            "returnType": {
              "location": 49,
              "names": [
                {
                  "String": {
                    "sval": "event_trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 25 1`] = `
[
  "create event trigger regress_event_trigger on elephant_bootstrap
   execute procedure test_event_trigger()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "elephant_bootstrap",
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger",
                },
              },
            ],
            "trigname": "regress_event_trigger",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 29 1`] = `
[
  "create event trigger regress_event_trigger on ddl_command_start
   execute procedure test_event_trigger()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "ddl_command_start",
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger",
                },
              },
            ],
            "trigname": "regress_event_trigger",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 33 1`] = `
[
  "create event trigger regress_event_trigger_end on ddl_command_end
   execute function test_event_trigger()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "ddl_command_end",
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger",
                },
              },
            ],
            "trigname": "regress_event_trigger_end",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 37 1`] = `
[
  "create event trigger regress_event_trigger2 on ddl_command_start
   when food in ('sandwich')
   execute procedure test_event_trigger()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "ddl_command_start",
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger",
                },
              },
            ],
            "trigname": "regress_event_trigger2",
            "whenclause": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "sandwich",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "food",
                  "location": 73,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 42 1`] = `
[
  "create event trigger regress_event_trigger2 on ddl_command_start
   when tag in ('sandwich')
   execute procedure test_event_trigger()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "ddl_command_start",
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger",
                },
              },
            ],
            "trigname": "regress_event_trigger2",
            "whenclause": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "sandwich",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "tag",
                  "location": 73,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 47 1`] = `
[
  "create event trigger regress_event_trigger2 on ddl_command_start
   when tag in ('create table', 'create skunkcabbage')
   execute procedure test_event_trigger()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "ddl_command_start",
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger",
                },
              },
            ],
            "trigname": "regress_event_trigger2",
            "whenclause": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "create table",
                          },
                        },
                        {
                          "String": {
                            "sval": "create skunkcabbage",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "tag",
                  "location": 73,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 52 1`] = `
[
  "create event trigger regress_event_trigger2 on ddl_command_start
   when tag in ('DROP EVENT TRIGGER')
   execute procedure test_event_trigger()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "ddl_command_start",
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger",
                },
              },
            ],
            "trigname": "regress_event_trigger2",
            "whenclause": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "DROP EVENT TRIGGER",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "tag",
                  "location": 73,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 57 1`] = `
[
  "create event trigger regress_event_trigger2 on ddl_command_start
   when tag in ('CREATE ROLE')
   execute procedure test_event_trigger()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "ddl_command_start",
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger",
                },
              },
            ],
            "trigname": "regress_event_trigger2",
            "whenclause": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "CREATE ROLE",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "tag",
                  "location": 73,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 62 1`] = `
[
  "create event trigger regress_event_trigger2 on ddl_command_start
   when tag in ('CREATE DATABASE')
   execute procedure test_event_trigger()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "ddl_command_start",
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger",
                },
              },
            ],
            "trigname": "regress_event_trigger2",
            "whenclause": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "CREATE DATABASE",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "tag",
                  "location": 73,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 67 1`] = `
[
  "create event trigger regress_event_trigger2 on ddl_command_start
   when tag in ('CREATE TABLESPACE')
   execute procedure test_event_trigger()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "ddl_command_start",
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger",
                },
              },
            ],
            "trigname": "regress_event_trigger2",
            "whenclause": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "CREATE TABLESPACE",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "tag",
                  "location": 73,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 72 1`] = `
[
  "create event trigger regress_event_trigger2 on ddl_command_start
   when tag in ('create table') and tag in ('CREATE FUNCTION')
   execute procedure test_event_trigger()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "ddl_command_start",
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger",
                },
              },
            ],
            "trigname": "regress_event_trigger2",
            "whenclause": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "create table",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "tag",
                  "location": 73,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "CREATE FUNCTION",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "tag",
                  "location": 101,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 81 1`] = `
[
  "create event trigger regress_event_trigger2 on ddl_command_start
   when tag in ('create table', 'CREATE FUNCTION')
   execute procedure test_event_trigger()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "ddl_command_start",
            "funcname": [
              {
                "String": {
                  "sval": "test_event_trigger",
                },
              },
            ],
            "trigname": "regress_event_trigger2",
            "whenclause": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "create table",
                          },
                        },
                        {
                          "String": {
                            "sval": "CREATE FUNCTION",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "tag",
                  "location": 73,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 86 1`] = `
[
  "comment on event trigger regress_event_trigger is 'test comment'",
  {
    "stmts": [
      {
        "stmt": {
          "CommentStmt": {
            "comment": "test comment",
            "object": {
              "String": {
                "sval": "regress_event_trigger",
              },
            },
            "objtype": "OBJECT_EVENT_TRIGGER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 89 1`] = `
[
  "create role regress_evt_user",
  {
    "stmts": [
      {
        "stmt": {
          "CreateRoleStmt": {
            "role": "regress_evt_user",
            "stmt_type": "ROLESTMT_ROLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 96 1`] = `
[
  "alter event trigger regress_event_trigger disable",
  {
    "stmts": [
      {
        "stmt": {
          "AlterEventTrigStmt": {
            "tgenabled": "D",
            "trigname": "regress_event_trigger",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 98 1`] = `
[
  "create table event_trigger_fire1 (a int)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "event_trigger_fire1",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 34,
                  "typeName": {
                    "location": 36,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 102 1`] = `
[
  "create table event_trigger_fire2 (a int)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "event_trigger_fire2",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 34,
                  "typeName": {
                    "location": 36,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 105 1`] = `
[
  "create table event_trigger_fire3 (a int)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "event_trigger_fire3",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 34,
                  "typeName": {
                    "location": 36,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 108 1`] = `
[
  "create table event_trigger_fire4 (a int)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "event_trigger_fire4",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 34,
                  "typeName": {
                    "location": 36,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 111 1`] = `
[
  "create table event_trigger_fire5 (a int)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "event_trigger_fire5",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 34,
                  "typeName": {
                    "location": 36,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 113 1`] = `
[
  "create function f1() returns int
language plpgsql
as $$
begin
  create table event_trigger_fire6 (a int);
  return 0;
end $$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "f1",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 33,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
begin
  create table event_trigger_fire6 (a int);
  return 0;
end ",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 50,
                },
              },
            ],
            "returnType": {
              "location": 29,
              "names": [
                {
                  "String": {
                    "sval": "pg_catalog",
                  },
                },
                {
                  "String": {
                    "sval": "int4",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 122 1`] = `
[
  "create procedure p1()
language plpgsql
as $$
begin
  create table event_trigger_fire7 (a int);
end $$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "p1",
                },
              },
            ],
            "is_procedure": true,
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 22,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
begin
  create table event_trigger_fire7 (a int);
end ",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 39,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 136 1`] = `
[
  "grant all on table event_trigger_fire1 to public",
  {
    "stmts": [
      {
        "stmt": {
          "GrantStmt": {
            "behavior": "DROP_RESTRICT",
            "grantees": [
              {
                "RoleSpec": {
                  "location": 42,
                  "roletype": "ROLESPEC_PUBLIC",
                },
              },
            ],
            "is_grant": true,
            "objects": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 19,
                  "relname": "event_trigger_fire1",
                  "relpersistence": "p",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "targtype": "ACL_TARGET_OBJECT",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 144 1`] = `
[
  " revoke delete on tables from regress_evt_user",
  {
    "stmts": [
      {
        "stmt": {
          "GrantStmt": {
            "behavior": "DROP_RESTRICT",
            "grantees": [
              {
                "RoleSpec": {
                  "location": 30,
                  "rolename": "regress_evt_user",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
            "objects": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 18,
                  "relname": "tables",
                  "relpersistence": "p",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "privileges": [
              {
                "AccessPriv": {
                  "priv_name": "delete",
                },
              },
            ],
            "targtype": "ACL_TARGET_OBJECT",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 147 1`] = `
[
  "alter event trigger regress_event_trigger owner to regress_evt_user",
  {
    "stmts": [
      {
        "stmt": {
          "AlterOwnerStmt": {
            "newowner": {
              "location": 51,
              "rolename": "regress_evt_user",
              "roletype": "ROLESPEC_CSTRING",
            },
            "object": {
              "String": {
                "sval": "regress_event_trigger",
              },
            },
            "objectType": "OBJECT_EVENT_TRIGGER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 150 1`] = `
[
  "alter role regress_evt_user superuser",
  {
    "stmts": [
      {
        "stmt": {
          "AlterRoleStmt": {
            "action": 1,
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "Boolean": {
                      "boolval": true,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "superuser",
                  "location": 28,
                },
              },
            ],
            "role": {
              "location": 11,
              "rolename": "regress_evt_user",
              "roletype": "ROLESPEC_CSTRING",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 154 1`] = `
[
  "alter event trigger regress_event_trigger rename to regress_event_trigger2",
  {
    "stmts": [
      {
        "stmt": {
          "RenameStmt": {
            "behavior": "DROP_RESTRICT",
            "newname": "regress_event_trigger2",
            "object": {
              "String": {
                "sval": "regress_event_trigger",
              },
            },
            "relationType": "OBJECT_ACCESS_METHOD",
            "renameType": "OBJECT_EVENT_TRIGGER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 157 1`] = `
[
  "alter event trigger regress_event_trigger rename to regress_event_trigger3",
  {
    "stmts": [
      {
        "stmt": {
          "RenameStmt": {
            "behavior": "DROP_RESTRICT",
            "newname": "regress_event_trigger3",
            "object": {
              "String": {
                "sval": "regress_event_trigger",
              },
            },
            "relationType": "OBJECT_ACCESS_METHOD",
            "renameType": "OBJECT_EVENT_TRIGGER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 160 1`] = `
[
  "drop event trigger regress_event_trigger",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "String": {
                  "sval": "regress_event_trigger",
                },
              },
            ],
            "removeType": "OBJECT_EVENT_TRIGGER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 163 1`] = `
[
  "drop role regress_evt_user",
  {
    "stmts": [
      {
        "stmt": {
          "DropRoleStmt": {
            "roles": [
              {
                "RoleSpec": {
                  "location": 10,
                  "rolename": "regress_evt_user",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 167 1`] = `
[
  "drop event trigger if exists regress_event_trigger2",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "missing_ok": true,
            "objects": [
              {
                "String": {
                  "sval": "regress_event_trigger2",
                },
              },
            ],
            "removeType": "OBJECT_EVENT_TRIGGER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 173 1`] = `
[
  "CREATE SCHEMA schema_one authorization regress_evt_user",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSchemaStmt": {
            "authrole": {
              "location": 39,
              "rolename": "regress_evt_user",
              "roletype": "ROLESPEC_CSTRING",
            },
            "schemaname": "schema_one",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 179 1`] = `
[
  "CREATE TABLE schema_one.table_one(a int)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "table_one",
              "relpersistence": "p",
              "schemaname": "schema_one",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 34,
                  "typeName": {
                    "location": 36,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 184 1`] = `
[
  "CREATE TABLE schema_two.table_two(a int)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "table_two",
              "relpersistence": "p",
              "schemaname": "schema_two",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 34,
                  "typeName": {
                    "location": 36,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 188 1`] = `
[
  "CREATE OR REPLACE FUNCTION schema_two.add(int, int) RETURNS int LANGUAGE plpgsql
  CALLED ON NULL INPUT
  AS $$ BEGIN RETURN coalesce($1,0) + coalesce($2,0); END; $$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "schema_two",
                },
              },
              {
                "String": {
                  "sval": "add",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 64,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Boolean": {
                      "boolval": false,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "strict",
                  "location": 83,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": " BEGIN RETURN coalesce($1,0) + coalesce($2,0); END; ",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 106,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 42,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 47,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 60,
              "names": [
                {
                  "String": {
                    "sval": "pg_catalog",
                  },
                },
                {
                  "String": {
                    "sval": "int4",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 194 1`] = `
[
  "RESET SESSION AUTHORIZATION",
  {
    "stmts": [
      {
        "stmt": {
          "VariableSetStmt": {
            "kind": "VAR_RESET",
            "name": "session_authorization",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 196 1`] = `
[
  "CREATE TABLE undroppable_objs (
	object_type text,
	object_identity text
)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "undroppable_objs",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "object_type",
                  "is_local": true,
                  "location": 33,
                  "typeName": {
                    "location": 45,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "object_identity",
                  "is_local": true,
                  "location": 52,
                  "typeName": {
                    "location": 68,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 204 1`] = `
[
  "CREATE TABLE dropped_objects (
	type text,
	schema text,
	object text
)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "dropped_objects",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "type",
                  "is_local": true,
                  "location": 32,
                  "typeName": {
                    "location": 37,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "schema",
                  "is_local": true,
                  "location": 44,
                  "typeName": {
                    "location": 51,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "object",
                  "is_local": true,
                  "location": 58,
                  "typeName": {
                    "location": 65,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 212 1`] = `
[
  "CREATE OR REPLACE FUNCTION undroppable() RETURNS event_trigger
LANGUAGE plpgsql AS $$
DECLARE
	obj record;
BEGIN
	PERFORM 1 FROM pg_tables WHERE tablename = 'undroppable_objs';
	IF NOT FOUND THEN
		RAISE NOTICE 'table undroppable_objs not found, skipping';
		RETURN;
	END IF;
	FOR obj IN
		SELECT * FROM pg_event_trigger_dropped_objects() JOIN
			undroppable_objs USING (object_type, object_identity)
	LOOP
		RAISE EXCEPTION 'object % of type % cannot be dropped',
			obj.object_identity, obj.object_type;
	END LOOP;
END;
$$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "undroppable",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 63,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
DECLARE
	obj record;
BEGIN
	PERFORM 1 FROM pg_tables WHERE tablename = 'undroppable_objs';
	IF NOT FOUND THEN
		RAISE NOTICE 'table undroppable_objs not found, skipping';
		RETURN;
	END IF;
	FOR obj IN
		SELECT * FROM pg_event_trigger_dropped_objects() JOIN
			undroppable_objs USING (object_type, object_identity)
	LOOP
		RAISE EXCEPTION 'object % of type % cannot be dropped',
			obj.object_identity, obj.object_type;
	END LOOP;
END;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 80,
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 49,
              "names": [
                {
                  "String": {
                    "sval": "event_trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 232 1`] = `
[
  "CREATE EVENT TRIGGER undroppable ON sql_drop
	EXECUTE PROCEDURE undroppable()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "sql_drop",
            "funcname": [
              {
                "String": {
                  "sval": "undroppable",
                },
              },
            ],
            "trigname": "undroppable",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 235 1`] = `
[
  "CREATE OR REPLACE FUNCTION test_evtrig_dropped_objects() RETURNS event_trigger
LANGUAGE plpgsql AS $$
DECLARE
    obj record;
BEGIN
    FOR obj IN SELECT * FROM pg_event_trigger_dropped_objects()
    LOOP
        IF obj.object_type = 'table' THEN
                EXECUTE format('DROP TABLE IF EXISTS audit_tbls.%I',
					format('%s_%s', obj.schema_name, obj.object_name));
        END IF;

	INSERT INTO dropped_objects
		(type, schema, object) VALUES
		(obj.object_type, obj.schema_name, obj.object_identity);
    END LOOP;
END
$$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "test_evtrig_dropped_objects",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 79,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
DECLARE
    obj record;
BEGIN
    FOR obj IN SELECT * FROM pg_event_trigger_dropped_objects()
    LOOP
        IF obj.object_type = 'table' THEN
                EXECUTE format('DROP TABLE IF EXISTS audit_tbls.%I',
					format('%s_%s', obj.schema_name, obj.object_name));
        END IF;

	INSERT INTO dropped_objects
		(type, schema, object) VALUES
		(obj.object_type, obj.schema_name, obj.object_identity);
    END LOOP;
END
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 96,
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 65,
              "names": [
                {
                  "String": {
                    "sval": "event_trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 254 1`] = `
[
  "CREATE EVENT TRIGGER regress_event_trigger_drop_objects ON sql_drop
	WHEN TAG IN ('drop table', 'drop function', 'drop view',
		'drop owned', 'drop schema', 'alter table')
	EXECUTE PROCEDURE test_evtrig_dropped_objects()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "sql_drop",
            "funcname": [
              {
                "String": {
                  "sval": "test_evtrig_dropped_objects",
                },
              },
            ],
            "trigname": "regress_event_trigger_drop_objects",
            "whenclause": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "drop table",
                          },
                        },
                        {
                          "String": {
                            "sval": "drop function",
                          },
                        },
                        {
                          "String": {
                            "sval": "drop view",
                          },
                        },
                        {
                          "String": {
                            "sval": "drop owned",
                          },
                        },
                        {
                          "String": {
                            "sval": "drop schema",
                          },
                        },
                        {
                          "String": {
                            "sval": "alter table",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "tag",
                  "location": 74,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 259 1`] = `
[
  "ALTER TABLE schema_one.table_one DROP COLUMN a",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "name": "a",
                  "subtype": "AT_DropColumn",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "table_one",
              "relpersistence": "p",
              "schemaname": "schema_one",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 266 1`] = `
[
  "SELECT * FROM dropped_objects WHERE schema IS NULL OR schema <> 'pg_toast'",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "dropped_objects",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "BoolExpr": {
                "args": [
                  {
                    "NullTest": {
                      "arg": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "schema",
                              },
                            },
                          ],
                          "location": 36,
                        },
                      },
                      "location": 43,
                      "nulltesttype": "IS_NULL",
                    },
                  },
                  {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "schema",
                              },
                            },
                          ],
                          "location": 54,
                        },
                      },
                      "location": 61,
                      "name": [
                        {
                          "String": {
                            "sval": "<>",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "location": 64,
                          "sval": {
                            "sval": "pg_toast",
                          },
                        },
                      },
                    },
                  },
                ],
                "boolop": "OR_EXPR",
                "location": 51,
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 268 1`] = `
[
  "DROP OWNED BY regress_evt_user",
  {
    "stmts": [
      {
        "stmt": {
          "DropOwnedStmt": {
            "behavior": "DROP_RESTRICT",
            "roles": [
              {
                "RoleSpec": {
                  "location": 14,
                  "rolename": "regress_evt_user",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 273 1`] = `
[
  "DROP EVENT TRIGGER regress_event_trigger_drop_objects",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "String": {
                  "sval": "regress_event_trigger_drop_objects",
                },
              },
            ],
            "removeType": "OBJECT_EVENT_TRIGGER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 277 1`] = `
[
  "CREATE OR REPLACE FUNCTION event_trigger_report_dropped()
 RETURNS event_trigger
 LANGUAGE plpgsql
AS $$
DECLARE r record;
BEGIN
    FOR r IN SELECT * from pg_event_trigger_dropped_objects()
    LOOP
    IF NOT r.normal AND NOT r.original THEN
        CONTINUE;
    END IF;
    RAISE NOTICE 'NORMAL: orig=% normal=% istemp=% type=% identity=% name=% args=%',
        r.original, r.normal, r.is_temporary, r.object_type,
        r.object_identity, r.address_names, r.address_args;
    END LOOP;
END; $$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "event_trigger_report_dropped",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 82,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
DECLARE r record;
BEGIN
    FOR r IN SELECT * from pg_event_trigger_dropped_objects()
    LOOP
    IF NOT r.normal AND NOT r.original THEN
        CONTINUE;
    END IF;
    RAISE NOTICE 'NORMAL: orig=% normal=% istemp=% type=% identity=% name=% args=%',
        r.original, r.normal, r.is_temporary, r.object_type,
        r.object_identity, r.address_names, r.address_args;
    END LOOP;
END; ",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 99,
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 67,
              "names": [
                {
                  "String": {
                    "sval": "event_trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 310 1`] = `
[
  "CREATE SCHEMA evttrig
	CREATE TABLE one (col_a SERIAL PRIMARY KEY, col_b text DEFAULT 'forty two', col_c SERIAL)
	CREATE INDEX one_idx ON one (col_b)
	CREATE TABLE two (col_c INTEGER CHECK (col_c > 0) REFERENCES one DEFAULT 42)
	CREATE TABLE id (col_d int NOT NULL GENERATED ALWAYS AS IDENTITY)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSchemaStmt": {
            "schemaElts": [
              {
                "CreateStmt": {
                  "oncommit": "ONCOMMIT_NOOP",
                  "relation": {
                    "inh": true,
                    "location": 36,
                    "relname": "one",
                    "relpersistence": "p",
                  },
                  "tableElts": [
                    {
                      "ColumnDef": {
                        "colname": "col_a",
                        "constraints": [
                          {
                            "Constraint": {
                              "contype": "CONSTR_PRIMARY",
                              "location": 54,
                            },
                          },
                        ],
                        "is_local": true,
                        "location": 41,
                        "typeName": {
                          "location": 47,
                          "names": [
                            {
                              "String": {
                                "sval": "serial",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                      },
                    },
                    {
                      "ColumnDef": {
                        "colname": "col_b",
                        "constraints": [
                          {
                            "Constraint": {
                              "contype": "CONSTR_DEFAULT",
                              "location": 78,
                              "raw_expr": {
                                "A_Const": {
                                  "location": 86,
                                  "sval": {
                                    "sval": "forty two",
                                  },
                                },
                              },
                            },
                          },
                        ],
                        "is_local": true,
                        "location": 67,
                        "typeName": {
                          "location": 73,
                          "names": [
                            {
                              "String": {
                                "sval": "text",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                      },
                    },
                    {
                      "ColumnDef": {
                        "colname": "col_c",
                        "is_local": true,
                        "location": 99,
                        "typeName": {
                          "location": 105,
                          "names": [
                            {
                              "String": {
                                "sval": "serial",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                      },
                    },
                  ],
                },
              },
              {
                "IndexStmt": {
                  "accessMethod": "btree",
                  "idxname": "one_idx",
                  "indexParams": [
                    {
                      "IndexElem": {
                        "name": "col_b",
                        "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                        "ordering": "SORTBY_DEFAULT",
                      },
                    },
                  ],
                  "relation": {
                    "inh": true,
                    "location": 138,
                    "relname": "one",
                    "relpersistence": "p",
                  },
                },
              },
              {
                "CreateStmt": {
                  "oncommit": "ONCOMMIT_NOOP",
                  "relation": {
                    "inh": true,
                    "location": 164,
                    "relname": "two",
                    "relpersistence": "p",
                  },
                  "tableElts": [
                    {
                      "ColumnDef": {
                        "colname": "col_c",
                        "constraints": [
                          {
                            "Constraint": {
                              "contype": "CONSTR_CHECK",
                              "initially_valid": true,
                              "location": 183,
                              "raw_expr": {
                                "A_Expr": {
                                  "kind": "AEXPR_OP",
                                  "lexpr": {
                                    "ColumnRef": {
                                      "fields": [
                                        {
                                          "String": {
                                            "sval": "col_c",
                                          },
                                        },
                                      ],
                                      "location": 190,
                                    },
                                  },
                                  "location": 196,
                                  "name": [
                                    {
                                      "String": {
                                        "sval": ">",
                                      },
                                    },
                                  ],
                                  "rexpr": {
                                    "A_Const": {
                                      "ival": {},
                                      "location": 198,
                                    },
                                  },
                                },
                              },
                            },
                          },
                          {
                            "Constraint": {
                              "contype": "CONSTR_FOREIGN",
                              "fk_del_action": "a",
                              "fk_matchtype": "s",
                              "fk_upd_action": "a",
                              "initially_valid": true,
                              "location": 201,
                              "pktable": {
                                "inh": true,
                                "location": 212,
                                "relname": "one",
                                "relpersistence": "p",
                              },
                            },
                          },
                          {
                            "Constraint": {
                              "contype": "CONSTR_DEFAULT",
                              "location": 216,
                              "raw_expr": {
                                "A_Const": {
                                  "ival": {
                                    "ival": 42,
                                  },
                                  "location": 224,
                                },
                              },
                            },
                          },
                        ],
                        "is_local": true,
                        "location": 169,
                        "typeName": {
                          "location": 175,
                          "names": [
                            {
                              "String": {
                                "sval": "pg_catalog",
                              },
                            },
                            {
                              "String": {
                                "sval": "int4",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                      },
                    },
                  ],
                },
              },
              {
                "CreateStmt": {
                  "oncommit": "ONCOMMIT_NOOP",
                  "relation": {
                    "inh": true,
                    "location": 242,
                    "relname": "id",
                    "relpersistence": "p",
                  },
                  "tableElts": [
                    {
                      "ColumnDef": {
                        "colname": "col_d",
                        "constraints": [
                          {
                            "Constraint": {
                              "contype": "CONSTR_NOTNULL",
                              "location": 256,
                            },
                          },
                          {
                            "Constraint": {
                              "contype": "CONSTR_IDENTITY",
                              "generated_when": "a",
                              "location": 265,
                            },
                          },
                        ],
                        "is_local": true,
                        "location": 246,
                        "typeName": {
                          "location": 252,
                          "names": [
                            {
                              "String": {
                                "sval": "pg_catalog",
                              },
                            },
                            {
                              "String": {
                                "sval": "int4",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                      },
                    },
                  ],
                },
              },
            ],
            "schemaname": "evttrig",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 317 1`] = `
[
  "CREATE TABLE evttrig.parted (
    id int PRIMARY KEY)
    PARTITION BY RANGE (id)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "partspec": {
              "location": 58,
              "partParams": [
                {
                  "PartitionElem": {
                    "location": 78,
                    "name": "id",
                  },
                },
              ],
              "strategy": "PARTITION_STRATEGY_RANGE",
            },
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "parted",
              "relpersistence": "p",
              "schemaname": "evttrig",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "id",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_PRIMARY",
                        "location": 41,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 34,
                  "typeName": {
                    "location": 37,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 329 1`] = `
[
  "ALTER TABLE evttrig.two DROP COLUMN col_c",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "name": "col_c",
                  "subtype": "AT_DropColumn",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "two",
              "relpersistence": "p",
              "schemaname": "evttrig",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 342 1`] = `
[
  "CREATE OPERATOR CLASS evttrigopclass FOR TYPE int USING btree AS STORAGE int",
  {
    "stmts": [
      {
        "stmt": {
          "CreateOpClassStmt": {
            "amname": "btree",
            "datatype": {
              "location": 46,
              "names": [
                {
                  "String": {
                    "sval": "pg_catalog",
                  },
                },
                {
                  "String": {
                    "sval": "int4",
                  },
                },
              ],
              "typemod": -1,
            },
            "items": [
              {
                "CreateOpClassItem": {
                  "itemtype": 3,
                  "storedtype": {
                    "location": 73,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
            "opclassname": [
              {
                "String": {
                  "sval": "evttrigopclass",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 344 1`] = `
[
  "DROP EVENT TRIGGER regress_event_trigger_report_dropped",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "String": {
                  "sval": "regress_event_trigger_report_dropped",
                },
              },
            ],
            "removeType": "OBJECT_EVENT_TRIGGER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 348 1`] = `
[
  "select pg_event_trigger_table_rewrite_oid()",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "pg_event_trigger_table_rewrite_oid",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 351 1`] = `
[
  "CREATE OR REPLACE FUNCTION test_evtrig_no_rewrite() RETURNS event_trigger
LANGUAGE plpgsql AS $$
BEGIN
  RAISE EXCEPTION 'rewrites not allowed';
END;
$$",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "test_evtrig_no_rewrite",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 74,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
BEGIN
  RAISE EXCEPTION 'rewrites not allowed';
END;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 91,
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 60,
              "names": [
                {
                  "String": {
                    "sval": "event_trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 358 1`] = `
[
  "create event trigger no_rewrite_allowed on table_rewrite
  execute procedure test_evtrig_no_rewrite()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "table_rewrite",
            "funcname": [
              {
                "String": {
                  "sval": "test_evtrig_no_rewrite",
                },
              },
            ],
            "trigname": "no_rewrite_allowed",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 361 1`] = `
[
  "create table rewriteme (id serial primary key, foo float, bar timestamptz)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "rewriteme",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "id",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_PRIMARY",
                        "location": 34,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 24,
                  "typeName": {
                    "location": 27,
                    "names": [
                      {
                        "String": {
                          "sval": "serial",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "foo",
                  "is_local": true,
                  "location": 47,
                  "typeName": {
                    "location": 51,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "float8",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "bar",
                  "is_local": true,
                  "location": 58,
                  "typeName": {
                    "location": 62,
                    "names": [
                      {
                        "String": {
                          "sval": "timestamptz",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 363 1`] = `
[
  "     select x * 1.001 from generate_series(1, 500) as t(x)",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeFunction": {
                  "alias": {
                    "aliasname": "t",
                    "colnames": [
                      {
                        "String": {
                          "sval": "x",
                        },
                      },
                    ],
                  },
                  "functions": [
                    {
                      "List": {
                        "items": [
                          {
                            "FuncCall": {
                              "args": [
                                {
                                  "A_Const": {
                                    "ival": {
                                      "ival": 1,
                                    },
                                    "location": 43,
                                  },
                                },
                                {
                                  "A_Const": {
                                    "ival": {
                                      "ival": 500,
                                    },
                                    "location": 46,
                                  },
                                },
                              ],
                              "funcformat": "COERCE_EXPLICIT_CALL",
                              "funcname": [
                                {
                                  "String": {
                                    "sval": "generate_series",
                                  },
                                },
                              ],
                              "location": 27,
                            },
                          },
                          {},
                        ],
                      },
                    },
                  ],
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 12,
                  "val": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "x",
                              },
                            },
                          ],
                          "location": 12,
                        },
                      },
                      "location": 14,
                      "name": [
                        {
                          "String": {
                            "sval": "*",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "fval": {
                            "fval": "1.001",
                          },
                          "location": 16,
                        },
                      },
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 377 1`] = `
[
  "alter table rewriteme
 add column onemore int default 0,
 add column another int default -1,
 alter column foo type numeric(10,4)",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "def": {
                    "ColumnDef": {
                      "colname": "onemore",
                      "constraints": [
                        {
                          "Constraint": {
                            "contype": "CONSTR_DEFAULT",
                            "location": 46,
                            "raw_expr": {
                              "A_Const": {
                                "ival": {},
                                "location": 54,
                              },
                            },
                          },
                        },
                      ],
                      "is_local": true,
                      "location": 34,
                      "typeName": {
                        "location": 42,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "int4",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                  "subtype": "AT_AddColumn",
                },
              },
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "def": {
                    "ColumnDef": {
                      "colname": "another",
                      "constraints": [
                        {
                          "Constraint": {
                            "contype": "CONSTR_DEFAULT",
                            "location": 81,
                            "raw_expr": {
                              "A_Const": {
                                "ival": {},
                                "location": 89,
                              },
                            },
                          },
                        },
                      ],
                      "is_local": true,
                      "location": 69,
                      "typeName": {
                        "location": 77,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "int4",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                  "subtype": "AT_AddColumn",
                },
              },
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "def": {
                    "ColumnDef": {
                      "location": 107,
                      "typeName": {
                        "location": 116,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "numeric",
                            },
                          },
                        ],
                        "typemod": -1,
                        "typmods": [
                          {
                            "A_Const": {
                              "ival": {
                                "ival": 10,
                              },
                              "location": 124,
                            },
                          },
                          {
                            "A_Const": {
                              "ival": {
                                "ival": 4,
                              },
                              "location": 127,
                            },
                          },
                        ],
                      },
                    },
                  },
                  "name": "foo",
                  "subtype": "AT_AlterColumnType",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "rewriteme",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 383 1`] = `
[
  "CREATE MATERIALIZED VIEW heapmv USING heap AS SELECT 1 AS a",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTableAsStmt": {
            "into": {
              "accessMethod": "heap",
              "onCommit": "ONCOMMIT_NOOP",
              "rel": {
                "inh": true,
                "location": 25,
                "relname": "heapmv",
                "relpersistence": "p",
              },
            },
            "objtype": "OBJECT_MATVIEW",
            "query": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 53,
                      "name": "a",
                      "val": {
                        "A_Const": {
                          "ival": {
                            "ival": 1,
                          },
                          "location": 53,
                        },
                      },
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 388 1`] = `
[
  "alter table rewriteme alter column foo type numeric(12,4)",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "def": {
                    "ColumnDef": {
                      "location": 35,
                      "typeName": {
                        "location": 44,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "numeric",
                            },
                          },
                        ],
                        "typemod": -1,
                        "typmods": [
                          {
                            "A_Const": {
                              "ival": {
                                "ival": 12,
                              },
                              "location": 52,
                            },
                          },
                          {
                            "A_Const": {
                              "ival": {
                                "ival": 4,
                              },
                              "location": 55,
                            },
                          },
                        ],
                      },
                    },
                  },
                  "name": "foo",
                  "subtype": "AT_AlterColumnType",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "rewriteme",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 395 1`] = `
[
  " -- does rewrite
rollback",
  {
    "stmts": [
      {
        "stmt": {
          "TransactionStmt": {
            "kind": "TRANS_STMT_ROLLBACK",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 408 1`] = `
[
  "create type rewritetype as (a int)",
  {
    "stmts": [
      {
        "stmt": {
          "CompositeTypeStmt": {
            "coldeflist": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 28,
                  "typeName": {
                    "location": 30,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
            "typevar": {
              "location": 12,
              "relname": "rewritetype",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 414 1`] = `
[
  "create table rewritemetoo3 (a rewritetype)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "rewritemetoo3",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 28,
                  "typeName": {
                    "location": 30,
                    "names": [
                      {
                        "String": {
                          "sval": "rewritetype",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 417 1`] = `
[
  "drop table rewriteme",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "rewriteme",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 425 1`] = `
[
  "CREATE OR REPLACE FUNCTION start_command()
RETURNS event_trigger AS $$
BEGIN
RAISE NOTICE '% - ddl_command_start', tg_tag;
END;
$$ LANGUAGE plpgsql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "start_command",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
BEGIN
RAISE NOTICE '% - ddl_command_start', tg_tag;
END;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 65,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 131,
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 51,
              "names": [
                {
                  "String": {
                    "sval": "event_trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 432 1`] = `
[
  "CREATE OR REPLACE FUNCTION end_command()
RETURNS event_trigger AS $$
BEGIN
RAISE NOTICE '% - ddl_command_end', tg_tag;
END;
$$ LANGUAGE plpgsql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "end_command",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
BEGIN
RAISE NOTICE '% - ddl_command_end', tg_tag;
END;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 63,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 127,
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 49,
              "names": [
                {
                  "String": {
                    "sval": "event_trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 439 1`] = `
[
  "CREATE OR REPLACE FUNCTION drop_sql_command()
RETURNS event_trigger AS $$
BEGIN
RAISE NOTICE '% - sql_drop', tg_tag;
END;
$$ LANGUAGE plpgsql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "drop_sql_command",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
BEGIN
RAISE NOTICE '% - sql_drop', tg_tag;
END;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 68,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 125,
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 54,
              "names": [
                {
                  "String": {
                    "sval": "event_trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 446 1`] = `
[
  "CREATE EVENT TRIGGER start_rls_command ON ddl_command_start
    WHEN TAG IN ('CREATE POLICY', 'ALTER POLICY', 'DROP POLICY') EXECUTE PROCEDURE start_command()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "ddl_command_start",
            "funcname": [
              {
                "String": {
                  "sval": "start_command",
                },
              },
            ],
            "trigname": "start_rls_command",
            "whenclause": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "CREATE POLICY",
                          },
                        },
                        {
                          "String": {
                            "sval": "ALTER POLICY",
                          },
                        },
                        {
                          "String": {
                            "sval": "DROP POLICY",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "tag",
                  "location": 69,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 449 1`] = `
[
  "CREATE EVENT TRIGGER end_rls_command ON ddl_command_end
    WHEN TAG IN ('CREATE POLICY', 'ALTER POLICY', 'DROP POLICY') EXECUTE PROCEDURE end_command()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "ddl_command_end",
            "funcname": [
              {
                "String": {
                  "sval": "end_command",
                },
              },
            ],
            "trigname": "end_rls_command",
            "whenclause": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "CREATE POLICY",
                          },
                        },
                        {
                          "String": {
                            "sval": "ALTER POLICY",
                          },
                        },
                        {
                          "String": {
                            "sval": "DROP POLICY",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "tag",
                  "location": 65,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 452 1`] = `
[
  "CREATE EVENT TRIGGER sql_drop_command ON sql_drop
    WHEN TAG IN ('DROP POLICY') EXECUTE PROCEDURE drop_sql_command()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateEventTrigStmt": {
            "eventname": "sql_drop",
            "funcname": [
              {
                "String": {
                  "sval": "drop_sql_command",
                },
              },
            ],
            "trigname": "sql_drop_command",
            "whenclause": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "DROP POLICY",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "tag",
                  "location": 59,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 455 1`] = `
[
  "CREATE POLICY p1 ON event_trigger_test USING (FALSE)",
  {
    "stmts": [
      {
        "stmt": {
          "CreatePolicyStmt": {
            "cmd_name": "all",
            "permissive": true,
            "policy_name": "p1",
            "qual": {
              "A_Const": {
                "boolval": {},
                "location": 46,
              },
            },
            "roles": [
              {
                "RoleSpec": {
                  "location": -1,
                  "roletype": "ROLESPEC_PUBLIC",
                },
              },
            ],
            "table": {
              "inh": true,
              "location": 20,
              "relname": "event_trigger_test",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 461 1`] = `
[
  "SELECT
    e.evtname,
    pg_describe_object('pg_event_trigger'::regclass, e.oid, 0) as descr,
    b.type, b.object_names, b.object_args,
    pg_identify_object(a.classid, a.objid, a.objsubid) as ident
  FROM pg_event_trigger as e,
    LATERAL pg_identify_object_as_address('pg_event_trigger'::regclass, e.oid, 0) as b,
    LATERAL pg_get_object_address(b.type, b.object_names, b.object_args) as a
  ORDER BY e.evtname",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "alias": {
                    "aliasname": "e",
                  },
                  "inh": true,
                  "location": 209,
                  "relname": "pg_event_trigger",
                  "relpersistence": "p",
                },
              },
              {
                "RangeFunction": {
                  "alias": {
                    "aliasname": "b",
                  },
                  "functions": [
                    {
                      "List": {
                        "items": [
                          {
                            "FuncCall": {
                              "args": [
                                {
                                  "TypeCast": {
                                    "arg": {
                                      "A_Const": {
                                        "location": 274,
                                        "sval": {
                                          "sval": "pg_event_trigger",
                                        },
                                      },
                                    },
                                    "location": 292,
                                    "typeName": {
                                      "location": 294,
                                      "names": [
                                        {
                                          "String": {
                                            "sval": "regclass",
                                          },
                                        },
                                      ],
                                      "typemod": -1,
                                    },
                                  },
                                },
                                {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "e",
                                        },
                                      },
                                      {
                                        "String": {
                                          "sval": "oid",
                                        },
                                      },
                                    ],
                                    "location": 304,
                                  },
                                },
                                {
                                  "A_Const": {
                                    "ival": {},
                                    "location": 311,
                                  },
                                },
                              ],
                              "funcformat": "COERCE_EXPLICIT_CALL",
                              "funcname": [
                                {
                                  "String": {
                                    "sval": "pg_identify_object_as_address",
                                  },
                                },
                              ],
                              "location": 244,
                            },
                          },
                          {},
                        ],
                      },
                    },
                  ],
                  "lateral": true,
                },
              },
              {
                "RangeFunction": {
                  "alias": {
                    "aliasname": "a",
                  },
                  "functions": [
                    {
                      "List": {
                        "items": [
                          {
                            "FuncCall": {
                              "args": [
                                {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "b",
                                        },
                                      },
                                      {
                                        "String": {
                                          "sval": "type",
                                        },
                                      },
                                    ],
                                    "location": 354,
                                  },
                                },
                                {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "b",
                                        },
                                      },
                                      {
                                        "String": {
                                          "sval": "object_names",
                                        },
                                      },
                                    ],
                                    "location": 362,
                                  },
                                },
                                {
                                  "ColumnRef": {
                                    "fields": [
                                      {
                                        "String": {
                                          "sval": "b",
                                        },
                                      },
                                      {
                                        "String": {
                                          "sval": "object_args",
                                        },
                                      },
                                    ],
                                    "location": 378,
                                  },
                                },
                              ],
                              "funcformat": "COERCE_EXPLICIT_CALL",
                              "funcname": [
                                {
                                  "String": {
                                    "sval": "pg_get_object_address",
                                  },
                                },
                              ],
                              "location": 332,
                            },
                          },
                          {},
                        ],
                      },
                    },
                  ],
                  "lateral": true,
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "e",
                          },
                        },
                        {
                          "String": {
                            "sval": "evtname",
                          },
                        },
                      ],
                      "location": 409,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 11,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "e",
                          },
                        },
                        {
                          "String": {
                            "sval": "evtname",
                          },
                        },
                      ],
                      "location": 11,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 26,
                  "name": "descr",
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "TypeCast": {
                            "arg": {
                              "A_Const": {
                                "location": 45,
                                "sval": {
                                  "sval": "pg_event_trigger",
                                },
                              },
                            },
                            "location": 63,
                            "typeName": {
                              "location": 65,
                              "names": [
                                {
                                  "String": {
                                    "sval": "regclass",
                                  },
                                },
                              ],
                              "typemod": -1,
                            },
                          },
                        },
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "e",
                                },
                              },
                              {
                                "String": {
                                  "sval": "oid",
                                },
                              },
                            ],
                            "location": 75,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {},
                            "location": 82,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "pg_describe_object",
                          },
                        },
                      ],
                      "location": 26,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 99,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "b",
                          },
                        },
                        {
                          "String": {
                            "sval": "type",
                          },
                        },
                      ],
                      "location": 99,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 107,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "b",
                          },
                        },
                        {
                          "String": {
                            "sval": "object_names",
                          },
                        },
                      ],
                      "location": 107,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 123,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "b",
                          },
                        },
                        {
                          "String": {
                            "sval": "object_args",
                          },
                        },
                      ],
                      "location": 123,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 142,
                  "name": "ident",
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "a",
                                },
                              },
                              {
                                "String": {
                                  "sval": "classid",
                                },
                              },
                            ],
                            "location": 161,
                          },
                        },
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "a",
                                },
                              },
                              {
                                "String": {
                                  "sval": "objid",
                                },
                              },
                            ],
                            "location": 172,
                          },
                        },
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "a",
                                },
                              },
                              {
                                "String": {
                                  "sval": "objsubid",
                                },
                              },
                            ],
                            "location": 181,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "pg_identify_object",
                          },
                        },
                      ],
                      "location": 142,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`event_trigger.sql > line 471 1`] = `
[
  "DROP EVENT TRIGGER start_rls_command",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "String": {
                  "sval": "start_rls_command",
                },
              },
            ],
            "removeType": "OBJECT_EVENT_TRIGGER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;
