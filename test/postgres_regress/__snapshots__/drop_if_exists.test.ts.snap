// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`drop_if_exists.sql > line 9 1`] = `
[
  "DROP TABLE IF EXISTS test_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "missing_ok": true,
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 11 1`] = `
[
  "CREATE TABLE test_exists (a int, b text)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "test_exists",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 26,
                  "typeName": {
                    "location": 28,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 33,
                  "typeName": {
                    "location": 35,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 17 1`] = `
[
  "DROP VIEW IF EXISTS test_view_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "missing_ok": true,
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_view_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_VIEW",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 19 1`] = `
[
  "CREATE VIEW test_view_exists AS select * from test_exists",
  {
    "stmts": [
      {
        "stmt": {
          "ViewStmt": {
            "query": {
              "SelectStmt": {
                "fromClause": [
                  {
                    "RangeVar": {
                      "inh": true,
                      "location": 46,
                      "relname": "test_exists",
                      "relpersistence": "p",
                    },
                  },
                ],
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "targetList": [
                  {
                    "ResTarget": {
                      "location": 39,
                      "val": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "A_Star": {},
                            },
                          ],
                          "location": 39,
                        },
                      },
                    },
                  },
                ],
              },
            },
            "view": {
              "inh": true,
              "location": 12,
              "relname": "test_view_exists",
              "relpersistence": "p",
            },
            "withCheckOption": "NO_CHECK_OPTION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 23 1`] = `
[
  "DROP VIEW test_view_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_view_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_VIEW",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 29 1`] = `
[
  "DROP INDEX IF EXISTS test_index_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "missing_ok": true,
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_index_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_INDEX",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 31 1`] = `
[
  "CREATE INDEX test_index_exists on test_exists(a)",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "test_index_exists",
            "indexParams": [
              {
                "IndexElem": {
                  "name": "a",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 34,
              "relname": "test_exists",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 35 1`] = `
[
  "DROP INDEX test_index_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_index_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_INDEX",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 41 1`] = `
[
  "DROP SEQUENCE IF EXISTS test_sequence_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "missing_ok": true,
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_sequence_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_SEQUENCE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 43 1`] = `
[
  "CREATE SEQUENCE test_sequence_exists",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "sequence": {
              "inh": true,
              "location": 16,
              "relname": "test_sequence_exists",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 47 1`] = `
[
  "DROP SEQUENCE test_sequence_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_sequence_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_SEQUENCE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 53 1`] = `
[
  "DROP SCHEMA IF EXISTS test_schema_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "missing_ok": true,
            "objects": [
              {
                "String": {
                  "sval": "test_schema_exists",
                },
              },
            ],
            "removeType": "OBJECT_SCHEMA",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 55 1`] = `
[
  "CREATE SCHEMA test_schema_exists",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSchemaStmt": {
            "schemaname": "test_schema_exists",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 59 1`] = `
[
  "DROP SCHEMA test_schema_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "String": {
                  "sval": "test_schema_exists",
                },
              },
            ],
            "removeType": "OBJECT_SCHEMA",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 65 1`] = `
[
  "DROP TYPE IF EXISTS test_type_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "missing_ok": true,
            "objects": [
              {
                "TypeName": {
                  "location": 20,
                  "names": [
                    {
                      "String": {
                        "sval": "test_type_exists",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 67 1`] = `
[
  "CREATE type test_type_exists as (a int, b text)",
  {
    "stmts": [
      {
        "stmt": {
          "CompositeTypeStmt": {
            "coldeflist": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 33,
                  "typeName": {
                    "location": 35,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 40,
                  "typeName": {
                    "location": 42,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
            "typevar": {
              "location": 12,
              "relname": "test_type_exists",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 71 1`] = `
[
  "DROP TYPE test_type_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "TypeName": {
                  "location": 10,
                  "names": [
                    {
                      "String": {
                        "sval": "test_type_exists",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 77 1`] = `
[
  "DROP DOMAIN IF EXISTS test_domain_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "missing_ok": true,
            "objects": [
              {
                "TypeName": {
                  "location": 22,
                  "names": [
                    {
                      "String": {
                        "sval": "test_domain_exists",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_DOMAIN",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 79 1`] = `
[
  "CREATE domain test_domain_exists as int not null check (value > 0)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "constraints": [
              {
                "Constraint": {
                  "contype": "CONSTR_NOTNULL",
                  "location": 40,
                },
              },
              {
                "Constraint": {
                  "contype": "CONSTR_CHECK",
                  "initially_valid": true,
                  "location": 49,
                  "raw_expr": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "value",
                              },
                            },
                          ],
                          "location": 56,
                        },
                      },
                      "location": 62,
                      "name": [
                        {
                          "String": {
                            "sval": ">",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "ival": {},
                          "location": 64,
                        },
                      },
                    },
                  },
                },
              },
            ],
            "domainname": [
              {
                "String": {
                  "sval": "test_domain_exists",
                },
              },
            ],
            "typeName": {
              "location": 36,
              "names": [
                {
                  "String": {
                    "sval": "pg_catalog",
                  },
                },
                {
                  "String": {
                    "sval": "int4",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 83 1`] = `
[
  "DROP DOMAIN test_domain_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "TypeName": {
                  "location": 12,
                  "names": [
                    {
                      "String": {
                        "sval": "test_domain_exists",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_DOMAIN",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 93 1`] = `
[
  "DROP USER regress_test_u2",
  {
    "stmts": [
      {
        "stmt": {
          "DropRoleStmt": {
            "roles": [
              {
                "RoleSpec": {
                  "location": 10,
                  "rolename": "regress_test_u2",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 95 1`] = `
[
  "DROP USER IF EXISTS regress_test_u1, regress_test_u2",
  {
    "stmts": [
      {
        "stmt": {
          "DropRoleStmt": {
            "missing_ok": true,
            "roles": [
              {
                "RoleSpec": {
                  "location": 20,
                  "rolename": "regress_test_u1",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
              {
                "RoleSpec": {
                  "location": 37,
                  "rolename": "regress_test_u2",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 97 1`] = `
[
  "DROP USER regress_test_u1",
  {
    "stmts": [
      {
        "stmt": {
          "DropRoleStmt": {
            "roles": [
              {
                "RoleSpec": {
                  "location": 10,
                  "rolename": "regress_test_u1",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 99 1`] = `
[
  "DROP ROLE regress_test_r2",
  {
    "stmts": [
      {
        "stmt": {
          "DropRoleStmt": {
            "roles": [
              {
                "RoleSpec": {
                  "location": 10,
                  "rolename": "regress_test_r2",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 101 1`] = `
[
  "DROP ROLE IF EXISTS regress_test_r1, regress_test_r2",
  {
    "stmts": [
      {
        "stmt": {
          "DropRoleStmt": {
            "missing_ok": true,
            "roles": [
              {
                "RoleSpec": {
                  "location": 20,
                  "rolename": "regress_test_r1",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
              {
                "RoleSpec": {
                  "location": 37,
                  "rolename": "regress_test_r2",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 103 1`] = `
[
  "DROP ROLE regress_test_r1",
  {
    "stmts": [
      {
        "stmt": {
          "DropRoleStmt": {
            "roles": [
              {
                "RoleSpec": {
                  "location": 10,
                  "rolename": "regress_test_r1",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 105 1`] = `
[
  "DROP GROUP regress_test_g2",
  {
    "stmts": [
      {
        "stmt": {
          "DropRoleStmt": {
            "roles": [
              {
                "RoleSpec": {
                  "location": 11,
                  "rolename": "regress_test_g2",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 107 1`] = `
[
  "DROP GROUP IF EXISTS regress_test_g1, regress_test_g2",
  {
    "stmts": [
      {
        "stmt": {
          "DropRoleStmt": {
            "missing_ok": true,
            "roles": [
              {
                "RoleSpec": {
                  "location": 21,
                  "rolename": "regress_test_g1",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
              {
                "RoleSpec": {
                  "location": 38,
                  "rolename": "regress_test_g2",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 109 1`] = `
[
  "DROP GROUP regress_test_g1",
  {
    "stmts": [
      {
        "stmt": {
          "DropRoleStmt": {
            "roles": [
              {
                "RoleSpec": {
                  "location": 11,
                  "rolename": "regress_test_g1",
                  "roletype": "ROLESPEC_CSTRING",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 112 1`] = `
[
  "DROP COLLATION IF EXISTS test_collation_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "missing_ok": true,
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_collation_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_COLLATION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 115 1`] = `
[
  "DROP CONVERSION test_conversion_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_conversion_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_CONVERSION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 122 1`] = `
[
  "DROP TEXT SEARCH PARSER test_tsparser_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_tsparser_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TSPARSER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 126 1`] = `
[
  "DROP TEXT SEARCH DICTIONARY test_tsdict_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_tsdict_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TSDICTIONARY",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 136 1`] = `
[
  "DROP TEXT SEARCH TEMPLATE test_tstemplate_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_tstemplate_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TSTEMPLATE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 140 1`] = `
[
  "DROP TEXT SEARCH CONFIGURATION test_tsconfig_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_tsconfig_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TSCONFIGURATION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 146 1`] = `
[
  "DROP EXTENSION test_extension_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "String": {
                  "sval": "test_extension_exists",
                },
              },
            ],
            "removeType": "OBJECT_EXTENSION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 150 1`] = `
[
  "DROP FUNCTION test_function_exists()",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "ObjectWithArgs": {
                  "objname": [
                    {
                      "String": {
                        "sval": "test_function_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_FUNCTION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 153 1`] = `
[
  "DROP FUNCTION test_function_exists(int, text, int[])",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "ObjectWithArgs": {
                  "objargs": [
                    {
                      "TypeName": {
                        "location": 35,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "int4",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                    {
                      "TypeName": {
                        "location": 40,
                        "names": [
                          {
                            "String": {
                              "sval": "text",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                    {
                      "TypeName": {
                        "arrayBounds": [
                          {
                            "Integer": {},
                          },
                        ],
                        "location": 46,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "int4",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  ],
                  "objfuncargs": [
                    {
                      "FunctionParameter": {
                        "argType": {
                          "location": 35,
                          "names": [
                            {
                              "String": {
                                "sval": "pg_catalog",
                              },
                            },
                            {
                              "String": {
                                "sval": "int4",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                        "mode": "FUNC_PARAM_DEFAULT",
                      },
                    },
                    {
                      "FunctionParameter": {
                        "argType": {
                          "location": 40,
                          "names": [
                            {
                              "String": {
                                "sval": "text",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                        "mode": "FUNC_PARAM_DEFAULT",
                      },
                    },
                    {
                      "FunctionParameter": {
                        "argType": {
                          "arrayBounds": [
                            {
                              "Integer": {},
                            },
                          ],
                          "location": 46,
                          "names": [
                            {
                              "String": {
                                "sval": "pg_catalog",
                              },
                            },
                            {
                              "String": {
                                "sval": "int4",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                        "mode": "FUNC_PARAM_DEFAULT",
                      },
                    },
                  ],
                  "objname": [
                    {
                      "String": {
                        "sval": "test_function_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_FUNCTION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 157 1`] = `
[
  "DROP AGGREGATE test_aggregate_exists(*)",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "ObjectWithArgs": {
                  "objname": [
                    {
                      "String": {
                        "sval": "test_aggregate_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_AGGREGATE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 160 1`] = `
[
  "DROP AGGREGATE test_aggregate_exists(int)",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "ObjectWithArgs": {
                  "objargs": [
                    {
                      "TypeName": {
                        "location": 37,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "int4",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  ],
                  "objfuncargs": [
                    {
                      "FunctionParameter": {
                        "argType": {
                          "location": 37,
                          "names": [
                            {
                              "String": {
                                "sval": "pg_catalog",
                              },
                            },
                            {
                              "String": {
                                "sval": "int4",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                        "mode": "FUNC_PARAM_DEFAULT",
                      },
                    },
                  ],
                  "objname": [
                    {
                      "String": {
                        "sval": "test_aggregate_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_AGGREGATE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 164 1`] = `
[
  "DROP OPERATOR @#@ (int, int)",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "ObjectWithArgs": {
                  "objargs": [
                    {
                      "TypeName": {
                        "location": 19,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "int4",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                    {
                      "TypeName": {
                        "location": 24,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "int4",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  ],
                  "objname": [
                    {
                      "String": {
                        "sval": "@#@",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_OPERATOR",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 171 1`] = `
[
  "DROP LANGUAGE test_language_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "String": {
                  "sval": "test_language_exists",
                },
              },
            ],
            "removeType": "OBJECT_LANGUAGE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 175 1`] = `
[
  "DROP CAST (text AS text)",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "TypeName": {
                        "location": 11,
                        "names": [
                          {
                            "String": {
                              "sval": "text",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                    {
                      "TypeName": {
                        "location": 19,
                        "names": [
                          {
                            "String": {
                              "sval": "text",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_CAST",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 179 1`] = `
[
  "DROP TRIGGER test_trigger_exists ON test_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_exists",
                      },
                    },
                    {
                      "String": {
                        "sval": "test_trigger_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TRIGGER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 182 1`] = `
[
  "DROP TRIGGER test_trigger_exists ON no_such_table",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "no_such_table",
                      },
                    },
                    {
                      "String": {
                        "sval": "test_trigger_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TRIGGER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 185 1`] = `
[
  "DROP TRIGGER test_trigger_exists ON no_such_schema.no_such_table",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "no_such_schema",
                      },
                    },
                    {
                      "String": {
                        "sval": "no_such_table",
                      },
                    },
                    {
                      "String": {
                        "sval": "test_trigger_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TRIGGER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 188 1`] = `
[
  "CREATE TRIGGER test_trigger_exists
    BEFORE UPDATE ON test_exists
    FOR EACH ROW EXECUTE PROCEDURE suppress_redundant_updates_trigger()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTrigStmt": {
            "events": 16,
            "funcname": [
              {
                "String": {
                  "sval": "suppress_redundant_updates_trigger",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 56,
              "relname": "test_exists",
              "relpersistence": "p",
            },
            "row": true,
            "timing": 2,
            "trigname": "test_trigger_exists",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 194 1`] = `
[
  "DROP RULE test_rule_exists ON test_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_exists",
                      },
                    },
                    {
                      "String": {
                        "sval": "test_rule_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_RULE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 197 1`] = `
[
  "DROP RULE test_rule_exists ON no_such_table",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "no_such_table",
                      },
                    },
                    {
                      "String": {
                        "sval": "test_rule_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_RULE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 200 1`] = `
[
  "DROP RULE test_rule_exists ON no_such_schema.no_such_table",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "no_such_schema",
                      },
                    },
                    {
                      "String": {
                        "sval": "no_such_table",
                      },
                    },
                    {
                      "String": {
                        "sval": "test_rule_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_RULE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 203 1`] = `
[
  "CREATE RULE test_rule_exists AS ON INSERT TO test_exists
    DO INSTEAD
    INSERT INTO test_exists VALUES (NEW.a, NEW.b || NEW.a::text)",
  {
    "stmts": [
      {
        "stmt": {
          "RuleStmt": {
            "actions": [
              {
                "InsertStmt": {
                  "override": "OVERRIDING_NOT_SET",
                  "relation": {
                    "inh": true,
                    "location": 88,
                    "relname": "test_exists",
                    "relpersistence": "p",
                  },
                  "selectStmt": {
                    "SelectStmt": {
                      "limitOption": "LIMIT_OPTION_DEFAULT",
                      "op": "SETOP_NONE",
                      "valuesLists": [
                        {
                          "List": {
                            "items": [
                              {
                                "ColumnRef": {
                                  "fields": [
                                    {
                                      "String": {
                                        "sval": "new",
                                      },
                                    },
                                    {
                                      "String": {
                                        "sval": "a",
                                      },
                                    },
                                  ],
                                  "location": 108,
                                },
                              },
                              {
                                "A_Expr": {
                                  "kind": "AEXPR_OP",
                                  "lexpr": {
                                    "ColumnRef": {
                                      "fields": [
                                        {
                                          "String": {
                                            "sval": "new",
                                          },
                                        },
                                        {
                                          "String": {
                                            "sval": "b",
                                          },
                                        },
                                      ],
                                      "location": 115,
                                    },
                                  },
                                  "location": 121,
                                  "name": [
                                    {
                                      "String": {
                                        "sval": "||",
                                      },
                                    },
                                  ],
                                  "rexpr": {
                                    "TypeCast": {
                                      "arg": {
                                        "ColumnRef": {
                                          "fields": [
                                            {
                                              "String": {
                                                "sval": "new",
                                              },
                                            },
                                            {
                                              "String": {
                                                "sval": "a",
                                              },
                                            },
                                          ],
                                          "location": 124,
                                        },
                                      },
                                      "location": 129,
                                      "typeName": {
                                        "location": 131,
                                        "names": [
                                          {
                                            "String": {
                                              "sval": "text",
                                            },
                                          },
                                        ],
                                        "typemod": -1,
                                      },
                                    },
                                  },
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                  },
                },
              },
            ],
            "event": "CMD_INSERT",
            "instead": true,
            "relation": {
              "inh": true,
              "location": 45,
              "relname": "test_exists",
              "relpersistence": "p",
            },
            "rulename": "test_rule_exists",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 209 1`] = `
[
  "DROP FOREIGN DATA WRAPPER test_fdw_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "String": {
                  "sval": "test_fdw_exists",
                },
              },
            ],
            "removeType": "OBJECT_FDW",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 213 1`] = `
[
  "DROP SERVER test_server_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "String": {
                  "sval": "test_server_exists",
                },
              },
            ],
            "removeType": "OBJECT_FOREIGN_SERVER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 217 1`] = `
[
  "DROP OPERATOR CLASS test_operator_class USING btree",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "btree",
                      },
                    },
                    {
                      "String": {
                        "sval": "test_operator_class",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_OPCLASS",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 220 1`] = `
[
  "DROP OPERATOR CLASS test_operator_class USING no_such_am",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "no_such_am",
                      },
                    },
                    {
                      "String": {
                        "sval": "test_operator_class",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_OPCLASS",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 224 1`] = `
[
  "DROP OPERATOR FAMILY test_operator_family USING btree",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "btree",
                      },
                    },
                    {
                      "String": {
                        "sval": "test_operator_family",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_OPFAMILY",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 227 1`] = `
[
  "DROP OPERATOR FAMILY test_operator_family USING no_such_am",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "no_such_am",
                      },
                    },
                    {
                      "String": {
                        "sval": "test_operator_family",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_OPFAMILY",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 231 1`] = `
[
  "DROP ACCESS METHOD no_such_am",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "String": {
                  "sval": "no_such_am",
                },
              },
            ],
            "removeType": "OBJECT_ACCESS_METHOD",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 238 1`] = `
[
  "DROP TABLE test_exists",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "test_exists",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 277 1`] = `
[
  "CREATE FUNCTION test_ambiguous_funcname(int) returns int as $$ select $1; $$ language sql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "test_ambiguous_funcname",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": " select $1; ",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 57,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "sql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 77,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 40,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
            "returnType": {
              "location": 53,
              "names": [
                {
                  "String": {
                    "sval": "pg_catalog",
                  },
                },
                {
                  "String": {
                    "sval": "int4",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 283 1`] = `
[
  "DROP FUNCTION test_ambiguous_funcname(int)",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "ObjectWithArgs": {
                  "objargs": [
                    {
                      "TypeName": {
                        "location": 38,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "int4",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  ],
                  "objfuncargs": [
                    {
                      "FunctionParameter": {
                        "argType": {
                          "location": 38,
                          "names": [
                            {
                              "String": {
                                "sval": "pg_catalog",
                              },
                            },
                            {
                              "String": {
                                "sval": "int4",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                        "mode": "FUNC_PARAM_DEFAULT",
                      },
                    },
                  ],
                  "objname": [
                    {
                      "String": {
                        "sval": "test_ambiguous_funcname",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_FUNCTION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 287 1`] = `
[
  "CREATE PROCEDURE test_ambiguous_procname(int) as $$ begin end; $$ language plpgsql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "test_ambiguous_procname",
                },
              },
            ],
            "is_procedure": true,
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": " begin end; ",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 46,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 66,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 41,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 293 1`] = `
[
  "DROP ROUTINE IF EXISTS test_ambiguous_procname",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "missing_ok": true,
            "objects": [
              {
                "ObjectWithArgs": {
                  "args_unspecified": true,
                  "objname": [
                    {
                      "String": {
                        "sval": "test_ambiguous_procname",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_ROUTINE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 296 1`] = `
[
  "DROP PROCEDURE test_ambiguous_procname(int)",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "ObjectWithArgs": {
                  "objargs": [
                    {
                      "TypeName": {
                        "location": 39,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "int4",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  ],
                  "objfuncargs": [
                    {
                      "FunctionParameter": {
                        "argType": {
                          "location": 39,
                          "names": [
                            {
                              "String": {
                                "sval": "pg_catalog",
                              },
                            },
                            {
                              "String": {
                                "sval": "int4",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                        "mode": "FUNC_PARAM_DEFAULT",
                      },
                    },
                  ],
                  "objname": [
                    {
                      "String": {
                        "sval": "test_ambiguous_procname",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_PROCEDURE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`drop_if_exists.sql > line 301 1`] = `
[
  "drop database test_database_exists (force)",
  {
    "stmts": [
      {
        "stmt": {
          "DropdbStmt": {
            "dbname": "test_database_exists",
            "options": [
              {
                "DefElem": {
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "force",
                  "location": 36,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;
