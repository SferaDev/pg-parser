// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`triggers.sql > line 38 1`] = `
[
  "create table pkeys (pkey1 int4 not null, pkey2 text not null)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "pkeys",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "pkey1",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_NOTNULL",
                        "location": 31,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 20,
                  "typeName": {
                    "location": 26,
                    "names": [
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "pkey2",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_NOTNULL",
                        "location": 52,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 41,
                  "typeName": {
                    "location": 47,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 42 1`] = `
[
  "create index fkeys_i on fkeys (fkey1, fkey2)",
  {
    "stmts": [
      {
        "stmt": {
          "IndexStmt": {
            "accessMethod": "btree",
            "idxname": "fkeys_i",
            "indexParams": [
              {
                "IndexElem": {
                  "name": "fkey1",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
              {
                "IndexElem": {
                  "name": "fkey2",
                  "nulls_ordering": "SORTBY_NULLS_DEFAULT",
                  "ordering": "SORTBY_DEFAULT",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 24,
              "relname": "fkeys",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 46 1`] = `
[
  "insert into pkeys values (10, '1')",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "pkeys",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 10,
                            },
                            "location": 26,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 30,
                            "sval": {
                              "sval": "1",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 59 1`] = `
[
  "create trigger check_fkeys_pkey_exist
	before insert or update on fkeys
	for each row
	execute function
	check_primary_key ('fkey1', 'fkey2', 'pkeys', 'pkey1', 'pkey2')",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTrigStmt": {
            "args": [
              {
                "String": {
                  "sval": "fkey1",
                },
              },
              {
                "String": {
                  "sval": "fkey2",
                },
              },
              {
                "String": {
                  "sval": "pkeys",
                },
              },
              {
                "String": {
                  "sval": "pkey1",
                },
              },
              {
                "String": {
                  "sval": "pkey2",
                },
              },
            ],
            "events": 20,
            "funcname": [
              {
                "String": {
                  "sval": "check_primary_key",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 66,
              "relname": "fkeys",
              "relpersistence": "p",
            },
            "row": true,
            "timing": 2,
            "trigname": "check_fkeys_pkey_exist",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 65 1`] = `
[
  "create trigger check_fkeys_pkey2_exist
	before insert or update on fkeys
	for each row
	execute function check_primary_key ('fkey3', 'fkeys2', 'pkey23')",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTrigStmt": {
            "args": [
              {
                "String": {
                  "sval": "fkey3",
                },
              },
              {
                "String": {
                  "sval": "fkeys2",
                },
              },
              {
                "String": {
                  "sval": "pkey23",
                },
              },
            ],
            "events": 20,
            "funcname": [
              {
                "String": {
                  "sval": "check_primary_key",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 67,
              "relname": "fkeys",
              "relpersistence": "p",
            },
            "row": true,
            "timing": 2,
            "trigname": "check_fkeys_pkey2_exist",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 74 1`] = `
[
  "create trigger check_fkeys2_pkey_exist
	before insert or update on fkeys2
	for each row
	execute procedure
	check_primary_key ('fkey21', 'fkey22', 'pkeys', 'pkey1', 'pkey2')",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTrigStmt": {
            "args": [
              {
                "String": {
                  "sval": "fkey21",
                },
              },
              {
                "String": {
                  "sval": "fkey22",
                },
              },
              {
                "String": {
                  "sval": "pkeys",
                },
              },
              {
                "String": {
                  "sval": "pkey1",
                },
              },
              {
                "String": {
                  "sval": "pkey2",
                },
              },
            ],
            "events": 20,
            "funcname": [
              {
                "String": {
                  "sval": "check_primary_key",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 67,
              "relname": "fkeys2",
              "relpersistence": "p",
            },
            "row": true,
            "timing": 2,
            "trigname": "check_fkeys2_pkey_exist",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 81 1`] = `
[
  "COMMENT ON TRIGGER check_fkeys2_pkey_bad ON fkeys2 IS 'wrong'",
  {
    "stmts": [
      {
        "stmt": {
          "CommentStmt": {
            "comment": "wrong",
            "object": {
              "List": {
                "items": [
                  {
                    "String": {
                      "sval": "fkeys2",
                    },
                  },
                  {
                    "String": {
                      "sval": "check_fkeys2_pkey_bad",
                    },
                  },
                ],
              },
            },
            "objtype": "OBJECT_TRIGGER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 90 1`] = `
[
  "create trigger check_pkeys_fkey_cascade
	before delete or update on pkeys
	for each row
	execute procedure
	check_foreign_key (2, 'cascade', 'pkey1', 'pkey2',
	'fkeys', 'fkey1', 'fkey2', 'fkeys2', 'fkey21', 'fkey22')",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTrigStmt": {
            "args": [
              {
                "String": {
                  "sval": "2",
                },
              },
              {
                "String": {
                  "sval": "cascade",
                },
              },
              {
                "String": {
                  "sval": "pkey1",
                },
              },
              {
                "String": {
                  "sval": "pkey2",
                },
              },
              {
                "String": {
                  "sval": "fkeys",
                },
              },
              {
                "String": {
                  "sval": "fkey1",
                },
              },
              {
                "String": {
                  "sval": "fkey2",
                },
              },
              {
                "String": {
                  "sval": "fkeys2",
                },
              },
              {
                "String": {
                  "sval": "fkey21",
                },
              },
              {
                "String": {
                  "sval": "fkey22",
                },
              },
            ],
            "events": 24,
            "funcname": [
              {
                "String": {
                  "sval": "check_foreign_key",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 68,
              "relname": "pkeys",
              "relpersistence": "p",
            },
            "row": true,
            "timing": 2,
            "trigname": "check_pkeys_fkey_cascade",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 102 1`] = `
[
  "create trigger check_fkeys2_fkey_restrict
	before delete or update on fkeys2
	for each row
	execute procedure check_foreign_key (1, 'restrict', 'pkey23', 'fkeys', 'fkey3')",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTrigStmt": {
            "args": [
              {
                "String": {
                  "sval": "1",
                },
              },
              {
                "String": {
                  "sval": "restrict",
                },
              },
              {
                "String": {
                  "sval": "pkey23",
                },
              },
              {
                "String": {
                  "sval": "fkeys",
                },
              },
              {
                "String": {
                  "sval": "fkey3",
                },
              },
            ],
            "events": 24,
            "funcname": [
              {
                "String": {
                  "sval": "check_foreign_key",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 70,
              "relname": "fkeys2",
              "relpersistence": "p",
            },
            "row": true,
            "timing": 2,
            "trigname": "check_fkeys2_fkey_restrict",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 107 1`] = `
[
  "insert into fkeys2 values (10, '1', 1)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "fkeys2",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 10,
                            },
                            "location": 27,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 31,
                            "sval": {
                              "sval": "1",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 36,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 114 1`] = `
[
  "insert into fkeys values (10, '1', 2)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "fkeys",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 10,
                            },
                            "location": 26,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 30,
                            "sval": {
                              "sval": "1",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 35,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 123 1`] = `
[
  "delete from pkeys where pkey1 = 30 and pkey2 = '3'",
  {
    "stmts": [
      {
        "stmt": {
          "DeleteStmt": {
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "pkeys",
              "relpersistence": "p",
            },
            "whereClause": {
              "BoolExpr": {
                "args": [
                  {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "pkey1",
                              },
                            },
                          ],
                          "location": 24,
                        },
                      },
                      "location": 30,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "ival": {
                            "ival": 30,
                          },
                          "location": 32,
                        },
                      },
                    },
                  },
                  {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "pkey2",
                              },
                            },
                          ],
                          "location": 39,
                        },
                      },
                      "location": 45,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "location": 47,
                          "sval": {
                            "sval": "3",
                          },
                        },
                      },
                    },
                  },
                ],
                "boolop": "AND_EXPR",
                "location": 35,
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 128 1`] = `
[
  "SELECT trigger_name, event_manipulation, event_object_schema, event_object_table,
       action_order, action_condition, action_orientation, action_timing,
       action_reference_old_table, action_reference_new_table
  FROM information_schema.triggers
  WHERE event_object_table in ('pkeys', 'fkeys', 'fkeys2')
  ORDER BY trigger_name COLLATE "C", 2",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 225,
                  "relname": "triggers",
                  "relpersistence": "p",
                  "schemaname": "information_schema",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "sortClause": [
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "CollateClause": {
                      "arg": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "trigger_name",
                              },
                            },
                          ],
                          "location": 323,
                        },
                      },
                      "collname": [
                        {
                          "String": {
                            "sval": "C",
                          },
                        },
                      ],
                      "location": 336,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
              {
                "SortBy": {
                  "location": -1,
                  "node": {
                    "A_Const": {
                      "ival": {
                        "ival": 2,
                      },
                      "location": 349,
                    },
                  },
                  "sortby_dir": "SORTBY_DEFAULT",
                  "sortby_nulls": "SORTBY_NULLS_DEFAULT",
                },
              },
            ],
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "trigger_name",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 21,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "event_manipulation",
                          },
                        },
                      ],
                      "location": 21,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 41,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "event_object_schema",
                          },
                        },
                      ],
                      "location": 41,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 62,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "event_object_table",
                          },
                        },
                      ],
                      "location": 62,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 89,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "action_order",
                          },
                        },
                      ],
                      "location": 89,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 103,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "action_condition",
                          },
                        },
                      ],
                      "location": 103,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 121,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "action_orientation",
                          },
                        },
                      ],
                      "location": 121,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 141,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "action_timing",
                          },
                        },
                      ],
                      "location": 141,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 163,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "action_reference_old_table",
                          },
                        },
                      ],
                      "location": 163,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 191,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "action_reference_new_table",
                          },
                        },
                      ],
                      "location": 191,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_IN",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "event_object_table",
                        },
                      },
                    ],
                    "location": 261,
                  },
                },
                "location": 280,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "List": {
                    "items": [
                      {
                        "A_Const": {
                          "location": 284,
                          "sval": {
                            "sval": "pkeys",
                          },
                        },
                      },
                      {
                        "A_Const": {
                          "location": 293,
                          "sval": {
                            "sval": "fkeys",
                          },
                        },
                      },
                      {
                        "A_Const": {
                          "location": 302,
                          "sval": {
                            "sval": "fkeys2",
                          },
                        },
                      },
                    ],
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 135 1`] = `
[
  "DROP TABLE pkeys",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "pkeys",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 140 1`] = `
[
  "create table trigtest (f1 int, f2 text)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "trigtest",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "f1",
                  "is_local": true,
                  "location": 23,
                  "typeName": {
                    "location": 26,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "f2",
                  "is_local": true,
                  "location": 31,
                  "typeName": {
                    "location": 34,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 142 1`] = `
[
  "create trigger trigger_return_old
	before insert or delete or update on trigtest
	for each row execute procedure trigger_return_old()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTrigStmt": {
            "events": 28,
            "funcname": [
              {
                "String": {
                  "sval": "trigger_return_old",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 72,
              "relname": "trigtest",
              "relpersistence": "p",
            },
            "row": true,
            "timing": 2,
            "trigname": "trigger_return_old",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 146 1`] = `
[
  "insert into trigtest values(1, 'foo')",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "trigtest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 28,
                          },
                        },
                        {
                          "A_Const": {
                            "location": 31,
                            "sval": {
                              "sval": "foo",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 154 1`] = `
[
  "create function f1_times_10() returns trigger as
$$ begin new.f1 := new.f1 * 10; return new; end $$ language plpgsql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "f1_times_10",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": " begin new.f1 := new.f1 * 10; return new; end ",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 46,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 100,
                },
              },
            ],
            "returnType": {
              "location": 38,
              "names": [
                {
                  "String": {
                    "sval": "trigger",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 157 1`] = `
[
  "create trigger trigger_alpha
	before insert or update on trigtest
	for each row execute procedure f1_times_10()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTrigStmt": {
            "events": 20,
            "funcname": [
              {
                "String": {
                  "sval": "f1_times_10",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 57,
              "relname": "trigtest",
              "relpersistence": "p",
            },
            "row": true,
            "timing": 2,
            "trigname": "trigger_alpha",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 168 1`] = `
[
  "create trigger trigger_zed
	before insert or update on trigtest
	for each row execute procedure f1_times_10()",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTrigStmt": {
            "events": 20,
            "funcname": [
              {
                "String": {
                  "sval": "f1_times_10",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 55,
              "relname": "trigtest",
              "relpersistence": "p",
            },
            "row": true,
            "timing": 2,
            "trigname": "trigger_zed",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 179 1`] = `
[
  "drop trigger trigger_alpha on trigtest",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "trigtest",
                      },
                    },
                    {
                      "String": {
                        "sval": "trigger_alpha",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TRIGGER",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 188 1`] = `
[
  "drop table trigtest",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "trigtest",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 191 1`] = `
[
  "create table trigtest (
  a integer,
  b bool default true not null,
  c text default 'xyzzy' not null)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "trigtest",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 26,
                  "typeName": {
                    "location": 28,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_DEFAULT",
                        "location": 46,
                        "raw_expr": {
                          "A_Const": {
                            "boolval": {
                              "boolval": true,
                            },
                            "location": 54,
                          },
                        },
                      },
                    },
                    {
                      "Constraint": {
                        "contype": "CONSTR_NOTNULL",
                        "location": 59,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 39,
                  "typeName": {
                    "location": 41,
                    "names": [
                      {
                        "String": {
                          "sval": "bool",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "c",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_DEFAULT",
                        "location": 78,
                        "raw_expr": {
                          "A_Const": {
                            "location": 86,
                            "sval": {
                              "sval": "xyzzy",
                            },
                          },
                        },
                      },
                    },
                    {
                      "Constraint": {
                        "contype": "CONSTR_NOTNULL",
                        "location": 94,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 71,
                  "typeName": {
                    "location": 73,
                    "names": [
                      {
                        "String": {
                          "sval": "text",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 203 1`] = `
[
  "alter table trigtest add column d integer default 42 not null",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "def": {
                    "ColumnDef": {
                      "colname": "d",
                      "constraints": [
                        {
                          "Constraint": {
                            "contype": "CONSTR_DEFAULT",
                            "location": 42,
                            "raw_expr": {
                              "A_Const": {
                                "ival": {
                                  "ival": 42,
                                },
                                "location": 50,
                              },
                            },
                          },
                        },
                        {
                          "Constraint": {
                            "contype": "CONSTR_NOTNULL",
                            "location": 53,
                          },
                        },
                      ],
                      "is_local": true,
                      "location": 32,
                      "typeName": {
                        "location": 34,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "int4",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                  "subtype": "AT_AddColumn",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "trigtest",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 205 1`] = `
[
  "select * from trigtest",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "trigtest",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 209 1`] = `
[
  "alter table trigtest drop column b",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "name": "b",
                  "subtype": "AT_DropColumn",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "trigtest",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 217 1`] = `
[
  "create sequence ttdummy_seq increment 10 start 0 minvalue 0",
  {
    "stmts": [
      {
        "stmt": {
          "CreateSeqStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 10,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "increment",
                  "location": 28,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {},
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "start",
                  "location": 41,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {},
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "minvalue",
                  "location": 49,
                },
              },
            ],
            "sequence": {
              "inh": true,
              "location": 16,
              "relname": "ttdummy_seq",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 219 1`] = `
[
  "create table tttest (
	price_id	int4,
	price_val	int4,
	price_on	int4,
	price_off	int4 default 999999
)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "tttest",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "price_id",
                  "is_local": true,
                  "location": 23,
                  "typeName": {
                    "location": 32,
                    "names": [
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "price_val",
                  "is_local": true,
                  "location": 39,
                  "typeName": {
                    "location": 49,
                    "names": [
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "price_on",
                  "is_local": true,
                  "location": 56,
                  "typeName": {
                    "location": 65,
                    "names": [
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "price_off",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_DEFAULT",
                        "location": 87,
                        "raw_expr": {
                          "A_Const": {
                            "ival": {
                              "ival": 999999,
                            },
                            "location": 95,
                          },
                        },
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 72,
                  "typeName": {
                    "location": 82,
                    "names": [
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 226 1`] = `
[
  "create trigger ttdummy
	before delete or update on tttest
	for each row
	execute procedure
	ttdummy (price_on, price_off)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTrigStmt": {
            "args": [
              {
                "String": {
                  "sval": "price_on",
                },
              },
              {
                "String": {
                  "sval": "price_off",
                },
              },
            ],
            "events": 24,
            "funcname": [
              {
                "String": {
                  "sval": "ttdummy",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 51,
              "relname": "tttest",
              "relpersistence": "p",
            },
            "row": true,
            "timing": 2,
            "trigname": "ttdummy",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 232 1`] = `
[
  "create trigger ttserial
	before insert or update on tttest
	for each row
	execute procedure
	autoinc (price_on, ttdummy_seq)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateTrigStmt": {
            "args": [
              {
                "String": {
                  "sval": "price_on",
                },
              },
              {
                "String": {
                  "sval": "ttdummy_seq",
                },
              },
            ],
            "events": 20,
            "funcname": [
              {
                "String": {
                  "sval": "autoinc",
                },
              },
            ],
            "relation": {
              "inh": true,
              "location": 52,
              "relname": "tttest",
              "relpersistence": "p",
            },
            "row": true,
            "timing": 2,
            "trigname": "ttserial",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 238 1`] = `
[
  "insert into tttest values (1, 1, null)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "tttest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 27,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 30,
                          },
                        },
                        {
                          "A_Const": {
                            "isnull": true,
                            "location": 33,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 242 1`] = `
[
  "select * from tttest",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "tttest",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 248 1`] = `
[
  "select * from tttest where price_off = 999999",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "tttest",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "price_off",
                        },
                      },
                    ],
                    "location": 27,
                  },
                },
                "location": 37,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "A_Const": {
                    "ival": {
                      "ival": 999999,
                    },
                    "location": 39,
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 251 1`] = `
[
  "update tttest set price_val = 30 where price_id = 3",
  {
    "stmts": [
      {
        "stmt": {
          "UpdateStmt": {
            "relation": {
              "inh": true,
              "location": 7,
              "relname": "tttest",
              "relpersistence": "p",
            },
            "targetList": [
              {
                "ResTarget": {
                  "location": 18,
                  "name": "price_val",
                  "val": {
                    "A_Const": {
                      "ival": {
                        "ival": 30,
                      },
                      "location": 30,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "price_id",
                        },
                      },
                    ],
                    "location": 39,
                  },
                },
                "location": 48,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "A_Const": {
                    "ival": {
                      "ival": 3,
                    },
                    "location": 50,
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 256 1`] = `
[
  "update tttest set price_id = 5 where price_id = 3",
  {
    "stmts": [
      {
        "stmt": {
          "UpdateStmt": {
            "relation": {
              "inh": true,
              "location": 7,
              "relname": "tttest",
              "relpersistence": "p",
            },
            "targetList": [
              {
                "ResTarget": {
                  "location": 18,
                  "name": "price_id",
                  "val": {
                    "A_Const": {
                      "ival": {
                        "ival": 5,
                      },
                      "location": 29,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "price_id",
                        },
                      },
                    ],
                    "location": 37,
                  },
                },
                "location": 46,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "A_Const": {
                    "ival": {
                      "ival": 3,
                    },
                    "location": 48,
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 260 1`] = `
[
  "select set_ttdummy(0)",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "A_Const": {
                            "ival": {},
                            "location": 19,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "set_ttdummy",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 273 1`] = `
[
  "update tttest set price_on = -1 where price_id = 1",
  {
    "stmts": [
      {
        "stmt": {
          "UpdateStmt": {
            "relation": {
              "inh": true,
              "location": 7,
              "relname": "tttest",
              "relpersistence": "p",
            },
            "targetList": [
              {
                "ResTarget": {
                  "location": 18,
                  "name": "price_on",
                  "val": {
                    "A_Const": {
                      "ival": {},
                      "location": 29,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "price_id",
                        },
                      },
                    ],
                    "location": 38,
                  },
                },
                "location": 47,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "A_Const": {
                    "ival": {
                      "ival": 1,
                    },
                    "location": 49,
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 283 1`] = `
[
  "select * from tttest where price_on <= 35 and price_off > 35 and price_id = 5",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "tttest",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "BoolExpr": {
                "args": [
                  {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "price_on",
                              },
                            },
                          ],
                          "location": 27,
                        },
                      },
                      "location": 36,
                      "name": [
                        {
                          "String": {
                            "sval": "<=",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "ival": {
                            "ival": 35,
                          },
                          "location": 39,
                        },
                      },
                    },
                  },
                  {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "price_off",
                              },
                            },
                          ],
                          "location": 46,
                        },
                      },
                      "location": 56,
                      "name": [
                        {
                          "String": {
                            "sval": ">",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "ival": {
                            "ival": 35,
                          },
                          "location": 58,
                        },
                      },
                    },
                  },
                  {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "price_id",
                              },
                            },
                          ],
                          "location": 65,
                        },
                      },
                      "location": 74,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "ival": {
                            "ival": 5,
                          },
                          "location": 76,
                        },
                      },
                    },
                  },
                ],
                "boolop": "AND_EXPR",
                "location": 42,
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 285 1`] = `
[
  "drop table tttest",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "tttest",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 294 1`] = `
[
  "CREATE TABLE main_table (a int unique, b int)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "main_table",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "constraints": [
                    {
                      "Constraint": {
                        "contype": "CONSTR_UNIQUE",
                        "location": 31,
                      },
                    },
                  ],
                  "is_local": true,
                  "location": 25,
                  "typeName": {
                    "location": 27,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 39,
                  "typeName": {
                    "location": 41,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`triggers.sql > line 296 1`] = `
[
  "COPY main_table (a,b) FROM STDIN",
  {
    "stmts": [
      {
        "stmt": {
          "CopyStmt": {
            "attlist": [
              {
                "String": {
                  "sval": "a",
                },
              },
              {
                "String": {
                  "sval": "b",
                },
              },
            ],
            "is_from": true,
            "relation": {
              "inh": true,
              "location": 5,
              "relname": "main_table",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;
