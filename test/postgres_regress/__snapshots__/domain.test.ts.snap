// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`domain.sql > line 6 1`] = `
[
  "create domain domaindroptest int4",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "domainname": [
              {
                "String": {
                  "sval": "domaindroptest",
                },
              },
            ],
            "typeName": {
              "location": 29,
              "names": [
                {
                  "String": {
                    "sval": "int4",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 9 1`] = `
[
  "create domain dependenttypetest domaindroptest",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "domainname": [
              {
                "String": {
                  "sval": "dependenttypetest",
                },
              },
            ],
            "typeName": {
              "location": 32,
              "names": [
                {
                  "String": {
                    "sval": "domaindroptest",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 12 1`] = `
[
  "drop domain domaindroptest",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "TypeName": {
                  "location": 12,
                  "names": [
                    {
                      "String": {
                        "sval": "domaindroptest",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_DOMAIN",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 14 1`] = `
[
  "drop domain domaindroptest cascade",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_CASCADE",
            "objects": [
              {
                "TypeName": {
                  "location": 12,
                  "names": [
                    {
                      "String": {
                        "sval": "domaindroptest",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_DOMAIN",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 31 1`] = `
[
  "SELECT cast('123456' as domainvarchar)",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "TypeCast": {
                      "arg": {
                        "A_Const": {
                          "location": 12,
                          "sval": {
                            "sval": "123456",
                          },
                        },
                      },
                      "location": 7,
                      "typeName": {
                        "location": 24,
                        "names": [
                          {
                            "String": {
                              "sval": "domainvarchar",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 35 1`] = `
[
  "create table basictest
           ( testint4 domainint4
           , testtext domaintext
           , testvarchar domainvarchar
           , testnumeric domainnumeric
           )",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "basictest",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "testint4",
                  "is_local": true,
                  "location": 36,
                  "typeName": {
                    "location": 45,
                    "names": [
                      {
                        "String": {
                          "sval": "domainint4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "testtext",
                  "is_local": true,
                  "location": 69,
                  "typeName": {
                    "location": 78,
                    "names": [
                      {
                        "String": {
                          "sval": "domaintext",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "testvarchar",
                  "is_local": true,
                  "location": 102,
                  "typeName": {
                    "location": 114,
                    "names": [
                      {
                        "String": {
                          "sval": "domainvarchar",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "testnumeric",
                  "is_local": true,
                  "location": 141,
                  "typeName": {
                    "location": 153,
                    "names": [
                      {
                        "String": {
                          "sval": "domainnumeric",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 42 1`] = `
[
  "INSERT INTO basictest values ('88', 'haha', 'short', '123.12')",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "basictest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 30,
                            "sval": {
                              "sval": "88",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "location": 36,
                            "sval": {
                              "sval": "haha",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "location": 44,
                            "sval": {
                              "sval": "short",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "location": 53,
                            "sval": {
                              "sval": "123.12",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 44 1`] = `
[
  "    -- Truncate numeric

-- Test copy
COPY basictest (testvarchar) FROM STDIN",
  {
    "stmts": [
      {
        "stmt": {
          "CopyStmt": {
            "attlist": [
              {
                "String": {
                  "sval": "testvarchar",
                },
              },
            ],
            "is_from": true,
            "relation": {
              "inh": true,
              "location": 43,
              "relname": "basictest",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 49 1`] = `
[
  "select * from defaulttest",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "defaulttest",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 51 1`] = `
[
  "drop table defaulttest cascade",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_CASCADE",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "defaulttest",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 54 1`] = `
[
  "create domain dnotnulltest integer",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "domainname": [
              {
                "String": {
                  "sval": "dnotnulltest",
                },
              },
            ],
            "typeName": {
              "location": 27,
              "names": [
                {
                  "String": {
                    "sval": "pg_catalog",
                  },
                },
                {
                  "String": {
                    "sval": "int4",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 60 1`] = `
[
  "insert into domnotnull default values",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "domnotnull",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 61 1`] = `
[
  " -- fails

update domnotnull set col1 = 5",
  {
    "stmts": [
      {
        "stmt": {
          "UpdateStmt": {
            "relation": {
              "inh": true,
              "location": 18,
              "relname": "domnotnull",
              "relpersistence": "p",
            },
            "targetList": [
              {
                "ResTarget": {
                  "location": 33,
                  "name": "col1",
                  "val": {
                    "A_Const": {
                      "ival": {
                        "ival": 5,
                      },
                      "location": 40,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 64 1`] = `
[
  " -- fails

update domnotnull set col2 = 6",
  {
    "stmts": [
      {
        "stmt": {
          "UpdateStmt": {
            "relation": {
              "inh": true,
              "location": 18,
              "relname": "domnotnull",
              "relpersistence": "p",
            },
            "targetList": [
              {
                "ResTarget": {
                  "location": 33,
                  "name": "col2",
                  "val": {
                    "A_Const": {
                      "ival": {
                        "ival": 6,
                      },
                      "location": 40,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 68 1`] = `
[
  "alter domain dnotnulltest set not null",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "subtype": "O",
            "typeName": [
              {
                "String": {
                  "sval": "dnotnulltest",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 70 1`] = `
[
  " -- fails

alter domain dnotnulltest drop not null",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "subtype": "N",
            "typeName": [
              {
                "String": {
                  "sval": "dnotnulltest",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 76 1`] = `
[
  "drop domain dnotnulltest cascade",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_CASCADE",
            "objects": [
              {
                "TypeName": {
                  "location": 12,
                  "names": [
                    {
                      "String": {
                        "sval": "dnotnulltest",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_DOMAIN",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 79 1`] = `
[
  "create table domdeftest (col1 ddef1)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "domdeftest",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "col1",
                  "is_local": true,
                  "location": 25,
                  "typeName": {
                    "location": 30,
                    "names": [
                      {
                        "String": {
                          "sval": "ddef1",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 81 1`] = `
[
  "insert into domdeftest default values",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "domdeftest",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 84 1`] = `
[
  "alter domain ddef1 set default '42'",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "def": {
              "A_Const": {
                "location": 31,
                "sval": {
                  "sval": "42",
                },
              },
            },
            "subtype": "T",
            "typeName": [
              {
                "String": {
                  "sval": "ddef1",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 92 1`] = `
[
  "drop table domdeftest",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "domdeftest",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 95 1`] = `
[
  "create domain con as integer",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "domainname": [
              {
                "String": {
                  "sval": "con",
                },
              },
            ],
            "typeName": {
              "location": 21,
              "names": [
                {
                  "String": {
                    "sval": "pg_catalog",
                  },
                },
                {
                  "String": {
                    "sval": "int4",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 98 1`] = `
[
  "insert into domcontest values (1)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "domcontest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 31,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 100 1`] = `
[
  " -- fails

alter domain con add constraint t check (VALUE < 34)",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "def": {
              "Constraint": {
                "conname": "t",
                "contype": "CONSTR_CHECK",
                "initially_valid": true,
                "location": 32,
                "raw_expr": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "value",
                            },
                          },
                        ],
                        "location": 52,
                      },
                    },
                    "location": 58,
                    "name": [
                      {
                        "String": {
                          "sval": "<",
                        },
                      },
                    ],
                    "rexpr": {
                      "A_Const": {
                        "ival": {
                          "ival": 34,
                        },
                        "location": 60,
                      },
                    },
                  },
                },
              },
            },
            "subtype": "C",
            "typeName": [
              {
                "String": {
                  "sval": "con",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 109 1`] = `
[
  "alter domain con drop constraint t",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "name": "t",
            "subtype": "X",
            "typeName": [
              {
                "String": {
                  "sval": "con",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 113 1`] = `
[
  "alter domain con drop constraint nonexistent",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "name": "nonexistent",
            "subtype": "X",
            "typeName": [
              {
                "String": {
                  "sval": "con",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 117 1`] = `
[
  "create domain things AS INT",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "domainname": [
              {
                "String": {
                  "sval": "things",
                },
              },
            ],
            "typeName": {
              "location": 24,
              "names": [
                {
                  "String": {
                    "sval": "pg_catalog",
                  },
                },
                {
                  "String": {
                    "sval": "int4",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 127 1`] = `
[
  "create table domtab (col1 integer)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "domtab",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "col1",
                  "is_local": true,
                  "location": 21,
                  "typeName": {
                    "location": 26,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 134 1`] = `
[
  "alter domain dom set not null",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "subtype": "O",
            "typeName": [
              {
                "String": {
                  "sval": "dom",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 135 1`] = `
[
  " -- fail

alter domain dom drop not null",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "subtype": "N",
            "typeName": [
              {
                "String": {
                  "sval": "dom",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 140 1`] = `
[
  "alter domain dom add constraint domchkgt6 check(value > 6)",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "def": {
              "Constraint": {
                "conname": "domchkgt6",
                "contype": "CONSTR_CHECK",
                "initially_valid": true,
                "location": 21,
                "raw_expr": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "value",
                            },
                          },
                        ],
                        "location": 48,
                      },
                    },
                    "location": 54,
                    "name": [
                      {
                        "String": {
                          "sval": ">",
                        },
                      },
                    ],
                    "rexpr": {
                      "A_Const": {
                        "ival": {
                          "ival": 6,
                        },
                        "location": 56,
                      },
                    },
                  },
                },
              },
            },
            "subtype": "C",
            "typeName": [
              {
                "String": {
                  "sval": "dom",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 141 1`] = `
[
  " --fail

alter domain dom drop constraint domchkgt6 restrict",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "name": "domchkgt6",
            "subtype": "X",
            "typeName": [
              {
                "String": {
                  "sval": "dom",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 147 1`] = `
[
  "drop domain ddef1 restrict",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "TypeName": {
                  "location": 12,
                  "names": [
                    {
                      "String": {
                        "sval": "ddef1",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_DOMAIN",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 155 1`] = `
[
  "create domain vchar4 varchar(4)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "domainname": [
              {
                "String": {
                  "sval": "vchar4",
                },
              },
            ],
            "typeName": {
              "location": 21,
              "names": [
                {
                  "String": {
                    "sval": "pg_catalog",
                  },
                },
                {
                  "String": {
                    "sval": "varchar",
                  },
                },
              ],
              "typemod": -1,
              "typmods": [
                {
                  "A_Const": {
                    "ival": {
                      "ival": 4,
                    },
                    "location": 29,
                  },
                },
              ],
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 164 1`] = `
[
  " -- fail

create temp table dtest(f1 dtop)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 28,
              "relname": "dtest",
              "relpersistence": "t",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "f1",
                  "is_local": true,
                  "location": 34,
                  "typeName": {
                    "location": 37,
                    "names": [
                      {
                        "String": {
                          "sval": "dtop",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 168 1`] = `
[
  "insert into dtest values('x123')",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "dtest",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 25,
                            "sval": {
                              "sval": "x123",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 173 1`] = `
[
  " -- fail

drop table dtest",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "dtest",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 181 1`] = `
[
  "create domain str_domain as text not null",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "constraints": [
              {
                "Constraint": {
                  "contype": "CONSTR_NOTNULL",
                  "location": 33,
                },
              },
            ],
            "domainname": [
              {
                "String": {
                  "sval": "str_domain",
                },
              },
            ],
            "typeName": {
              "location": 28,
              "names": [
                {
                  "String": {
                    "sval": "text",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 183 1`] = `
[
  "create table domain_test (a int, b int)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "domain_test",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "a",
                  "is_local": true,
                  "location": 26,
                  "typeName": {
                    "location": 28,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "b",
                  "is_local": true,
                  "location": 33,
                  "typeName": {
                    "location": 35,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 185 1`] = `
[
  "insert into domain_test values (1, 2)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "domain_test",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 1,
                            },
                            "location": 32,
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 35,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 189 1`] = `
[
  "alter table domain_test add column c str_domain",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "def": {
                    "ColumnDef": {
                      "colname": "c",
                      "is_local": true,
                      "location": 35,
                      "typeName": {
                        "location": 37,
                        "names": [
                          {
                            "String": {
                              "sval": "str_domain",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                  "subtype": "AT_AddColumn",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "domain_test",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 191 1`] = `
[
  "create domain str_domain2 as text check (value <> 'foo') default 'foo'",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "constraints": [
              {
                "Constraint": {
                  "contype": "CONSTR_CHECK",
                  "initially_valid": true,
                  "location": 34,
                  "raw_expr": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "value",
                              },
                            },
                          ],
                          "location": 41,
                        },
                      },
                      "location": 47,
                      "name": [
                        {
                          "String": {
                            "sval": "<>",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "location": 50,
                          "sval": {
                            "sval": "foo",
                          },
                        },
                      },
                    },
                  },
                },
              },
              {
                "Constraint": {
                  "contype": "CONSTR_DEFAULT",
                  "location": 57,
                  "raw_expr": {
                    "A_Const": {
                      "location": 65,
                      "sval": {
                        "sval": "foo",
                      },
                    },
                  },
                },
              },
            ],
            "domainname": [
              {
                "String": {
                  "sval": "str_domain2",
                },
              },
            ],
            "typeName": {
              "location": 29,
              "names": [
                {
                  "String": {
                    "sval": "text",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 194 1`] = `
[
  "alter table domain_test add column d str_domain2",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTableStmt": {
            "cmds": [
              {
                "AlterTableCmd": {
                  "behavior": "DROP_RESTRICT",
                  "def": {
                    "ColumnDef": {
                      "colname": "d",
                      "is_local": true,
                      "location": 35,
                      "typeName": {
                        "location": 37,
                        "names": [
                          {
                            "String": {
                              "sval": "str_domain2",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                  "subtype": "AT_AddColumn",
                },
              },
            ],
            "objtype": "OBJECT_TABLE",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "domain_test",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 198 1`] = `
[
  "create domain pos_int as int4 check (value > 0) not null",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "constraints": [
              {
                "Constraint": {
                  "contype": "CONSTR_CHECK",
                  "initially_valid": true,
                  "location": 30,
                  "raw_expr": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "value",
                              },
                            },
                          ],
                          "location": 37,
                        },
                      },
                      "location": 43,
                      "name": [
                        {
                          "String": {
                            "sval": ">",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "ival": {},
                          "location": 45,
                        },
                      },
                    },
                  },
                },
              },
              {
                "Constraint": {
                  "contype": "CONSTR_NOTNULL",
                  "location": 48,
                },
              },
            ],
            "domainname": [
              {
                "String": {
                  "sval": "pos_int",
                },
              },
            ],
            "typeName": {
              "location": 25,
              "names": [
                {
                  "String": {
                    "sval": "int4",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 201 1`] = `
[
  "execute s1(10)",
  {
    "stmts": [
      {
        "stmt": {
          "ExecuteStmt": {
            "name": "s1",
            "params": [
              {
                "A_Const": {
                  "ival": {
                    "ival": 10,
                  },
                  "location": 11,
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 203 1`] = `
[
  " -- should fail

-- Check that domain constraints on plpgsql function parameters, results,
-- and local variables are enforced correctly.

create function doubledecrement(p1 pos_int) returns pos_int as $$
declare v pos_int;
begin
    return p1;
end$$ language plpgsql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "doubledecrement",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
declare v pos_int;
begin
    return p1;
end",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 199,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 251,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 174,
                    "names": [
                      {
                        "String": {
                          "sval": "pos_int",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                  "name": "p1",
                },
              },
            ],
            "returnType": {
              "location": 191,
              "names": [
                {
                  "String": {
                    "sval": "pos_int",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 214 1`] = `
[
  "select doubledecrement(3)",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 3,
                            },
                            "location": 23,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "doubledecrement",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 214 2`] = `
[
  " -- fail because of implicit null assignment

create or replace function doubledecrement(p1 pos_int) returns pos_int as $$
declare v pos_int := 0;
begin
    return p1;
end$$ language plpgsql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "doubledecrement",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
declare v pos_int := 0;
begin
    return p1;
end",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 117,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 174,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 92,
                    "names": [
                      {
                        "String": {
                          "sval": "pos_int",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                  "name": "p1",
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 109,
              "names": [
                {
                  "String": {
                    "sval": "pos_int",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 235 1`] = `
[
  " -- good

-- Check that ALTER DOMAIN tests columns of derived types

create domain posint as int4",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "domainname": [
              {
                "String": {
                  "sval": "posint",
                },
              },
            ],
            "typeName": {
              "location": 93,
              "names": [
                {
                  "String": {
                    "sval": "int4",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 242 1`] = `
[
  "create type ddtest1 as (f1 posint)",
  {
    "stmts": [
      {
        "stmt": {
          "CompositeTypeStmt": {
            "coldeflist": [
              {
                "ColumnDef": {
                  "colname": "f1",
                  "is_local": true,
                  "location": 24,
                  "typeName": {
                    "location": 27,
                    "names": [
                      {
                        "String": {
                          "sval": "posint",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
            "typevar": {
              "location": 12,
              "relname": "ddtest1",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 249 1`] = `
[
  "create table ddtest2(f1 ddtest1[])",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "ddtest2",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "f1",
                  "is_local": true,
                  "location": 21,
                  "typeName": {
                    "arrayBounds": [
                      {
                        "Integer": {},
                      },
                    ],
                    "location": 24,
                    "names": [
                      {
                        "String": {
                          "sval": "ddtest1",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 255 1`] = `
[
  "create domain ddtest1d as ddtest1",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "domainname": [
              {
                "String": {
                  "sval": "ddtest1d",
                },
              },
            ],
            "typeName": {
              "location": 26,
              "names": [
                {
                  "String": {
                    "sval": "ddtest1",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 263 1`] = `
[
  "create domain ddtest1d as ddtest1[]",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "domainname": [
              {
                "String": {
                  "sval": "ddtest1d",
                },
              },
            ],
            "typeName": {
              "arrayBounds": [
                {
                  "Integer": {},
                },
              ],
              "location": 26,
              "names": [
                {
                  "String": {
                    "sval": "ddtest1",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 271 1`] = `
[
  "create type rposint as range (subtype = posint)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateRangeStmt": {
            "params": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 40,
                      "names": [
                        {
                          "String": {
                            "sval": "posint",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "subtype",
                  "location": 30,
                },
              },
            ],
            "typeName": [
              {
                "String": {
                  "sval": "rposint",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 278 1`] = `
[
  "alter domain posint add constraint c1 check(value >= 0)",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "def": {
              "Constraint": {
                "conname": "c1",
                "contype": "CONSTR_CHECK",
                "initially_valid": true,
                "location": 24,
                "raw_expr": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "value",
                            },
                          },
                        ],
                        "location": 44,
                      },
                    },
                    "location": 50,
                    "name": [
                      {
                        "String": {
                          "sval": ">=",
                        },
                      },
                    ],
                    "rexpr": {
                      "A_Const": {
                        "ival": {},
                        "location": 53,
                      },
                    },
                  },
                },
              },
            },
            "subtype": "C",
            "typeName": [
              {
                "String": {
                  "sval": "posint",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 280 1`] = `
[
  "create domain posint2 as posint check (value % 2 = 0)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "constraints": [
              {
                "Constraint": {
                  "contype": "CONSTR_CHECK",
                  "initially_valid": true,
                  "location": 32,
                  "raw_expr": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "A_Expr": {
                          "kind": "AEXPR_OP",
                          "lexpr": {
                            "ColumnRef": {
                              "fields": [
                                {
                                  "String": {
                                    "sval": "value",
                                  },
                                },
                              ],
                              "location": 39,
                            },
                          },
                          "location": 45,
                          "name": [
                            {
                              "String": {
                                "sval": "%",
                              },
                            },
                          ],
                          "rexpr": {
                            "A_Const": {
                              "ival": {
                                "ival": 2,
                              },
                              "location": 47,
                            },
                          },
                        },
                      },
                      "location": 49,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "ival": {},
                          "location": 51,
                        },
                      },
                    },
                  },
                },
              },
            ],
            "domainname": [
              {
                "String": {
                  "sval": "posint2",
                },
              },
            ],
            "typeName": {
              "location": 25,
              "names": [
                {
                  "String": {
                    "sval": "posint",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 282 1`] = `
[
  " -- fail
insert into ddtest2 values(-2)",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 21,
              "relname": "ddtest2",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "ival": {},
                            "location": 36,
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 286 1`] = `
[
  "alter domain posint add constraint c2 check(value >= 10)",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "def": {
              "Constraint": {
                "conname": "c2",
                "contype": "CONSTR_CHECK",
                "initially_valid": true,
                "location": 24,
                "raw_expr": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "value",
                            },
                          },
                        ],
                        "location": 44,
                      },
                    },
                    "location": 50,
                    "name": [
                      {
                        "String": {
                          "sval": ">=",
                        },
                      },
                    ],
                    "rexpr": {
                      "A_Const": {
                        "ival": {
                          "ival": 10,
                        },
                        "location": 53,
                      },
                    },
                  },
                },
              },
            },
            "subtype": "C",
            "typeName": [
              {
                "String": {
                  "sval": "posint",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 286 2`] = `
[
  " -- fail
alter domain posint add constraint c2 check(value > 0)",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "def": {
              "Constraint": {
                "conname": "c2",
                "contype": "CONSTR_CHECK",
                "initially_valid": true,
                "location": 33,
                "raw_expr": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "value",
                            },
                          },
                        ],
                        "location": 53,
                      },
                    },
                    "location": 59,
                    "name": [
                      {
                        "String": {
                          "sval": ">",
                        },
                      },
                    ],
                    "rexpr": {
                      "A_Const": {
                        "ival": {},
                        "location": 61,
                      },
                    },
                  },
                },
              },
            },
            "subtype": "C",
            "typeName": [
              {
                "String": {
                  "sval": "posint",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 287 1`] = `
[
  " -- OK

drop table ddtest2",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "ddtest2",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 305 1`] = `
[
  "select array_elem_check(121.00)",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "A_Const": {
                            "fval": {
                              "fval": "121.00",
                            },
                            "location": 24,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "array_elem_check",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 308 1`] = `
[
  "create domain mynums as numeric(4,2)[1]",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "domainname": [
              {
                "String": {
                  "sval": "mynums",
                },
              },
            ],
            "typeName": {
              "arrayBounds": [
                {
                  "Integer": {
                    "ival": 1,
                  },
                },
              ],
              "location": 24,
              "names": [
                {
                  "String": {
                    "sval": "pg_catalog",
                  },
                },
                {
                  "String": {
                    "sval": "numeric",
                  },
                },
              ],
              "typemod": -1,
              "typmods": [
                {
                  "A_Const": {
                    "ival": {
                      "ival": 4,
                    },
                    "location": 32,
                  },
                },
                {
                  "A_Const": {
                    "ival": {
                      "ival": 2,
                    },
                    "location": 34,
                  },
                },
              ],
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 310 1`] = `
[
  "create or replace function array_elem_check(numeric) returns numeric as $$
declare
  x mynums;
begin
  x[1] := $1;
  return x[1];
end$$ language plpgsql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "array_elem_check",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
declare
  x mynums;
begin
  x[1] := $1;
  return x[1];
end",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 69,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 136,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 44,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "numeric",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 61,
              "names": [
                {
                  "String": {
                    "sval": "pg_catalog",
                  },
                },
                {
                  "String": {
                    "sval": "numeric",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 321 1`] = `
[
  "create domain mynums2 as mynums",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "domainname": [
              {
                "String": {
                  "sval": "mynums2",
                },
              },
            ],
            "typeName": {
              "location": 25,
              "names": [
                {
                  "String": {
                    "sval": "mynums",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 334 1`] = `
[
  "drop function array_elem_check(numeric)",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "ObjectWithArgs": {
                  "objargs": [
                    {
                      "TypeName": {
                        "location": 31,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "numeric",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  ],
                  "objfuncargs": [
                    {
                      "FunctionParameter": {
                        "argType": {
                          "location": 31,
                          "names": [
                            {
                              "String": {
                                "sval": "pg_catalog",
                              },
                            },
                            {
                              "String": {
                                "sval": "numeric",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                        "mode": "FUNC_PARAM_DEFAULT",
                      },
                    },
                  ],
                  "objname": [
                    {
                      "String": {
                        "sval": "array_elem_check",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_FUNCTION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 342 1`] = `
[
  "select array[1,2]::orderedpair",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "TypeCast": {
                      "arg": {
                        "A_ArrayExpr": {
                          "elements": [
                            {
                              "A_Const": {
                                "ival": {
                                  "ival": 1,
                                },
                                "location": 13,
                              },
                            },
                            {
                              "A_Const": {
                                "ival": {
                                  "ival": 2,
                                },
                                "location": 15,
                              },
                            },
                          ],
                          "location": 7,
                        },
                      },
                      "location": 17,
                      "typeName": {
                        "location": 19,
                        "names": [
                          {
                            "String": {
                              "sval": "orderedpair",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 343 1`] = `
[
  "  -- fail

create temp table op (f1 orderedpair)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 29,
              "relname": "op",
              "relpersistence": "t",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "f1",
                  "is_local": true,
                  "location": 33,
                  "typeName": {
                    "location": 36,
                    "names": [
                      {
                        "String": {
                          "sval": "orderedpair",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 347 1`] = `
[
  "  -- fail

update op set f1[2] = 3",
  {
    "stmts": [
      {
        "stmt": {
          "UpdateStmt": {
            "relation": {
              "inh": true,
              "location": 18,
              "relname": "op",
              "relpersistence": "p",
            },
            "targetList": [
              {
                "ResTarget": {
                  "indirection": [
                    {
                      "A_Indices": {
                        "uidx": {
                          "A_Const": {
                            "ival": {
                              "ival": 2,
                            },
                            "location": 28,
                          },
                        },
                      },
                    },
                  ],
                  "location": 25,
                  "name": "f1",
                  "val": {
                    "A_Const": {
                      "ival": {
                        "ival": 3,
                      },
                      "location": 33,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 350 1`] = `
[
  "  -- fail
select * from op",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 24,
                  "relname": "op",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 17,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 17,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 353 1`] = `
[
  "create or replace function array_elem_check(int) returns int as $$
declare
  x orderedpair := '{1,2}';
begin
  x[2] := $1;
  return x[2];
end$$ language plpgsql",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "array_elem_check",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
declare
  x orderedpair := '{1,2}';
begin
  x[2] := $1;
  return x[2];
end",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 61,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 144,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 44,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
            "replace": true,
            "returnType": {
              "location": 57,
              "names": [
                {
                  "String": {
                    "sval": "pg_catalog",
                  },
                },
                {
                  "String": {
                    "sval": "int4",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 364 1`] = `
[
  "drop function array_elem_check(int)",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "ObjectWithArgs": {
                  "objargs": [
                    {
                      "TypeName": {
                        "location": 31,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "int4",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  ],
                  "objfuncargs": [
                    {
                      "FunctionParameter": {
                        "argType": {
                          "location": 31,
                          "names": [
                            {
                              "String": {
                                "sval": "pg_catalog",
                              },
                            },
                            {
                              "String": {
                                "sval": "int4",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                        "mode": "FUNC_PARAM_DEFAULT",
                      },
                    },
                  ],
                  "objname": [
                    {
                      "String": {
                        "sval": "array_elem_check",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_FUNCTION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 372 1`] = `
[
  "create function dom_check(int) returns di as $$
declare d di;
begin
  d := $1::di;
  return d;
end
$$ language plpgsql immutable",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "dom_check",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
declare d di;
begin
  d := $1::di;
  return d;
end
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 42,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "plpgsql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 102,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "immutable",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "volatility",
                  "location": 119,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 26,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
            "returnType": {
              "location": 39,
              "names": [
                {
                  "String": {
                    "sval": "di",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 380 1`] = `
[
  "select dom_check(0)",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "A_Const": {
                            "ival": {},
                            "location": 17,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "dom_check",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 382 1`] = `
[
  "alter domain di add constraint pos check (value > 0)",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "def": {
              "Constraint": {
                "conname": "pos",
                "contype": "CONSTR_CHECK",
                "initially_valid": true,
                "location": 20,
                "raw_expr": {
                  "A_Expr": {
                    "kind": "AEXPR_OP",
                    "lexpr": {
                      "ColumnRef": {
                        "fields": [
                          {
                            "String": {
                              "sval": "value",
                            },
                          },
                        ],
                        "location": 42,
                      },
                    },
                    "location": 48,
                    "name": [
                      {
                        "String": {
                          "sval": ">",
                        },
                      },
                    ],
                    "rexpr": {
                      "A_Const": {
                        "ival": {},
                        "location": 50,
                      },
                    },
                  },
                },
              },
            },
            "subtype": "C",
            "typeName": [
              {
                "String": {
                  "sval": "di",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 384 1`] = `
[
  " -- fail

alter domain di drop constraint pos",
  {
    "stmts": [
      {
        "stmt": {
          "AlterDomainStmt": {
            "behavior": "DROP_RESTRICT",
            "name": "pos",
            "subtype": "X",
            "typeName": [
              {
                "String": {
                  "sval": "di",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 410 1`] = `
[
  "drop function dom_check(int)",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "ObjectWithArgs": {
                  "objargs": [
                    {
                      "TypeName": {
                        "location": 24,
                        "names": [
                          {
                            "String": {
                              "sval": "pg_catalog",
                            },
                          },
                          {
                            "String": {
                              "sval": "int4",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  ],
                  "objfuncargs": [
                    {
                      "FunctionParameter": {
                        "argType": {
                          "location": 24,
                          "names": [
                            {
                              "String": {
                                "sval": "pg_catalog",
                              },
                            },
                            {
                              "String": {
                                "sval": "int4",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                        "mode": "FUNC_PARAM_DEFAULT",
                      },
                    },
                  ],
                  "objname": [
                    {
                      "String": {
                        "sval": "dom_check",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_FUNCTION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 412 1`] = `
[
  "drop domain di",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "TypeName": {
                  "location": 12,
                  "names": [
                    {
                      "String": {
                        "sval": "di",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_DOMAIN",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 423 1`] = `
[
  "create domain inotnull int
  check (sql_is_distinct_from(value, null))",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "constraints": [
              {
                "Constraint": {
                  "contype": "CONSTR_CHECK",
                  "initially_valid": true,
                  "location": 29,
                  "raw_expr": {
                    "FuncCall": {
                      "args": [
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "value",
                                },
                              },
                            ],
                            "location": 57,
                          },
                        },
                        {
                          "A_Const": {
                            "isnull": true,
                            "location": 64,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "sql_is_distinct_from",
                          },
                        },
                      ],
                      "location": 36,
                    },
                  },
                },
              },
            ],
            "domainname": [
              {
                "String": {
                  "sval": "inotnull",
                },
              },
            ],
            "typeName": {
              "location": 23,
              "names": [
                {
                  "String": {
                    "sval": "pg_catalog",
                  },
                },
                {
                  "String": {
                    "sval": "int4",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 429 1`] = `
[
  "create table dom_table (x inotnull)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "dom_table",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "x",
                  "is_local": true,
                  "location": 24,
                  "typeName": {
                    "location": 26,
                    "names": [
                      {
                        "String": {
                          "sval": "inotnull",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 434 1`] = `
[
  "drop table dom_table",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "dom_table",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`domain.sql > line 444 1`] = `
[
  "  -- alter type also works
drop domain testdomain3",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "TypeName": {
                  "location": 39,
                  "names": [
                    {
                      "String": {
                        "sval": "testdomain3",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_DOMAIN",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;
