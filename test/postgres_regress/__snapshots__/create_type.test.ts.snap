// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`create_type.sql > line 35 1`] = `
[
  "CREATE TYPE widget (
   internallength = 24,
   input = widget_in,
   output = widget_out,
   typmod_in = numerictypmodin,
   typmod_out = numerictypmodout,
   alignment = double
)",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "definition": [
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 24,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "internallength",
                  "location": 24,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 56,
                      "names": [
                        {
                          "String": {
                            "sval": "widget_in",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "input",
                  "location": 48,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 79,
                      "names": [
                        {
                          "String": {
                            "sval": "widget_out",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "output",
                  "location": 70,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 106,
                      "names": [
                        {
                          "String": {
                            "sval": "numerictypmodin",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "typmod_in",
                  "location": 94,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 139,
                      "names": [
                        {
                          "String": {
                            "sval": "numerictypmodout",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "typmod_out",
                  "location": 126,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 172,
                      "names": [
                        {
                          "String": {
                            "sval": "double",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "alignment",
                  "location": 160,
                },
              },
            ],
            "defnames": [
              {
                "String": {
                  "sval": "widget",
                },
              },
            ],
            "kind": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 44 1`] = `
[
  "CREATE TYPE city_budget (
   internallength = 16,
   input = int44in,
   output = int44out,
   element = int4,
   category = 'x',   -- just to verify the system will take it
   preferred = true  -- ditto
)",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "definition": [
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 16,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "internallength",
                  "location": 29,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 61,
                      "names": [
                        {
                          "String": {
                            "sval": "int44in",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "input",
                  "location": 53,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 82,
                      "names": [
                        {
                          "String": {
                            "sval": "int44out",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "output",
                  "location": 73,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 105,
                      "names": [
                        {
                          "String": {
                            "sval": "int4",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "element",
                  "location": 95,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "x",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "category",
                  "location": 114,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "true",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "preferred",
                  "location": 177,
                },
              },
            ],
            "defnames": [
              {
                "String": {
                  "sval": "city_budget",
                },
              },
            ],
            "kind": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 54 1`] = `
[
  "CREATE TYPE shell",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "defnames": [
              {
                "String": {
                  "sval": "shell",
                },
              },
            ],
            "kind": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 55 1`] = `
[
  "   -- fail, type already present
DROP TYPE shell",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "TypeName": {
                  "location": 43,
                  "names": [
                    {
                      "String": {
                        "sval": "shell",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 57 1`] = `
[
  "     -- fail, type not exist

-- also, let's leave one around for purposes of pg_dump testing
CREATE TYPE myshell",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "defnames": [
              {
                "String": {
                  "sval": "myshell",
                },
              },
            ],
            "kind": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 68 1`] = `
[
  "CREATE TYPE int42",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "defnames": [
              {
                "String": {
                  "sval": "int42",
                },
              },
            ],
            "kind": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 72 1`] = `
[
  "CREATE FUNCTION int42_in(cstring)
   RETURNS int42
   AS 'int4in'
   LANGUAGE internal STRICT IMMUTABLE",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "int42_in",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "int4in",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 54,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "internal",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 69,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Boolean": {
                      "boolval": true,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "strict",
                  "location": 87,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "immutable",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "volatility",
                  "location": 94,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 25,
                    "names": [
                      {
                        "String": {
                          "sval": "cstring",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
            "returnType": {
              "location": 45,
              "names": [
                {
                  "String": {
                    "sval": "int42",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 89 1`] = `
[
  "CREATE TYPE int42 (
   internallength = 4,
   input = int42_in,
   output = int42_out,
   alignment = int4,
   default = 42,
   passedbyvalue
)",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "definition": [
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 4,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "internallength",
                  "location": 23,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 54,
                      "names": [
                        {
                          "String": {
                            "sval": "int42_in",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "input",
                  "location": 46,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 76,
                      "names": [
                        {
                          "String": {
                            "sval": "int42_out",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "output",
                  "location": 67,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 102,
                      "names": [
                        {
                          "String": {
                            "sval": "int4",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "alignment",
                  "location": 90,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 42,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "default",
                  "location": 111,
                },
              },
              {
                "DefElem": {
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "passedbyvalue",
                  "location": 128,
                },
              },
            ],
            "defnames": [
              {
                "String": {
                  "sval": "int42",
                },
              },
            ],
            "kind": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 98 1`] = `
[
  "CREATE TYPE text_w_default (
   internallength = variable,
   input = text_w_default_in,
   output = text_w_default_out,
   alignment = int4,
   default = 'zippo'
)",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "definition": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 49,
                      "names": [
                        {
                          "String": {
                            "sval": "variable",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "internallength",
                  "location": 32,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 70,
                      "names": [
                        {
                          "String": {
                            "sval": "text_w_default_in",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "input",
                  "location": 62,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 101,
                      "names": [
                        {
                          "String": {
                            "sval": "text_w_default_out",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "output",
                  "location": 92,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 136,
                      "names": [
                        {
                          "String": {
                            "sval": "int4",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "alignment",
                  "location": 124,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "zippo",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "default",
                  "location": 145,
                },
              },
            ],
            "defnames": [
              {
                "String": {
                  "sval": "text_w_default",
                },
              },
            ],
            "kind": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 106 1`] = `
[
  "CREATE TABLE default_test (f1 text_w_default, f2 int42)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "default_test",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "f1",
                  "is_local": true,
                  "location": 27,
                  "typeName": {
                    "location": 30,
                    "names": [
                      {
                        "String": {
                          "sval": "text_w_default",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "f2",
                  "is_local": true,
                  "location": 46,
                  "typeName": {
                    "location": 49,
                    "names": [
                      {
                        "String": {
                          "sval": "int42",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 108 1`] = `
[
  "INSERT INTO default_test DEFAULT VALUES",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "default_test",
              "relpersistence": "p",
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 110 1`] = `
[
  "SELECT * FROM default_test",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 14,
                  "relname": "default_test",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 113 1`] = `
[
  "CREATE TYPE bogus_type",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "defnames": [
              {
                "String": {
                  "sval": "bogus_type",
                },
              },
            ],
            "kind": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 116 1`] = `
[
  "CREATE TYPE bogus_type (
	"Internallength" = 4,
	"Input" = int42_in,
	"Output" = int42_out,
	"Alignment" = int4,
	"Default" = 42,
	"Passedbyvalue"
)",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "definition": [
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 4,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "Internallength",
                  "location": 26,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 59,
                      "names": [
                        {
                          "String": {
                            "sval": "int42_in",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "Input",
                  "location": 49,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 81,
                      "names": [
                        {
                          "String": {
                            "sval": "int42_out",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "Output",
                  "location": 70,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 107,
                      "names": [
                        {
                          "String": {
                            "sval": "int4",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "Alignment",
                  "location": 93,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 42,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "Default",
                  "location": 114,
                },
              },
              {
                "DefElem": {
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "Passedbyvalue",
                  "location": 131,
                },
              },
            ],
            "defnames": [
              {
                "String": {
                  "sval": "bogus_type",
                },
              },
            ],
            "kind": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 126 1`] = `
[
  "CREATE TYPE bogus_type (INPUT = array_in,
    OUTPUT = array_out,
    ELEMENT = int,
    INTERNALLENGTH = 32)",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "definition": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 32,
                      "names": [
                        {
                          "String": {
                            "sval": "array_in",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "input",
                  "location": 24,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 55,
                      "names": [
                        {
                          "String": {
                            "sval": "array_out",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "output",
                  "location": 46,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 80,
                      "names": [
                        {
                          "String": {
                            "sval": "pg_catalog",
                          },
                        },
                        {
                          "String": {
                            "sval": "int4",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "element",
                  "location": 70,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Integer": {
                      "ival": 32,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "internallength",
                  "location": 89,
                },
              },
            ],
            "defnames": [
              {
                "String": {
                  "sval": "bogus_type",
                },
              },
            ],
            "kind": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 131 1`] = `
[
  "DROP TYPE bogus_type",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "TypeName": {
                  "location": 10,
                  "names": [
                    {
                      "String": {
                        "sval": "bogus_type",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 143 1`] = `
[
  "CREATE FUNCTION get_default_test() RETURNS SETOF default_test_row AS '
  SELECT * FROM default_test;
' LANGUAGE SQL",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "get_default_test",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "
  SELECT * FROM default_test;
",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 66,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "sql",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 103,
                },
              },
            ],
            "returnType": {
              "location": 49,
              "names": [
                {
                  "String": {
                    "sval": "default_test_row",
                  },
                },
              ],
              "setof": true,
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 147 1`] = `
[
  "SELECT * FROM get_default_test()",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeFunction": {
                  "functions": [
                    {
                      "List": {
                        "items": [
                          {
                            "FuncCall": {
                              "funcformat": "COERCE_EXPLICIT_CALL",
                              "funcname": [
                                {
                                  "String": {
                                    "sval": "get_default_test",
                                  },
                                },
                              ],
                              "location": 14,
                            },
                          },
                          {},
                        ],
                      },
                    },
                  ],
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 150 1`] = `
[
  "COMMENT ON TYPE bad IS 'bad comment'",
  {
    "stmts": [
      {
        "stmt": {
          "CommentStmt": {
            "comment": "bad comment",
            "object": {
              "TypeName": {
                "location": 16,
                "names": [
                  {
                    "String": {
                      "sval": "bad",
                    },
                  },
                ],
                "typemod": -1,
              },
            },
            "objtype": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 158 1`] = `
[
  "CREATE TYPE text_w_default",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "defnames": [
              {
                "String": {
                  "sval": "text_w_default",
                },
              },
            ],
            "kind": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 158 2`] = `
[
  "		-- should fail

DROP TYPE default_test_row CASCADE",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_CASCADE",
            "objects": [
              {
                "TypeName": {
                  "location": 28,
                  "names": [
                    {
                      "String": {
                        "sval": "default_test_row",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 162 1`] = `
[
  "DROP TABLE default_test",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "List": {
                  "items": [
                    {
                      "String": {
                        "sval": "default_test",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_TABLE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 165 1`] = `
[
  "CREATE TYPE base_type",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "defnames": [
              {
                "String": {
                  "sval": "base_type",
                },
              },
            ],
            "kind": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 171 1`] = `
[
  " -- error
DROP FUNCTION base_fn_out(base_type)",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "ObjectWithArgs": {
                  "objargs": [
                    {
                      "TypeName": {
                        "location": 36,
                        "names": [
                          {
                            "String": {
                              "sval": "base_type",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  ],
                  "objfuncargs": [
                    {
                      "FunctionParameter": {
                        "argType": {
                          "location": 36,
                          "names": [
                            {
                              "String": {
                                "sval": "base_type",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                        "mode": "FUNC_PARAM_DEFAULT",
                      },
                    },
                  ],
                  "objname": [
                    {
                      "String": {
                        "sval": "base_fn_out",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_FUNCTION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 172 1`] = `
[
  " -- error
DROP TYPE base_type",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "TypeName": {
                  "location": 20,
                  "names": [
                    {
                      "String": {
                        "sval": "base_type",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 173 1`] = `
[
  " -- error
DROP TYPE base_type CASCADE",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_CASCADE",
            "objects": [
              {
                "TypeName": {
                  "location": 20,
                  "names": [
                    {
                      "String": {
                        "sval": "base_type",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 179 1`] = `
[
  "     -- should fail
CREATE TEMP TABLE mytab (foo widget(42,13))",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 38,
              "relname": "mytab",
              "relpersistence": "t",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "foo",
                  "is_local": true,
                  "location": 45,
                  "typeName": {
                    "location": 49,
                    "names": [
                      {
                        "String": {
                          "sval": "widget",
                        },
                      },
                    ],
                    "typemod": -1,
                    "typmods": [
                      {
                        "A_Const": {
                          "ival": {
                            "ival": 42,
                          },
                          "location": 56,
                        },
                      },
                      {
                        "A_Const": {
                          "ival": {
                            "ival": 13,
                          },
                          "location": 59,
                        },
                      },
                    ],
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 182 1`] = `
[
  "SELECT format_type(atttypid,atttypmod) FROM pg_attribute
WHERE attrelid = 'mytab'::regclass AND attnum > 0",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 44,
                  "relname": "pg_attribute",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "atttypid",
                                },
                              },
                            ],
                            "location": 19,
                          },
                        },
                        {
                          "ColumnRef": {
                            "fields": [
                              {
                                "String": {
                                  "sval": "atttypmod",
                                },
                              },
                            ],
                            "location": 28,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "format_type",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "BoolExpr": {
                "args": [
                  {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "attrelid",
                              },
                            },
                          ],
                          "location": 63,
                        },
                      },
                      "location": 72,
                      "name": [
                        {
                          "String": {
                            "sval": "=",
                          },
                        },
                      ],
                      "rexpr": {
                        "TypeCast": {
                          "arg": {
                            "A_Const": {
                              "location": 74,
                              "sval": {
                                "sval": "mytab",
                              },
                            },
                          },
                          "location": 81,
                          "typeName": {
                            "location": 83,
                            "names": [
                              {
                                "String": {
                                  "sval": "regclass",
                                },
                              },
                            ],
                            "typemod": -1,
                          },
                        },
                      },
                    },
                  },
                  {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "ColumnRef": {
                          "fields": [
                            {
                              "String": {
                                "sval": "attnum",
                              },
                            },
                          ],
                          "location": 96,
                        },
                      },
                      "location": 103,
                      "name": [
                        {
                          "String": {
                            "sval": ">",
                          },
                        },
                      ],
                      "rexpr": {
                        "A_Const": {
                          "ival": {},
                          "location": 105,
                        },
                      },
                    },
                  },
                ],
                "boolop": "AND_EXPR",
                "location": 92,
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 186 1`] = `
[
  "INSERT INTO mytab VALUES ('(1,2,3)'), ('(-44,5.5,12)')",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "mytab",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 26,
                            "sval": {
                              "sval": "(1,2,3)",
                            },
                          },
                        },
                      ],
                    },
                  },
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 39,
                            "sval": {
                              "sval": "(-44,5.5,12)",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 190 1`] = `
[
  "select format_type('varchar'::regtype, 42)",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "TypeCast": {
                            "arg": {
                              "A_Const": {
                                "location": 19,
                                "sval": {
                                  "sval": "varchar",
                                },
                              },
                            },
                            "location": 28,
                            "typeName": {
                              "location": 30,
                              "names": [
                                {
                                  "String": {
                                    "sval": "regtype",
                                  },
                                },
                              ],
                              "typemod": -1,
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "ival": {
                              "ival": 42,
                            },
                            "location": 39,
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "format_type",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 196 1`] = `
[
  "SELECT pg_input_is_valid('(1,2,3)', 'widget')",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "FuncCall": {
                      "args": [
                        {
                          "A_Const": {
                            "location": 25,
                            "sval": {
                              "sval": "(1,2,3)",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "location": 36,
                            "sval": {
                              "sval": "widget",
                            },
                          },
                        },
                      ],
                      "funcformat": "COERCE_EXPLICIT_CALL",
                      "funcname": [
                        {
                          "String": {
                            "sval": "pg_input_is_valid",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 210 1`] = `
[
  "CREATE OPERATOR <% (
   leftarg = point,
   rightarg = widget,
   procedure = pt_in_widget,
   commutator = >% ,
   negator = >=%
)",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "definition": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 34,
                      "names": [
                        {
                          "String": {
                            "sval": "point",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "leftarg",
                  "location": 24,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 55,
                      "names": [
                        {
                          "String": {
                            "sval": "widget",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "rightarg",
                  "location": 44,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 78,
                      "names": [
                        {
                          "String": {
                            "sval": "pt_in_widget",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "procedure",
                  "location": 66,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": ">%",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "commutator",
                  "location": 95,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": ">=%",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "negator",
                  "location": 116,
                },
              },
            ],
            "defnames": [
              {
                "String": {
                  "sval": "<%",
                },
              },
            ],
            "kind": "OBJECT_OPERATOR",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 218 1`] = `
[
  "SELECT point '(1,2)' <% widget '(0,0,3)' AS t,
       point '(1,2)' <% widget '(0,0,1)' AS f",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "name": "t",
                  "val": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "TypeCast": {
                          "arg": {
                            "A_Const": {
                              "location": 13,
                              "sval": {
                                "sval": "(1,2)",
                              },
                            },
                          },
                          "location": -1,
                          "typeName": {
                            "location": 7,
                            "names": [
                              {
                                "String": {
                                  "sval": "point",
                                },
                              },
                            ],
                            "typemod": -1,
                          },
                        },
                      },
                      "location": 21,
                      "name": [
                        {
                          "String": {
                            "sval": "<%",
                          },
                        },
                      ],
                      "rexpr": {
                        "TypeCast": {
                          "arg": {
                            "A_Const": {
                              "location": 31,
                              "sval": {
                                "sval": "(0,0,3)",
                              },
                            },
                          },
                          "location": -1,
                          "typeName": {
                            "location": 24,
                            "names": [
                              {
                                "String": {
                                  "sval": "widget",
                                },
                              },
                            ],
                            "typemod": -1,
                          },
                        },
                      },
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 54,
                  "name": "f",
                  "val": {
                    "A_Expr": {
                      "kind": "AEXPR_OP",
                      "lexpr": {
                        "TypeCast": {
                          "arg": {
                            "A_Const": {
                              "location": 60,
                              "sval": {
                                "sval": "(1,2)",
                              },
                            },
                          },
                          "location": -1,
                          "typeName": {
                            "location": 54,
                            "names": [
                              {
                                "String": {
                                  "sval": "point",
                                },
                              },
                            ],
                            "typemod": -1,
                          },
                        },
                      },
                      "location": 68,
                      "name": [
                        {
                          "String": {
                            "sval": "<%",
                          },
                        },
                      ],
                      "rexpr": {
                        "TypeCast": {
                          "arg": {
                            "A_Const": {
                              "location": 78,
                              "sval": {
                                "sval": "(0,0,1)",
                              },
                            },
                          },
                          "location": -1,
                          "typeName": {
                            "location": 71,
                            "names": [
                              {
                                "String": {
                                  "sval": "widget",
                                },
                              },
                            ],
                            "typemod": -1,
                          },
                        },
                      },
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 222 1`] = `
[
  "CREATE TABLE city (
	name		name,
	location 	box,
	budget 		city_budget
)",
  {
    "stmts": [
      {
        "stmt": {
          "CreateStmt": {
            "oncommit": "ONCOMMIT_NOOP",
            "relation": {
              "inh": true,
              "location": 13,
              "relname": "city",
              "relpersistence": "p",
            },
            "tableElts": [
              {
                "ColumnDef": {
                  "colname": "name",
                  "is_local": true,
                  "location": 21,
                  "typeName": {
                    "location": 27,
                    "names": [
                      {
                        "String": {
                          "sval": "name",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "location",
                  "is_local": true,
                  "location": 34,
                  "typeName": {
                    "location": 44,
                    "names": [
                      {
                        "String": {
                          "sval": "box",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
              {
                "ColumnDef": {
                  "colname": "budget",
                  "is_local": true,
                  "location": 50,
                  "typeName": {
                    "location": 59,
                    "names": [
                      {
                        "String": {
                          "sval": "city_budget",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 228 1`] = `
[
  "INSERT INTO city VALUES
('Podunk', '(1,2),(3,4)', '100,127,1000'),
('Gotham', '(1000,34),(1100,334)', '123456,127,-1000,6789')",
  {
    "stmts": [
      {
        "stmt": {
          "InsertStmt": {
            "override": "OVERRIDING_NOT_SET",
            "relation": {
              "inh": true,
              "location": 12,
              "relname": "city",
              "relpersistence": "p",
            },
            "selectStmt": {
              "SelectStmt": {
                "limitOption": "LIMIT_OPTION_DEFAULT",
                "op": "SETOP_NONE",
                "valuesLists": [
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 25,
                            "sval": {
                              "sval": "Podunk",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "location": 35,
                            "sval": {
                              "sval": "(1,2),(3,4)",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "location": 50,
                            "sval": {
                              "sval": "100,127,1000",
                            },
                          },
                        },
                      ],
                    },
                  },
                  {
                    "List": {
                      "items": [
                        {
                          "A_Const": {
                            "location": 68,
                            "sval": {
                              "sval": "Gotham",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "location": 78,
                            "sval": {
                              "sval": "(1000,34),(1100,334)",
                            },
                          },
                        },
                        {
                          "A_Const": {
                            "location": 102,
                            "sval": {
                              "sval": "123456,127,-1000,6789",
                            },
                          },
                        },
                      ],
                    },
                  },
                ],
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 232 1`] = `
[
  "TABLE city",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 6,
                  "relname": "city",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": -1,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "A_Star": {},
                        },
                      ],
                      "location": -1,
                    },
                  },
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 238 1`] = `
[
  "CREATE TYPE myvarchar",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "defnames": [
              {
                "String": {
                  "sval": "myvarchar",
                },
              },
            ],
            "kind": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 240 1`] = `
[
  "CREATE FUNCTION myvarcharin(cstring, oid, integer) RETURNS myvarchar
LANGUAGE internal IMMUTABLE PARALLEL SAFE STRICT AS 'varcharin'",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "myvarcharin",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "internal",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 69,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "immutable",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "volatility",
                  "location": 87,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "safe",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "parallel",
                  "location": 97,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Boolean": {
                      "boolval": true,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "strict",
                  "location": 111,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "varcharin",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 118,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 28,
                    "names": [
                      {
                        "String": {
                          "sval": "cstring",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 37,
                    "names": [
                      {
                        "String": {
                          "sval": "oid",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 42,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
            "returnType": {
              "location": 59,
              "names": [
                {
                  "String": {
                    "sval": "myvarchar",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 243 1`] = `
[
  "CREATE FUNCTION myvarcharout(myvarchar) RETURNS cstring
LANGUAGE internal IMMUTABLE PARALLEL SAFE STRICT AS 'varcharout'",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "myvarcharout",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "internal",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 56,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "immutable",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "volatility",
                  "location": 74,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "safe",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "parallel",
                  "location": 84,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Boolean": {
                      "boolval": true,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "strict",
                  "location": 98,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "varcharout",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 105,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 29,
                    "names": [
                      {
                        "String": {
                          "sval": "myvarchar",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
            "returnType": {
              "location": 48,
              "names": [
                {
                  "String": {
                    "sval": "cstring",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 246 1`] = `
[
  "CREATE FUNCTION myvarcharsend(myvarchar) RETURNS bytea
LANGUAGE internal STABLE PARALLEL SAFE STRICT AS 'varcharsend'",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "myvarcharsend",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "internal",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 55,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "stable",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "volatility",
                  "location": 73,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "safe",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "parallel",
                  "location": 80,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Boolean": {
                      "boolval": true,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "strict",
                  "location": 94,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "varcharsend",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 101,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 30,
                    "names": [
                      {
                        "String": {
                          "sval": "myvarchar",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
            "returnType": {
              "location": 49,
              "names": [
                {
                  "String": {
                    "sval": "bytea",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 249 1`] = `
[
  "CREATE FUNCTION myvarcharrecv(internal, oid, integer) RETURNS myvarchar
LANGUAGE internal STABLE PARALLEL SAFE STRICT AS 'varcharrecv'",
  {
    "stmts": [
      {
        "stmt": {
          "CreateFunctionStmt": {
            "funcname": [
              {
                "String": {
                  "sval": "myvarcharrecv",
                },
              },
            ],
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "internal",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "language",
                  "location": 72,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "stable",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "volatility",
                  "location": 90,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "String": {
                      "sval": "safe",
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "parallel",
                  "location": 97,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "Boolean": {
                      "boolval": true,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "strict",
                  "location": 111,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "List": {
                      "items": [
                        {
                          "String": {
                            "sval": "varcharrecv",
                          },
                        },
                      ],
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "as",
                  "location": 118,
                },
              },
            ],
            "parameters": [
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 30,
                    "names": [
                      {
                        "String": {
                          "sval": "internal",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 40,
                    "names": [
                      {
                        "String": {
                          "sval": "oid",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
              {
                "FunctionParameter": {
                  "argType": {
                    "location": 45,
                    "names": [
                      {
                        "String": {
                          "sval": "pg_catalog",
                        },
                      },
                      {
                        "String": {
                          "sval": "int4",
                        },
                      },
                    ],
                    "typemod": -1,
                  },
                  "mode": "FUNC_PARAM_DEFAULT",
                },
              },
            ],
            "returnType": {
              "location": 62,
              "names": [
                {
                  "String": {
                    "sval": "myvarchar",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 253 1`] = `
[
  "ALTER TYPE myvarchar SET (storage = extended)",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTypeStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 36,
                      "names": [
                        {
                          "String": {
                            "sval": "extended",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "storage",
                  "location": 26,
                },
              },
            ],
            "typeName": [
              {
                "String": {
                  "sval": "myvarchar",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 255 1`] = `
[
  "CREATE TYPE myvarchar (
    input = myvarcharin,
    output = myvarcharout,
    alignment = integer,
    storage = main
)",
  {
    "stmts": [
      {
        "stmt": {
          "DefineStmt": {
            "definition": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 36,
                      "names": [
                        {
                          "String": {
                            "sval": "myvarcharin",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "input",
                  "location": 28,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 62,
                      "names": [
                        {
                          "String": {
                            "sval": "myvarcharout",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "output",
                  "location": 53,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 92,
                      "names": [
                        {
                          "String": {
                            "sval": "pg_catalog",
                          },
                        },
                        {
                          "String": {
                            "sval": "int4",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "alignment",
                  "location": 80,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 115,
                      "names": [
                        {
                          "String": {
                            "sval": "main",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "storage",
                  "location": 105,
                },
              },
            ],
            "defnames": [
              {
                "String": {
                  "sval": "myvarchar",
                },
              },
            ],
            "kind": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 263 1`] = `
[
  "CREATE DOMAIN myvarchardom AS myvarchar",
  {
    "stmts": [
      {
        "stmt": {
          "CreateDomainStmt": {
            "domainname": [
              {
                "String": {
                  "sval": "myvarchardom",
                },
              },
            ],
            "typeName": {
              "location": 30,
              "names": [
                {
                  "String": {
                    "sval": "myvarchar",
                  },
                },
              ],
              "typemod": -1,
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 265 1`] = `
[
  "ALTER TYPE myvarchar SET (storage = plain)",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTypeStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 36,
                      "names": [
                        {
                          "String": {
                            "sval": "plain",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "storage",
                  "location": 26,
                },
              },
            ],
            "typeName": [
              {
                "String": {
                  "sval": "myvarchar",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 269 1`] = `
[
  "ALTER TYPE myvarchar SET (
    send = myvarcharsend,
    receive = myvarcharrecv,
    typmod_in = varchartypmodin,
    typmod_out = varchartypmodout,
    -- these are bogus, but it's safe as long as we don't use the type:
    analyze = ts_typanalyze,
    subscript = raw_array_subscript_handler
)",
  {
    "stmts": [
      {
        "stmt": {
          "AlterTypeStmt": {
            "options": [
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 38,
                      "names": [
                        {
                          "String": {
                            "sval": "myvarcharsend",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "send",
                  "location": 31,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 67,
                      "names": [
                        {
                          "String": {
                            "sval": "myvarcharrecv",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "receive",
                  "location": 57,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 98,
                      "names": [
                        {
                          "String": {
                            "sval": "varchartypmodin",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "typmod_in",
                  "location": 86,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 132,
                      "names": [
                        {
                          "String": {
                            "sval": "varchartypmodout",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "typmod_out",
                  "location": 119,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 236,
                      "names": [
                        {
                          "String": {
                            "sval": "ts_typanalyze",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "analyze",
                  "location": 226,
                },
              },
              {
                "DefElem": {
                  "arg": {
                    "TypeName": {
                      "location": 267,
                      "names": [
                        {
                          "String": {
                            "sval": "raw_array_subscript_handler",
                          },
                        },
                      ],
                      "typemod": -1,
                    },
                  },
                  "defaction": "DEFELEM_UNSPEC",
                  "defname": "subscript",
                  "location": 255,
                },
              },
            ],
            "typeName": [
              {
                "String": {
                  "sval": "myvarchar",
                },
              },
            ],
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 279 1`] = `
[
  "SELECT typinput, typoutput, typreceive, typsend, typmodin, typmodout,
       typanalyze, typsubscript, typstorage
FROM pg_type WHERE typname = 'myvarchar'",
  {
    "stmts": [
      {
        "stmt": {
          "SelectStmt": {
            "fromClause": [
              {
                "RangeVar": {
                  "inh": true,
                  "location": 119,
                  "relname": "pg_type",
                  "relpersistence": "p",
                },
              },
            ],
            "limitOption": "LIMIT_OPTION_DEFAULT",
            "op": "SETOP_NONE",
            "targetList": [
              {
                "ResTarget": {
                  "location": 7,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "typinput",
                          },
                        },
                      ],
                      "location": 7,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 17,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "typoutput",
                          },
                        },
                      ],
                      "location": 17,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 28,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "typreceive",
                          },
                        },
                      ],
                      "location": 28,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 40,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "typsend",
                          },
                        },
                      ],
                      "location": 40,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 49,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "typmodin",
                          },
                        },
                      ],
                      "location": 49,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 59,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "typmodout",
                          },
                        },
                      ],
                      "location": 59,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 77,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "typanalyze",
                          },
                        },
                      ],
                      "location": 77,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 89,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "typsubscript",
                          },
                        },
                      ],
                      "location": 89,
                    },
                  },
                },
              },
              {
                "ResTarget": {
                  "location": 103,
                  "val": {
                    "ColumnRef": {
                      "fields": [
                        {
                          "String": {
                            "sval": "typstorage",
                          },
                        },
                      ],
                      "location": 103,
                    },
                  },
                },
              },
            ],
            "whereClause": {
              "A_Expr": {
                "kind": "AEXPR_OP",
                "lexpr": {
                  "ColumnRef": {
                    "fields": [
                      {
                        "String": {
                          "sval": "typname",
                        },
                      },
                    ],
                    "location": 133,
                  },
                },
                "location": 141,
                "name": [
                  {
                    "String": {
                      "sval": "=",
                    },
                  },
                ],
                "rexpr": {
                  "A_Const": {
                    "location": 143,
                    "sval": {
                      "sval": "myvarchar",
                    },
                  },
                },
              },
            },
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 296 1`] = `
[
  "DROP FUNCTION myvarcharsend(myvarchar)",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "ObjectWithArgs": {
                  "objargs": [
                    {
                      "TypeName": {
                        "location": 28,
                        "names": [
                          {
                            "String": {
                              "sval": "myvarchar",
                            },
                          },
                        ],
                        "typemod": -1,
                      },
                    },
                  ],
                  "objfuncargs": [
                    {
                      "FunctionParameter": {
                        "argType": {
                          "location": 28,
                          "names": [
                            {
                              "String": {
                                "sval": "myvarchar",
                              },
                            },
                          ],
                          "typemod": -1,
                        },
                        "mode": "FUNC_PARAM_DEFAULT",
                      },
                    },
                  ],
                  "objname": [
                    {
                      "String": {
                        "sval": "myvarcharsend",
                      },
                    },
                  ],
                },
              },
            ],
            "removeType": "OBJECT_FUNCTION",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 296 2`] = `
[
  "  -- fail
DROP TYPE myvarchar",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_RESTRICT",
            "objects": [
              {
                "TypeName": {
                  "location": 20,
                  "names": [
                    {
                      "String": {
                        "sval": "myvarchar",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;

exports[`create_type.sql > line 297 1`] = `
[
  "  -- fail

DROP TYPE myvarchar CASCADE",
  {
    "stmts": [
      {
        "stmt": {
          "DropStmt": {
            "behavior": "DROP_CASCADE",
            "objects": [
              {
                "TypeName": {
                  "location": 21,
                  "names": [
                    {
                      "String": {
                        "sval": "myvarchar",
                      },
                    },
                  ],
                  "typemod": -1,
                },
              },
            ],
            "removeType": "OBJECT_TYPE",
          },
        },
      },
    ],
    "version": 160001,
  },
]
`;
